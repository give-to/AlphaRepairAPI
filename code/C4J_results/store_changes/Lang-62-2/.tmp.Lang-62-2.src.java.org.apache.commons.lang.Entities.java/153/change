 REC_HTML40_ARRAY = {
static final String[][] HTML40_ARRAY =  [ ] ;
static final String[][] HTML40_ARRAY  = {
static final String[][] HTML40_ARRAY  = new String [ ] {
static final String[ ] {
static final String[][] HTML40_ARRAY  = new String [ ] ;
static final String[][] HTML40_ARRAY  = new String [ 10 ] ;
static final String[][] HTML40_ARRAY  = new String [ 3 ] [ ] ;
static final String[][] HTML40_ARRAY  = new String [ 8 ] [ ] ;
static final String[][] HTML40_ARRAY  = new String [ 1024 ] ;
static final String[][] HTML40_ARRAY  = new String [ 8 ] ;
static final String[][] HTML40_ARRAY  = new String [ 16 ] ;
static final String[][] HTML40_ARRAY  = new String [ 32 ] ;
static final String[][] HTML40_ARRAY  = new String [ 4 ] [ ] ;
static final String[][] HTML40_ARRAY  = new String [ 2 ] [ ] ;
static final String[][] HTML40_ARRAY  = new String [ ]
static final String[][] HTML40_ARRAY  = new String [ 0 ]
static final String[][] HTML40_ARRAY  = new String [ 4 ]
static final String[][] HTML40_ARRAY  = new String [ 4];
static final String[][] HTML40_ARRAY  = new String [ 3 ] [ ] {
static final String[][] HTML40_ARRAY  = null ;
 <DC> public
static final String[][] HTML40_ARRAY  = [ ]
static final String[][] HTML40_ARRAY  = new String [ 8 ] ; }
 <DC> public final
static final String[][] HTML40_ARRAY =  new String [ 4 ] { } ; try {
 private
 <DC>
static final String[][] HTML40_ARRAY  = EMPTY ;
static final String[][] HTML40_ARRAY  = new String [ 8 ] { }
static final String[][] HTML40_ARRAY  = new String [ 4 ] ; }
static final String[][] HTML40_ARRAY  = new String [ 32 ] ; }
static final String[][] HTML40_ARRAY  = [ ] {
static final String[][] HTML40_ARRAY  = new String [ 3 ] ; }
static final String[ ] [ ] [ ] [ ] [ ] {
static final String[][] HTML40_ARRAY  = String [ ] {
static final String[][]  symbols = new String [ 3 ] [ ] ;
static final String[][] HTML40_ARRAY  = new String [ 3 ] { } ; }
static final String[][ ] [ ] [ ] [ ] [ ] {
static final String[][] HTML40_ARRAY  = new String [ 3 ] { 0 } ;
static final String[][]  symbols = new String [ 4 ] [ ] ;
static final String[][] HTML40_ARRAY  = new StringArray (
static final String[][]  symbols = new String [ 2 ] [ ] ;
 global REC_HTML40_ARRAY = {
static final String[] symbols = [ ] ;
static final String[][] HTML40_ARRAY  = new String [ ] { "html40":
static final String[][] HTML40_ARRAY  = new StringArray();
. <DC> public final
static final String[][] HTML40_ARRAY  = new String [ ] { "html40",
static final String packageName = "greek" ;
static final  function f ( ) {
static final String namespace = "greek" ;
static final String[][] HTML40_ARRAY  = new String [ ] { "HTML40":
static final String[][]  symbols = [ ] ;
static final  void test ( ) {
, with hook = function= latin, U+0192 ISOtech -->
static final String packageName = "sgml" ;
 <DC> public synchronized
static final String[][]  symbols = new String [ ] ;
 const REC_HTML40_ARRAY = {
static final String[][] HTML40_ARRAY =  new String [ 4 ] { "html40":
 [Latin Extended-B] HTML40_ARRAY = {
static final String packageName = "greek"
static final String[][]  symbols = new String [ 3 ] [ ] {
static final  function f = function ( ) {
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] byte [ ] ;
static final String[][] HTML40_ARRAY =  new String [ 4 ] { "HTML40":
static final String[ ] [ ] [ ] [ ] [ ] =
, so we don't have to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] byte [ ] ;
static final String packageName = "greek" ; try {
, with hook = function= f, U+0192 ISOgrk3 -->
static final String[][]  symbols = new String [ ] {
, with hook = function= f, U+0192 ISOtech -->
. <DC>
static final String[][]  symbols = new String [ 10 ] ;
static final String[][ ] [ ] [ ] [ ] [ ] =
static final String[][] HTML40_ARRAY =  new String [ 4 ] { } ; do {
static final String namespace = "greek" ; try {
static final String[][]  symbols = new String [ 1024 ] ;
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] [ ] ;
static final String[][]  gsml_entities = null ;
, with hook = function= florin,
static final String[][]  symbols = new String [ 16 ] ;
static final String[][ ] [ ] cs = [ ] ;
static final String[][] HTML40_ARRAY =  new String [ 4 ] { } ; } ;
, so we don't have to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] [ ] ;
static final String[][]  symbols = new String [ 32 ] ;
static final String[][] HTML40_ARRAY  = { } ;
static final String ( ) { return "" ; }
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] byte [ ] {
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] bytes = null ;
static final String[][ ] [ ] [ ] {
static final  static function ( ) {
static final String[][]  symbols = new String [ 4 ] [ ] {
, so we don't have to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] byte [ ] {
 <DC> public static
static final  function f ( ) { return f ; }
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] [ ] [ ] ;
, so we don't have to do anything here. static final byte [ ] byte [ ] byte [ ] [ ] [ ] ;
static final String appName = appName ;
static final String[][ ] {
static final String[] symbols = new String[0] { } ;
 var REC_HTML40_ARRAY = {
. <DC> public synchronized
: var REC_HTML40_ARRAY = {
static final  function f ( ) { return
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] byte [ ]
static final String namespace = "greek"
static final String encoder = "" ;
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] ;
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] [ ]
, with hook = function= umlaut, U+0190 -->
static final  function f ( ) { return f ( ) ;
static final String[][]  [0] [0]
, so we don't have to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] [ ]
, with hook = function= umlaut, U+0192 -->
, with hook = function= umlaut, U+0191 -->
static final String[][]  symbols = new String [ 4 ]
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] ; private
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] [ ] =
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] [ ] {
static final String[], String[], String[]
static final String[ ] [ ] [ ] [ ] [ ] ;
static final String[][ ] [ ] SgmlEntities =
static final String[][ ] entities = null ;
, with hook = function= f, umlaut, U+0192 -->
, with hook = function= f, umlaut, U+0190 -->
static final String[] [ ] [ ] [ ] [ ] [ ]
, so we can use it REC_HTML40_ARRAY = {
static final String package = "greek" ;
static final String[] symbols = new String[0] [0];
, with hook = function= umlaut, U+0181 -->
static final  function f = function ( f, hook ) {
, so we don't need to do anything here. static final byte [ ] byteArray = new byte [ 8 ] ; private
static final String[] symbols = new String[]{0,0};
static final String[][ ] [ ] [ ] [ ] [ ] ;
, so we don't need to do anything here. static final byte [ ] byteArray = new byte [ 4 ] ; private
static final String[], String[ ] {
static final String package = "greek"
static final  function ( ) {
static final String[] symbols = new String[1024] ;
, with hook = function= florin, U+0192 ASCII -->
, so we don't need to do anything here. static final byte [ ] byteArray = new byte [ 16 ] ; private
. <DC> public static
static final  function f ( ) { return f ( ) }
 <DC> private
, so we don't need to do anything here. static final byte [ ] byte [ ] byte [ ] byte [ ] {
static final String[] symbols = new String[] { } ;
, with hook = function= umlaut, ISOtech -->
static final String[][]  symbols = new String [ 0 ]
static final String[][ ] entities = {
static final String[] symbols = new String[1024] {
. var REC_HTML40_ARRAY = {
, with hook = function= florin, U+0192 ISO -->
static final  function ( ) { return this ; } ;
, let sgml_entities ||= {
static final String[][ string[][ string[][ string[][]]
, with hook = function= latin, U+0192 -->
static final String[][ ] [ ] [ ] [ ] [ ] [
static final String[][]  symbols = new String [ ]
static final String[] symbols = new String[0][0] {
static final String[] symbols = new String[0] {
static final String[][ ] [ ] [ ] [ ] = {
static final  function f = function ( ) { return f ;
static final  function f ( ) { return f ; } ;
: const REC_HTML40_ARRAY = {
static final String[][]  gsml_entities =
static final String[][] [0] = {
static final String appName = "" ;
, with hook = function= latin, U+0191 -->
, with hook = function= latin, U+0190 -->
static final String[][] HTML40_ARRAY  = array ;
, with hook = function= f, U+0192 -->
, with hook = function(florin){
static final String[][] [0] = [0];
, with hook = function= florin, U+0190 ISO -->
 SEG_HTML40_ARRAY = {
. const REC_HTML40_ARRAY = {
static final String packageName = "greek" + name ;
static final String[] symbols = new String[]{0};
, with hook = function= f, U+0190 -->
, with hook = function= f, U+0191 -->
, so we don't need to do anything here. <DC> public
static final String[][ ] [ ] SgmlEntities ;
, so we don't have to do anything here. <DC> public
, with hook = function= latin, ISOtech -->
static final String[][ ] entities =
static final String[ ] entities =
static final  function f ( ) { return f ;
 <DC> private final
static final String[] [ ] symbols = null ;
static final String[][ ] [ ] [ ] [ ] result ;
static final String packageName = "greek" + prefix ;
, so we don't need to do anything with it. <DC> public
static final String packageName = "greek" + version ;
, with hook = function= latin,
static final  function ( function = function ( ) { return
, so we don't have to do anything with it. <DC> public
 <DC> final public
, so we don't need to do anything here. static final String[][] HTML40 = null ;
static final String[] symbols = new String[0] { }
static final String[], String[][]
static final String packageName = "greek" ; }
static final  void test ( ) throws IOException {
, so we don't need to do anything here. static final String[][] APP_ARRAY ;
, so we don't need to do anything here. static final byte [ ] byteArray = [ ] ;
, with hook = function= umlaut, U+0192
, so we don't need to do anything here. <DC> public final
static final String[] uppercase = [ ] ;
static final String packageName = "greek-export"
, so we can test it REC_HTML40_ARRAY = {
static final String[][ string[][ string[][]
static final String encoder = {
, with hook = function= latin, U+0192 ISOtech -->,
, we don't want to use it REC_HTML40_ARRAY = {
static final String[][]  symbols = new String [ 3 ] ; }
static final String[][]  symbols = new String [ 4 ] ; }
static final String packageName = "sgml" ; }
, with hook = function= latin, U+0192 ISOtech -->:
, let sgml_encities ||= {
static final  static function ( ) { return
static final  void test ( ) throws Exception {
, so we don't have to do anything with the package. <DC> public
, so we don't need to do anything with the package. <DC> public
static final  function f ( ) { return {
, so we don't need to do anything with it. <DC> public final
, so we don't need to do anything here. static final byte [ ] byteArray = null ;
static final String[] umlaut = [ ] ;
static  function= florin, U+0192
static final  function ( ) { return
static final  function f ( ) { } ;
, with hook = function= fnof,
, so we can use it here REC_HTML40_ARRAY = {
, so we don't have to do anything with it. <DC> public final
, with hook = function= latin, U+0192
, we don't need to do anything REC_HTML40_ARRAY = {
static final String[] L = new String[] {
, so we don't need to do anything here. <DC>
. <DC> private final
static final  function f ( ) { return this ;
static final String[][ string[][ string[][]]
static final String[][]  SgmlEntities =
static final  void test ( ) { try {
static final String encoder = null ;
static final String[][ ] [ ] [ ] ] = {
, so we don't have to do anything here. <DC>
, with hook = function= umlaut, U+0191
static final String[], String[]
, so we don't need to do anything here. <DC> public synchronized
static final  function f = function ( {
static final String[] symbols = new String[]{0,}
. <DC> final public
static final  function f ( ) { return this ; }
static  function= florin, U+0200 -->
 [Latin Extended-B, ISOtech] HTML40_ARRAY = {
, we don't need to use it REC_HTML40_ARRAY = {
static final  function f ( ) { return f ( )
, so we don't need to do anything with it. <DC>
, so we can use them REC_HTML40_ARRAY = {
static final  function ( ) { } ;
static final  static function ( ) { }
static  code:
static final String[][ ] [ ] [ ] result ;
 in the future REC_HTML40_ARRAY = {
, so we don't need to do anything with it. <DC> public synchronized
, so we don't need to do anything here. static final byte [ ] byteArray = null ; private
, so we don't need to do anything here. <DC> private
, so we can test REC_HTML40_ARRAY = {
static final String[][ ] [ ] [ ] =
, so we can use it. REC_HTML40_ARRAY = {
static final String[][] [0] {
, with hook = function= f, U+0192
static  function ( function = function ( ) {
static final String[] symbols = {
, so we don't have to do anything here. <DC> private
static final  function f = {
static final String[] symbols = null;
, so we can use REC_HTML40_ARRAY = {
 global SGE_HTML40_ARRAY = {
, so we don't have to do anything with the package. <DC> public final
, so we don't need to do anything here. static final byte [ ] HTML40_DATA ;
, so we don't need to do anything with it. <DC> private
static  function= florin, Sgml -->
, so we don't need to do anything with the package. <DC> public final
static final String[0];
, so we can use it later REC_HTML40_ARRAY = {
static  function= florin, U+0191
static final String[][]  SgmlEntities {
, so we don't need to do anything here. static final String[][] APP = null ;
, with hook = function= f, U+0200 -->
static final String packageName = "greek-export";
, so we don't need to create an array[] HTML40_ARRAY = {
, but not used in production REC_HTML40_ARRAY = {
static final String[][ string[][ string[][],
static final String namespace = "greek" ; }
, so we don't need to do anything here. static final byte [ ] HTML40 = null ;
, so we don't need to do anything with it, we can just use it directly. <DC> public
 [Latin Extended-B.php] HTML40_ARRAY = {
static final String[], String[],
, so we can use it later. REC_HTML40_ARRAY = {
static final String namespace = "greek-ns"
static final String pkgName ;
 [Latin Extended-B.html] HTML40_ARRAY = {
, so we don't have to do anything with the package. <DC> public synchronized
, so we don't need to do anything with it here. <DC> public final
 SGE_HTML40_ARRAY = {
, so we don't need to do anything with it, so we don't need to do anything with it here. private
static final String[][ ] [ ] encoder ;
 [Latin extended-b] HTML40_ARRAY = {
, so we don't need to do anything with it, so we don't need to do anything with it. private
, so we don't need to do anything with the package. <DC> public synchronized
, let sgml_encoding_= {
static  function= florin, U+0190
, with hook = function= florin(){
static final String[], String[][] {
, with hook = function= function= {
static final String[][]  SgmlEntities:
, with hook = function= f, Latin -->
, so we can use them later REC_HTML40_ARRAY = {
static final String[][ ] [ ] [ ] ;
, let sgml_entities_= {
, so we can use it later var REC_HTML40_ARRAY = {
static final String namespace = "greek-ns";
 [Latin Extended-B.txt] HTML40_ARRAY = {
, with hook = function= nsf,
, so we don't need to do anything here. private
static final String[][ ] [ ] {
 in test suite REC_HTML40_ARRAY = {
, with hook = function= f, U+0191
, so we don't need to do anything with it, so we don't want to do anything with it here. private
, so we don't have to create an array[] HTML40_ARRAY = {
, so we don't need to do anything with it, so we don't want to do anything with it. private
 [Latin Extended-B support] HTML40_ARRAY = {
, we don't need to create an array[] HTML40_ARRAY = {
, so we don't need to do anything with it, we can use it directly. <DC> public final
, so we don't need to do anything with it, so we don't need to do anything with it here. public
 [Latin Extended-B example] HTML40_ARRAY = {
, so we don't need to do anything with it, we can just use it. <DC> public final
, so we can use them here REC_HTML40_ARRAY = {
, with hook= function= florin -->
, so we don't need to do anything with it, so we don't need to do anything with it. public
static final  function f ( ) { return f (
 in test case REC_HTML40_ARRAY = {
static final  function ( ) { }
static final String ( ) { } ;
static final  function f ( ) { return f }
, with hook = function= ntf,
, so we don't have to do anything here. private
, so we don't need to use an array[] HTML40_ARRAY = {
static final String[], String[][];
static final String[][] entities:
, so we don't need to do anything with it. static final String [ ] EMPTY ;
static final String[][]  symbols = {
static final String namespace = "greek-ns":
, with hook = function= nf,
, so we don't have to do anything with the package itself. <DC> public final
, so we don't need to do anything with it, we can just use it. <DC> public synchronized
, so we don't need to do anything with it, so we don't want to do anything with it here. public
, so we don't need to do anything with it, we can use it directly. <DC> public synchronized
, so we don't need to do anything with it, so we don't have to do anything with it. private
, with hook = function= f, U+0190
static final String[] entities = {
, so we don't need to do anything with it, so we don't want to do anything with it. public
, so we don't need to do anything with it, so we don't need to do anything with it in tests private
static final String[] symbols = [ ] {
, so we don't need to do anything here private
, with hook = function= latin-short,
, with hook = function= florin,{
, with hook = function= latin with hook= {
static  function ( ) { return this ; } ;
 [Latin Extended-B, SGL] HTML40_ARRAY = {
static final String[] umlaut = null;
, let sgml_encities_= {
, with hook = function= florin;
static final String[][] HTML40_ARRAY  = [
 [Latin Extended-B code] HTML40_ARRAY = {
, with hook = function= latin_short,
, with hook = function= function(){
, with hook = function ( ){
 [Latin Extended-B implementation] HTML40_ARRAY = {
, so we don't need to do anything with it. static final String [ ] [ ] ;
, so we don't need to do anything with it. static final String [ ] [ ] {
, with hook = function= test,
, so we don't have to do anything with the package itself. <DC> public synchronized
, so we don't have to do anything with the package. <DC> public final synchronized
static final String encoder =
, so we don't need to use it private
, so we don't need to do any fancy stuff private
, so we don't have to do any fancy stuff private
, so we don't need to do anything here. public
, so we don't need to do anything with the package. <DC> public final synchronized
, with hook = function= florin-{
, so we don't need to do anything here. static final byte [ ] byteArray = { private
, so we don't have to do anything here private
 [Latin Extended-B examples] HTML40_ARRAY = {
static  function ( function= florin,
, so we can use the following:
, so we can use this REC_HTML40_ARRAY = {
, with hook = function= latin-ext,
, so we don't need to use it public
, so we don't need to do anything private
 [Latin Extended-B.pdf] HTML40_ARRAY = {
, with hook = function= florin({
, so we don't have to do anything with the package private
static  function ( function, hook = function ) {
 [Latin extended-b, f, hook] HTML40_ARRAY = {
static  function ( ) { return this ; }
, so we don't have to do anything with the package itself. <DC> public static
, with hook = function(greek){
, so we don't need to use it. private
static final String ( ) { }
static final String[] L = new String[]();
static final String[], String[], string[]
static final String entities =
 [Latin Extended-A] HTML40_ARRAY = {
, so we don't need to do anything with it. private
, so we don't need to do anything with the package private
static  function ( ) { return false ; }
, with hook = function= latin with hooks= {
: var gsml_package_= {
, so we don't need to do anything here public
static final  void test ( )
 [Latin Extended-B,...] HTML40_ARRAY = {
, so we don't need to do anything with it. static final String [ ] = null ;
, so we don't have to use it private
static final String[] symbols = [ ]
, so we use it REC_HTML40_ARRAY = {
, so we don't have to do anything private
, so we can use it private
static  function ( function = function ( ) { return
, so we don't need to use the array[] HTML40_ARRAY = {
static final String code ;
, so we can use it public
static final  function = {
, with hook = function= english,
, with hook = function(function(){
, so we don't need to do anything with it. static final String [ ] [ ],
, we don't want to use it[] HTML40_ARRAY = {
static  function ( function, hook = null ) {
 in the future global REC_HTML40_ARRAY = {
static final String enc = "" ;
 [WGS-84] HTML40_ARRAY = {
, with hook = function= f,
static final String[][]  symbols = [ ]
, with hook = function= latin-{
 [Latin Extended-B, SGM] HTML40_ARRAY = {
, so we don't have to do anything here public
, so we don't have to do this
, with hook = function= latin-ext -->
 [Latin Extended-B, SGF] HTML40_ARRAY = {
, so we can use it as an Array<String[][] HTML40_ARRAY = {
static final  function:
static final String encoder ;
 <DC> protected
, so we don't need to do anything with it. public
, with hook = function(app){
, so we don't have to use the array[] HTML40_ARRAY = {
static final  static function = {
, so we can use it as a List<String[][] HTML40_ARRAY = {
 [Latin Extended-B, WTF] HTML40_ARRAY = {
, with hook = function= main,
, so we don't need to do this
, so we can use it as an array[][] HTML40_ARRAY = {
, we need to create an array[] HTML40_ARRAY = {
, so we don't have to do anything with the package. private
, so we don't need to do anything with the package. private
static  function ( function = function ( function ) {
static  function ( ) { } ;
, so we don't have to do anything with the package public
, let sgml= {
, so we use an array[] HTML40_ARRAY = {
, so we use REC_HTML40_ARRAY = {
, so we don't need to use it
, with hook = function= hook= {
, we don't want to use the array[] HTML40_ARRAY = {
 purposes private
, so we can use it var entities= {
: const entities = `{
, let sgml2= {
, we don't want to use this[] HTML40_ARRAY = {
, with hook = function(function= {
, we don't need to use this[] HTML40_ARRAY = {
, we don't need to use the array[] HTML40_ARRAY = {
. const SEG_HTML40_ARRAY = {
, with hook = function== {
static final  function f ( )
static final  static void {
, so we can use it var ent= {
, with hook = function= f, with hook= {
, we don't need to use it[] HTML40_ARRAY = {
, with hook = function= latin L{
, we don't want to expose it[] HTML40_ARRAY = {
, for debug purposes SEG_HTML40_ARRAY = {
 in the future var REC_HTML40_ARRAY = {
, we don't want to use this code[] HTML40_ARRAY = {
, so we don't have to do anything with the package scope private
, with hook = function= latin ws= {
 [Latin Extended-B, F, Hook] HTML40_ARRAY = {
: var gsml_package ||= {
 var entities= {
, so we can use it as an Array[][] HTML40_ARRAY = {
, with hook = function(function{
, so we can use an array[] HTML40_ARRAY = {
, we don't want to use this package[] HTML40_ARRAY = {
, with hook = function= latin= {
, with hook = function= latin with app= {
, so we can use it in tests private
, with hook = function= latin{
static final String[0]
, so we don't have to use it
static final String[][][]
: const gsml= {
, with hook = function= module= {
static  function ( ) { return {
, so that we can use it as an array[][] HTML40_ARRAY = {
, with hook = function= function{
static  function ( function, hook = function {
, so we can use it as an object[][] HTML40_ARRAY = {
, so we can use it. private
static  code like this:
static  function ( ) { return
 [W3C] HTML40_ARRAY = {
static final String result ;
, so we can use it as a [][] HTML40_ARRAY = {
static  function ( ) { return this ;
static final String[][ ] [ ] = {
, so we don't need to create
, with hook = function= latin,{
, so that we can use it as an Array[][] HTML40_ARRAY = {
, so we can use it directly private
static final String code = {
. var SEG_HTML40_ARRAY = {
, let sgmls= {
: var gsml= {
 [optional] HTML40_ARRAY = {
, let gsml= {
, so we can use it as a byte[][] HTML40_ARRAY = {
static final String[][ ] [ ] result ;
, so we don't need to use
, so we can use it[] HTML40_ARRAY = {
, so that we can use it in [][] HTML40_ARRAY = {
, so we don't have to use
static final String[][]  Sgml2 {
, so we can use it as a char[][] HTML40_ARRAY = {
static final String[] gsml = {
, so that we can use it as an object[][] HTML40_ARRAY = {
, so we can use it as a [string][] HTML40_ARRAY = {
, let sgml3= {
, but not used in production public
, so that we can use it as a byte[][] HTML40_ARRAY = {
static  function ( ) { }
, so that we can use it as a char[][] HTML40_ARRAY = {
, so we can use it as a list<String[][] HTML40_ARRAY = {
, so we can use it as a DString[][] HTML40_ARRAY = {
 [Latin Extended-b] HTML40_ARRAY = {
static final String[][][][]
, so we can use it as a UString[][] HTML40_ARRAY = {
: var gsml2= {
static  function ( ) { return { }
 [Latin Extended-B, F, hook] HTML40_ARRAY = {
static  function ( ) { return function (
 [Latin Extended-B, F and Hook] HTML40_ARRAY = {
static  code like:
 var ent= {
static final String[][] HTML40_ARRAY  = {}
static  function ( ) { return true ;
static  function ( ) { return null ;
static final String sgml
 [Latin Extended-B, F, C] HTML40_ARRAY = {
 [WGS-1] HTML40_ARRAY = {
 public
, so we can use it as an XMLString[][] HTML40_ARRAY = {
 in the future private
, so we can use it as a DocString[][] HTML40_ARRAY = {
, so we can use a list<String[][] HTML40_ARRAY = {
, so we can use it as an ArrayString[][] HTML40_ARRAY = {
static  function ( ) { return [
static  code for the following cases:
, use as an array[] HTML40_ARRAY = {
, so we can use it as an array<String[][] HTML40_ARRAY = {
, so it's a list<String[][] HTML40_ARRAY = {
, so we can test it public
, but not used in production private
, so that we can use it as a UString[][] HTML40_ARRAY = {
, so we can test it[] HTML40_ARRAY = {
, let encoder= {
, so we can use it as a [[][] HTML40_ARRAY = {
 [W3C-2015] HTML40_ARRAY = {
, so we can use a list ofString[][] HTML40_ARRAY = {
 in [html40] HTML40_ARRAY = {
, so we can use it as a [Array][] HTML40_ARRAY = {
static  code for the following:
static final String[][] [0] =
, so we can use the array[] HTML40_ARRAY = {
, so we can use a string[] HTML40_ARRAY = {
 in the future SGE_HTML40_ARRAY = {
, so we can use an object[] HTML40_ARRAY = {
, so that we can use UString[][] HTML40_ARRAY = {
, for example, [1][2][] HTML40_ARRAY = {
, like this: [[][][][] HTML40_ARRAY = {
 in the future SEG_HTML40_ARRAY = {
, so we can use it as Array[][] HTML40_ARRAY = {
: const gs = `{
, so we can use SGEHTML40_ARRAY = {
, so we can use it as a [-][] HTML40_ARRAY = {
, so we can use it as JSON[][] HTML40_ARRAY = {
, so that we can use it in [-][] HTML40_ARRAY = {
: const encoder= {
static  functions:
 in [1,2] HTML40_ARRAY = {
static  code in the following format:
static final  static function {
static final String[] symbols =
, so that we can use the UString[][] HTML40_ARRAY = {
 [2] HTML40_ARRAY = {
, so that we can use an ArrayString[][] HTML40_ARRAY = {
, so that we can use a char[][] HTML40_ARRAY = {
, so that we can use a byte[][] HTML40_ARRAY = {
, so we can use it as []String[][] HTML40_ARRAY = {
 const entities= {
, for example, [x][y][] HTML40_ARRAY = {
 (function(app){
, so we can use them[] HTML40_ARRAY = {
static final  code:
static final String entity ;
, so we can use this[] HTML40_ARRAY = {
, so we can use it as array[][] HTML40_ARRAY = {
 [WGS-3] HTML40_ARRAY = {
: function (package){
, so that we can use []String[][] HTML40_ARRAY = {
static final String[][ ] entities ;
static final String[][ ] [ ] =
: private
, so we use array[] HTML40_ARRAY = {
, so we can use an ArrayString[][] HTML40_ARRAY = {
, with hook = function={
static final String[][]
, so we can use a char[][] HTML40_ARRAY = {
 [WGS-8] HTML40_ARRAY = {
static final String[] entities:
: [[][][][] HTML40_ARRAY = {
, [[][][][] HTML40_ARRAY = {
, for example, [1][3][] HTML40_ARRAY = {
, so it's a list ofString[][] HTML40_ARRAY = {
, for example: [][][][] HTML40_ARRAY = {
 (function(function(){
, so we can use a byte[][] HTML40_ARRAY = {
, with hook=function{
: const entities= {
, for example, [1][1][] HTML40_ARRAY = {
, for example, [][][][] HTML40_ARRAY = {
, for example: [[][][] HTML40_ARRAY = {
, so that we can use ^[][] HTML40_ARRAY = {
, see html40[] HTML40_ARRAY = {
 [see above] HTML40_ARRAY = {
, for example, [[][][] HTML40_ARRAY = {
 with html40[] HTML40_ARRAY = {
, so we can use the following code:final String[][] HTML40_ARRAY = {
static final String[] entities = [];
 in tests private
: [][][][] HTML40_ARRAY = {
static final String output ;
 var g= {
, let entities= {
, so we don't need to use it (final String[][] HTML40_ARRAY = {
, so we can use the following:final String[][] HTML40_ARRAY = {
, so we don't need to do this (final String[][] HTML40_ARRAY = {
, so we don't have to do this (final String[][] HTML40_ARRAY = {
static  code like this
, with html40[] HTML40_ARRAY = {
, so we don't have to do this...final String[][] HTML40_ARRAY = {
, so we can use UString[][] HTML40_ARRAY = {
 [1.1] HTML40_ARRAY = {
 [yet] HTML40_ARRAY = {
, so we can use []String[][] HTML40_ARRAY = {
, so we use string[] HTML40_ARRAY = {
: [[][][] HTML40_ARRAY = {
static final String code =
static final  void {
, so it's a [String[][] HTML40_ARRAY = {
, so it's a []String[][] HTML40_ARRAY = {
, use as an object[] HTML40_ARRAY = {
, let gsms= {
, so that we can use char[][] HTML40_ARRAY = {
, [[][][] HTML40_ARRAY = {
 [][][][] HTML40_ARRAY = {
, so we can use the following...final String[][] HTML40_ARRAY = {
: return function (){
, so that we can use *[][] HTML40_ARRAY = {
, so we don't need to use it "final String[][] HTML40_ARRAY = {
 [1-3] HTML40_ARRAY = {
 purposes public
, [][][][] HTML40_ARRAY = {
 [1.0] HTML40_ARRAY = {
: [][][] HTML40_ARRAY = {
 const ent= {
 [[][][] HTML40_ARRAY = {
 in [2] HTML40_ARRAY = {
, let entites= {
 in [test] HTML40_ARRAY = {
 in [END] HTML40_ARRAY = {
, so we can do this:final String[][] HTML40_ARRAY = {
, so it's an ArrayString[][] HTML40_ARRAY = {
 [see below] HTML40_ARRAY = {
: [[[][][][] HTML40_ARRAY = {
, use in tests[] HTML40_ARRAY = {
static final String[] result =
 [[][][][] HTML40_ARRAY = {
, so we can use the following code (final String[][] HTML40_ARRAY = {
static  code for example:
 [][][] HTML40_ARRAY = {
, use as a string[] HTML40_ARRAY = {
static  code in the following format
: function ( ){
static  code for the following
, as an array<String[][] HTML40_ARRAY = {
, as a char[][] HTML40_ARRAY = {
, as a List<String[][] HTML40_ARRAY = {
, use as array[] HTML40_ARRAY = {
, for example: [][][] HTML40_ARRAY = {
static  code for this package:
. private
 with the following code[] HTML40_ARRAY = {
, so we can use it (final String[][] HTML40_ARRAY = {
 [example] HTML40_ARRAY = {
: function ("){
 [1] HTML40_ARRAY = {
static final String[][]  entities = [];
 with the following
, for example, [][][] HTML40_ARRAY = {
static final String[][][];
, for example, [[x][] HTML40_ARRAY = {
, so we can use it later on (final String[][] HTML40_ARRAY = {
static  stuff:
, for example, [x][] HTML40_ARRAY = {
static final  string:
, so we can use it here:final String[][] HTML40_ARRAY = {
static  code in the future
static final String[][ []
, so we can use it later on <final String[][] HTML40_ARRAY = {
static final String[][]  symbols:
, for example, [[][] HTML40_ARRAY = {
static  code in:
static  code.
, as a byte[][] HTML40_ARRAY = {
. public
, so we can do this...final String[][] HTML40_ARRAY = {
, as an array[][] HTML40_ARRAY = {
static final String[] output =
, as a list<String[][] HTML40_ARRAY = {
, const entities= {
 in tests public
static final String[][]  data =
 in test suite
static  code for:
, as per #{
, with the following format :[][] HTML40_ARRAY = {
, see [[][][] HTML40_ARRAY = {
, for example: ^[][] HTML40_ARRAY = {
static  code for example
: var entities= {
, as a List[String[][] HTML40_ARRAY = {
: \x{
static final  import:
, as an object[][] HTML40_ARRAY = {
, for example: *[][] HTML40_ARRAY = {
, for testing [][][] HTML40_ARRAY = {
, as a string[][] HTML40_ARRAY = {
, see examples[] HTML40_ARRAY = {
, so we can test it "final String[][] HTML40_ARRAY = {
, as a list ofString[][] HTML40_ARRAY = {
, var entities= {
, as well as *[][] HTML40_ARRAY = {
, for testing, see #[][] HTML40_ARRAY = {
: function ($){
, as well as JSON[][] HTML40_ARRAY = {
, for testing, as char[][] HTML40_ARRAY = {
, as well as symbols[][] HTML40_ARRAY = {
, as a []String[][] HTML40_ARRAY = {
: \n{
: [[][] HTML40_ARRAY = {
static  code in the package
 [...][] HTML40_ARRAY = {
, with the following: ^[][] HTML40_ARRAY = {
, as a JavaString[][] HTML40_ARRAY = {
, for testing, see *[][] HTML40_ARRAY = {
 DATA_HTML40_ARRAY = {
, for example [][][] HTML40_ARRAY = {
 with a char[][] HTML40_ARRAY = {
: \{{{
: [string][] HTML40_ARRAY = {
 ACC_HTML40_ARRAY = {
, as char[][] HTML40_ARRAY = {
, see example[] HTML40_ARRAY = {
, as a [String[][] HTML40_ARRAY = {
 EXT_HTML40_ARRAY = {
, as a flatString[][] HTML40_ARRAY = {
 [string][] HTML40_ARRAY = {
 [16][] HTML40_ARRAY = {
, as string[] HTML40_ARRAY = {
, use in UString[][] HTML40_ARRAY = {
 [0][] HTML40_ARRAY = {
 with the following code:final String[][] HTML40_ARRAY = {
.try{
 with the following code: "final String[][] HTML40_ARRAY = {
.{{{
 with a byte[][] HTML40_ARRAY = {
, as JSON[][] HTML40_ARRAY = {
static final String[][] HTML40_ARRAY() {
, as byte[][] HTML40_ARRAY = {
, see above[] HTML40_ARRAY = {
, for debug purposes: "final String[][] HTML40_ARRAY = {
 with the following code (final String[][] HTML40_ARRAY = {
, for testing purposes (final String[][] HTML40_ARRAY = {
, for debugging purposes (final String[][] HTML40_ARRAY = {
: {{{
 with `{
, as UString[][] HTML40_ARRAY = {
, see [String[][] HTML40_ARRAY = {
.html file (final String[][] HTML40_ARRAY = {
: class UString[][] HTML40_ARRAY = {
.html file-final String[][] HTML40_ARRAY = {
, as JavaString[][] HTML40_ARRAY = {
 S_HTML40_ARRAY = {
: `{
: class [String[][] HTML40_ARRAY = {
 with char[][] HTML40_ARRAY = {
: string[] HTML40_ARRAY = {
: byte[] HTML40_ARRAY = {
 with string[] HTML40_ARRAY = {
 with code[] HTML40_ARRAY = {
 and debugging: "final String[][] HTML40_ARRAY = {
: ^[][] HTML40_ARRAY = {
 and debugging purposes (final String[][] HTML40_ARRAY = {
. byte[][] HTML40_ARRAY = {
: JSON[][] HTML40_ARRAY = {
: String[] HTML40_ARRAY = {
 in UString[][] HTML40_ARRAY = {
 in [String[][] HTML40_ARRAY = {
 in []String[][] HTML40_ARRAY = {
 in `String[][] HTML40_ARRAY = {
 with JSON[][] HTML40_ARRAY = {
 with `String[][] HTML40_ARRAY = {
.php <final String[][] HTML40_ARRAY = {
.php "final String[][] HTML40_ARRAY = {
 protected
.html "final String[][] HTML40_ARRAY = {
.html <final String[][] HTML40_ARRAY = {
.js "final String[][] HTML40_ARRAY = {
static final String[][] HTML40_ARRAY[] {
 purposes "final String[][] HTML40_ARRAY = {
