return new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type,  arguments);
return new JSError(null, null,  arguments);
return new JSError(null,  arguments);
return new JSError(null, null, -1,  arguments);
return new JSError(null, null, -1, -1,  arguments);
 return new JSError(-1, -1, type, null, arguments);
 return make(type, null, arguments);
 return new JSError(null, -1, -1, type, null, arguments);
 return make(null, null, -1, -1, type, null, arguments);
 return new JSError(type, null, arguments);
return new JSError(null, null, -1, -1, -1, null, arguments);
 return new JSError(null, -1, type, null, arguments);
 return new JSError(1, type, null, arguments);
return new JSError(sourceName, null, null, -1, -1, type, null, arguments);
return new  JSError ( ) ;
return new JSError(sourceName, null, -1, -1, type, null, arguments);
return new JSError(null, null, null, -1, -1, type, null, arguments);
 return new JSError(sourceName, -1, type, null, arguments);
 return new JSError(-1, type, null, arguments);
 return new JSError(type, arguments);
 return new JSError(sourceName, type, null, arguments);
 return new JSError(null, type, null, arguments);
 return new JSError, null, -1, -1, type, null, arguments);
 return new JSError(sourceName, null, arguments);
return new JSError(null, -1, -1, -1, type, null, arguments);
 return make(null, arguments);
return new JSError(null, null, -1);
 return make(null, -1, -1, type, null, arguments);
 return new JSError(1, -1, type, null, arguments);
 return new JSError(sourceName, -1, -1, type, null, arguments);
return new  JSError ( arguments ) ;
return new JSError(null, null, -1, -1);
return new JSError(sourceName, null, lineno, charno, arguments);
 return new JSError, -1, -1, type, null, arguments);
 return new JSError, -1, type, null, arguments);
return new JSError(sourceName, null, lineno, arguments);
 return new JSError, type, null, arguments);
return new JSError(null, null, -1, -1, type, -1, arguments);
return new JSError(sourceName, arguments);
return new JSError(sourceName, null, lineno, type, arguments);
 return make(type, arguments);
return new JSError(sourceName, null, lineno, charno, type, null, arguments);
return new JSError(null, null, lineno, charno, -1, type, null, arguments);
 return new JSError(null,1, -1, type, null, arguments);
return new JSError(null,  lineno, charno, type, arguments);
 return null;
return new JSError(sourceName, null, lineno, charno, type, arguments);
 return null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, -1, arguments);
 return new Error(-1, -1, type, null, arguments);
return new JSError(sourceName, null, lineno, charno);
return new JSError(null, null, -1, -1, type, -1, null, arguments);
 return new JSError(null, type, arguments);
 return new JSError(null, null, -1, type, null, arguments);
 return new JSErrorImpl(null, null, -1, -1, type, null, arguments);
 return new JSErrorImpl(null, arguments);
 return null, -1, -1, type, null, arguments);
return new JSError(sourceName, null, lineno, charno, type,... arguments);
 return make(1, type, null, arguments);
return new JSError(null, null,  lineno, charno, type, arguments);
 return new JSError(null, null, type, null, arguments);
 return make(-1, type, null, arguments);
 return new JSError, null, arguments);
 return new Error(-1, type, null, arguments);
return new JSError(null, null, -1, -1, -1, type, null, arguments);
return new JSError(null, null, lineno, type, arguments);
 return null, -1, type, null, arguments);
return new JSError(null, lineno, type, arguments);
 return new JSEror(null, -1, -1, type, null, arguments);
 return new Error(1, type, null, arguments);
 return new JSError(level-1, type, null, arguments);
 return new JSError(sourceName,1, type, null, arguments);
 return null, type, null, arguments);
return new JSError(null, null, -1, -1, null, arguments);
return new JSError(sourceName, null, lineno, charno, type, null,... arguments);
return new JSError(null, null, null, arguments);
 return new Error(null, -1, -1, type, null, arguments);
 return new JSEror(-1, -1, type, null, arguments);
 return new JSError(_);
return new JSError(sourceName, null, lineno, charno, type, null, null, arguments);
 return new JSEror(null, null, -1, -1, type, null, arguments);
 return new JSErrorImpl(arguments);
 return make(-1, -1, type, null, arguments);
return new  JSError ( )
 return new Error(null, arguments);
 return new Error(null, null, -1, -1, type, null, arguments);
 return new JSError(new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, -1);
return new JSError(sourceName, null, null, null, -1, -1, type, null, arguments);
 return new JSE(null, null, -1, -1, type, null, arguments);
 return new JSError);
 return new JSErrorImpl(type, null, arguments);
 return new Error(1, -1, type, null, arguments);
 return type, null, arguments);
 return new JSErrror-1, type, null, arguments);
return new JSError(sourceName, null, null, arguments);
 return new JSEror(type, null, arguments);
 return new Error(type, arguments);
return new JSError(null, null, -1, null, arguments);
 make(type, null, arguments);
 return new JSError(level-1, -1, type, null, arguments);
 return new JSE(type, arguments);
 return new JSError ( sourceName, null, lineno, type, arguments )
 return sourceName, null, -1, -1, type, null, arguments);
 return new JSE(null, -1, -1, type, null, arguments);
 return new JSError(sourceName,new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(sourceName, null, null, null, null, -1, -1, type, null, arguments);
return new  JSError ( type, arguments )
 return make(arguments);
return new JSError(null, lineno, charno);
return new JSError(null, null, -1, -1, type, null, null, arguments);
return new JSError(sourceName, null, -1);
 return new JSErr(null, null, -1, -1, type, null, arguments);
 return new JSEror(null, arguments);
return new JSError(null, lineno, -1, -1, -1, type, null, arguments);
 return new JSErr, null, -1, -1, type, null, arguments);
 return new JSError(, null, -1, -1, type, null, arguments);
 return new JSErr(1, type, null, arguments);
 return new JSError;
 return new JSError ( sourceName, null, lineno, charno, type, arguments )
 return new JSError(_, arguments);
return new JSError(null, null, lineno, charno);
return new JSError(null, null, null, null, -1, -1, type, null, arguments);
return new JSError ( sourceName, null, arguments )
 return new JSError(null,1, type, null, arguments);
 return new JSError(null,new JSError(null, null, -1, -1, type, null, arguments);
 return new JSErr(null, arguments);
return new JSError(sourceName, -1, null, -1, -1, type, null, arguments);
 return new JSError(_, null, arguments);
return new JSError(sourceName, null, lineno, charno, type, null, level, arguments);
 return new JSError ( sourceName, null, lineno, charno, type, arguments ) ; }
return new JSError(sourceName, -1, null, null, -1, -1, type, null, arguments);
 return new JSError(, -1, type, null, arguments);
 return new JSEror(1, type, null, arguments);
return new JSError(sourceName, null, lineno, charno, type, null, [null], arguments);
 return new JSError(sourceLocation,arguments);
 return new JSError ( sourceName, null, lineno, charno, type, null, arguments ) ; }
 return new JSEror(1, -1, type, null, arguments);
return new JSError(sourceName, null, lineno, charno, type, null, 0, arguments);
 return new JSError(_, -1, -1, type, null, arguments);
 return new JSError(null, 0, -1, type, null, arguments);
 return new JSError(null);
 return new JSError ( sourceName, null, lineno, null, arguments ) ;
 return new JSError(, -1, -1, type, null, arguments);
return new JSError(sourceName, null, lineno, charno, type, null, arguments, -1);
return  JSError. make ( arguments ) ;
return new JSError(sourceName, null, lineno, charno, type, null, -1, arguments);
 return new JSErr, -1, type, null, arguments);
 return new JSError(null arguments);
 return new JSErr(type, null, arguments);
 return new JSError(_, type, null, arguments);
 return new JSErr(1, -1, type, null, arguments);
 return new JSError(0.1, type, null, arguments);
 return new JSErr(arguments);
 return new JSError(, type, null, arguments);
 return new JSError ( sourceName, null, lineno, charno, type, null, arguments )
return new JSError ( sourceName, null, type, arguments )
return new JSError(null, null, -1, -1, type, null, null, null, arguments);
 return new JSError(null, 0, type, null, arguments);
 return new Error(arguments);
 return new JSErr, type, null, arguments);
 return new JSError(null, arguments;
 return JSError(new JSError(null, null, -1, -1, type, null, arguments);
 return new JSError(-null, -1, -1, type, null, arguments);
return new  JSError ( sourceName ) ;
 return new JSErr, -1, -1, type, null, arguments);
return new JSError ( sourceName, null, null, arguments )
return new JSError(sourceName, null, lineno, charno, -1);
return new JSError(sourceName, null, type, arguments);
return new JSError(sourceName, null, lineno, charno, type, null, arguments, null);
return new JSError(null, null, lineno, charno, arguments); }
 return JSError ( sourceName, null, lineno, charno, type, arguments ) ; }
 return JSError.make(type,arguments);
return new JSError(sourceName, null, lineno, charno, type, null, null,... arguments);
 return new JSError(_, -1, type, null, arguments);
return new JSError(sourceName, null, lineno, null, type, arguments);
 return new (type, null, arguments);
 return new JSError ( sourceName, null, lineno, charno, null, arguments )
 return new JSError(null, 0, -1, -1, type, null, arguments);
 return new Error(type, null, arguments);
 return type, arguments);
 return JSError. make ( sourceName, null, lineno, type, arguments ) ;
return new JSError(sourceName, null, lineno, 0, type, arguments);
return new JSError(sourceName, null, lineno, charno,... arguments);
 return JSError. make ( sourceName, null, lineno, arguments ) ;
 return JSError. make ( sourceName, null, lineno, charno, arguments ) ;
return new JSError(sourceName, null, lineno, charno, type, -1, arguments);
 return new JSError ( ) ;
 return new JSEror(arguments);
 return new JSEr1, type, null, arguments);
return new JSError(null, null, lineno, type, arguments); }
 return new JSError ( sourceName, null, lineno, null, arguments )
 return (null, null, -1, -1, type, null, arguments);
return new JSError(sourceName, type, arguments);
 return new JSErr(null, -1, -1, type, null, arguments);
return new JSError(sourceName, null, lineno, charno, type, level, null, arguments);
 return new JSError(...);
 return new JSError(sourceLocation(null, null, -1, -1, type, null, arguments);
 return JSError. make ( null, null, null, null, null, null, null, null, null, arguments ) ;
 return new JSError(-null, null, -1, -1, type, null, arguments);
return new JSError(sourceName, null, lineno, charno, type, null, -1);
 return new J(type, null, arguments);
return new JSError(null, null, lineno, null, arguments);
return new JSError(sourceName, null, lineno, charno, null, arguments);
 return new JSErrorImpl(null, -1, -1, type, null, arguments);
 return new JSError ( sourceName, null, lineno, charno, type, arguments, null, arguments ) ;
 return JSError. make ( sourceName, null, lineno, type, arguments )
 return new JSError(type);
return new JSError(sourceName, null, lineno, null, null, arguments);
return new JSError(null, null, -1, -1, null, null, arguments);
 return new JSError ( sourceName, null, lineno, 0, arguments ) ;
return new JSError(null, lineno, type, arguments); }
return new JSError(sourceName, null, lineno, charno, type, null, [null] arguments);
 return new JSError(sourceName(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, null, null);
 return new JSError(_, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, null, null, arguments);
 return JSError. make ( type, null, null, null, null, null, null, null, arguments ) ;
 return new JSError());
 return new JSError(type, arguments;
 return new JSError ( sourceName, null, lineno, charno, type, arguments, null ) ;
 return new JSError(null, make(null, null, -1, -1, type, null, arguments);
 return new JSError(null); }
 return new JSError ( sourceName, null, lineno, charno, type, null, arguments, false ) ;
 return new JSError ( sourceName, null, lineno, null, type, null, arguments ) ;
 return new JSError ( sourceName, null, lineno, null, type, arguments ) ; }
 return JSError. make ( null, null, null, null, null, null, null, arguments ) ;
 return new JSError(, null, arguments);
 return new JSError(sourceName, null, lineno, type, arguments); }
 return JSError. make ( sourceName, null, type, arguments ) ;
 return JSError ( null, null, null, null, null, null, null, null, null, null, arguments ) ;
return new JSError(null, null, -1, -1, type, null, -1, null, arguments);
 return new JSError ( sourceName, null, lineno, null, type, null, arguments ) ; }
 return new JSError ( sourceName, null, lineno, charno, type, arguments, null, arguments )
 return new JSError(); }
 return new (null, -1, type, null, arguments);
return new JSError(null, lineno, arguments);
 return sourceName, null, arguments);
 return JSError ( sourceName, null, lineno, charno, type, null, arguments )
 return new JSError ( sourceName, null, lineno, charno, type, null, arguments ) ; } }
 return new JSError ( sourceName, null, lineno, 0, type, null, arguments ) ;
 return JSError. make ( null, null, null, null, null, null, null, null, arguments ) ;
 return new JSError ( sourceName, null, lineno, charno, type, arguments, null ) ; }
 return new JSError(sourceName),new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return new JSError ( ) ;
return new JSError(sourceName, null, lineno, charno, type, null arguments);
return new JSError(sourceName, null, lineno, charno, type, null, []));
 return new JSError(0,1, type, null, arguments);
 return new JSError(args);
 return new JSError(null), arguments;
 return new JSErr(-1, -1, type, null, arguments);
 return new JSEr1, -1, type, null, arguments);
return  new JSErr();
 return new JSError(null, null, -1, type, null, arguments); }
 return JSError. make ( type, null, null, arguments ) ;
 return new JSE(type, null, arguments);
return new  JSError ( null, arguments )
 return new JSError(null, null, arguments); }
 return new JSError ( sourceName, null, lineno, null, type, arguments )
return new JSError ( sourceName, type, arguments )
 return JSError. make ( type, null, null, arguments ) ; }
 return new JSEror(-1, type, null, arguments);
return new JSError(null, null, -1, -1, -1, -1, null, arguments);
 return new JSError ( sourceName, null, lineno, null, null, arguments )
return new JSError(null, null, -1, -1, null, null, null, arguments);
 return new JSError ( arguments ) ;
 return sourceName, type, null, arguments);
 return new Make(type, null, arguments);
 return new JSError ( sourceName, null, lineno, 0, type, arguments )
return new JSError(null, null, lineno, 0, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null,... arguments);
 return JSError. make ( type, null, arguments ) ;
return new JSError(null, lineno, charno, arguments); }
 return JSError ( null, null, null, null, null, null, null, null, arguments ) ;
 return new (null, -1, -1, type, null, arguments);
 return new JSError(, arguments);
return new JSError(SourceName, null, lineno, charno, type, null, arguments);
 return JSError. make ( type, null, null, arguments ) ; } else {
 return new JSError(* arguments);
 return JSError. make ( null, null, null, null, null, null, null, arguments ) ;
 return new JSError.make(null, null, -1, -1, type, null, arguments);
 return new JSError ( sourceName, null, lineno, charno, type, arguments ) ; } } ;
return new JSError(null, null, -1,  null, null, null, null, arguments);
return new JSError(sourceName, null, lineno, * arguments);
 return new JSError ( sourceName, null, lineno, charno, type, null, arguments, ) ;
 return make(1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); } return null ;
 return JSError. make ( type, null, null, null, arguments ) ; } else {
return new JSError(null, null, -1, -1, type, null, arguments, null, -1, null);
 return JSError. make ( null, null, null, null, null, null, type, null, arguments ) ;
 return new JSError(null, null, null, arguments); }
return  new JSError
return new JSError(null, -1, null, -1, -1, type, null, arguments);
 return new JSError(new Error(null, null, -1, -1, type, null, arguments);
 return new JSError(null, null, -1, null, arguments); }
 return (null, -1, -1, type, null, arguments);
 return new JSErrorNoSource(null, null, -1, -1, type, null, arguments);
 return JSError.make(null, null, arguments);
return new JSError(null, null, -1, -1, null, arguments); }
 return new JSError ( sourceName, null, lineno, charno, type, arguments ) ; } }
return new JSError(null, null, lineno, 0.0, -1, type, null, arguments);
return new JSError(null, null, -1, type, null, arguments); }
 return JSError.make(null, null, arguments); }
return new JSError(null, null, -1, -1, type, null,  null, null, null, null, arguments);
 return new JSE(1, -1, type, null, arguments);
 return JSError.make(null, null, null, arguments); }
return new JSError(sourceName, null, lineno, charno, null,... arguments);
return new JSError(null, null, -1, -1, type, null, arguments); return new JSError ( ) ;
return new JSError(null, null, -1, null, null, null, arguments);
return new JSError(null, lineno, null, arguments);
return  JSError. make ( ) ;
 return new JSError(1.1, type, null, arguments);
 return new JSErr1, type, null, arguments);
return new JSError(null, null, -1, -1, arguments); }
return new JSError(null, null, -1, -1, type, null, arguments, -1, null);
return new JSError(null, null, -1, -1, type, null, arguments); } }
return new JSError(sourceName, null, lineno, charno, type, nil, arguments);
return new JSError(null, null, -1, -1,  null, null, null, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return new Error ( ) ;
 return new JSError-1, type, null, arguments);
 return new (null, type, null, arguments);
 return new JSError(--type, null, arguments);
 return JSError ( null, null, null, null, null, null, null, arguments ) ;
 return new JSError, arguments);
return new  JSError ( sourceName, arguments )
return new JSError(sourceName, null, lineno, charno, type, -1);
return new JSError(null, null, lineno, null, arguments); }
return new JSError(null, lineno, charno, arguments);
 return JSError.make(null, null, type, arguments); }
return new JSError(null, null, -1, type, null, arguments); } }
return new JSError(sourceName, null, lineno, charno, type, level, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return null ;
 return JSError. make ( null, null, null, null, null, null, null, arguments ) ; } else {
 return JSError. make ( null, null, type, null, arguments ) ;
 return new JSError(0,-1, type, null, arguments);
return new JSError(SourceName, null, lineno, charno, type, arguments);
return new JSError(null, null, -1, arguments); }
 return new JSError(null, null, null, null, arguments); } else {
return new JSError(null, null, -1, null, arguments); }
return new JSError(null, lineno, 0.0, -1, -1, type, null, arguments);
 return JSError. make ( type, null, null, null, null, arguments ) ; } else {
 return new JSError(*, arguments);
 return new J(null, -1, type, null, arguments);
return new JSError(null, null, lineno, charno, arguments);
return new JSError(null, null, -1, -1, type, null, null, -1, arguments);
 return new J(null, -1, -1, type, null, arguments);
return new JSError(null, null, lineno, null, null, arguments);
return new JSError(null, null,  lineno, charno, null, arguments);
 return new JSErr(type, arguments);
 return new JSError(sourceName,1, -1, type, null, arguments);
 return new JSError(argument);
 return new JSError(null), make(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1,  type, null, arguments); } return null ;
 return new JSError(null, arguments); }
 return new JSError(null, null, arguments);
 return JSError.makeJSError(null, null, -1, -1, type, null, arguments);
 return new JSError(null-1, -1, type, null, arguments);
return new JSError(null, null, type, arguments);
 return JSError.make(type, null, arguments); }
 return JSError.JSError(null, null, -1, -1, type, null, arguments);
 return JSError. make ( null, null, null, null, arguments ) ; } else {
 return JSError(null, null, null, arguments); }
 return JSError ( null, null, null, null, null, null, arguments ) ; } else {
 return JSError.createJSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, 0.0, type, null, arguments);
 return JSError ( sourceName, null, null, arguments ) ;
 return new JSError ( sourceName ) ;
 return JSError. make ( null, arguments ) ;
 return new JSError(null, null); }
return new JSError(null, null, lineno, charno, type); }
return new JSError(sourceName, null, 0, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); }
 return JSError ( null, null, null, null, null, null, null, arguments ) ; } else {
return new JSError(null, lineno, null, arguments); }
 return new JSEror-1, -1, type, null, arguments);
 return new JSEror-1, type, null, arguments);
return new JSError(null, null, -1, null, null, arguments); }
return new JSError(null, null, -1, -1, type, null, arguments, null, null);
 return JSError(null, null, null, arguments);
return  JSError. create ( ) ;
 return -1, -1, type, null, arguments);
 return new JSError(sourceName),JSError(null, null, -1, -1, type, null, arguments);
 return new JSError(--null, -1, -1, type, null, arguments);
 return new JSError(1:1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); return null ;
return new JSError(null, lineno, charno, -1, -1, type, null, arguments);
 return JSError.new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(sourceName, null, lineno, null, type,... arguments);
return new JSError(sourceName, null, 0, null, -1, -1, type, null, arguments);
 return new JSErrorWithSource(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return null ; }
 return new JSError($, type, null, arguments);
return new JSError(null, null, null, null, arguments);
 return new JSError(null, null, null, arguments); } else {
return new JSError(null, lineno, charno, type); }
return new JSError(null, lineno, 0, -1, -1, type, null, arguments);
 return JSError. make ( type, null, null, null, arguments ) ; } } else {
 return new JSError(sourceLocation,-1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); return new JSError ( )
 return new JSError(0-1, -1, type, null, arguments);
 return new JSError(sourceName::-1, type, null, arguments);
 return new JSError(null, 0, null, -1, -1, type, null, arguments);
return new  JSError ( "", arguments ) ;
 return JSError. make ( type, null, null, arguments, null, null ) ;
return new JSError(null, lineno, 0, type, arguments);
return new JSError(null, null, -1, -1, 0, 0, null, arguments);
return new JSError(null, sourceName, type, arguments);
 return new JSError(sourceName -1, -1, type, null, arguments);
 return new JSError(", null, -1, -1, type, null, arguments);
 return new JSError(sourceLocation,-1, -1, type, null, arguments);
 return JSError. make ( null, null, null, null, null, null, null, null, null, arguments ) }
 return new JSError(null, null, -1, null, arguments);
 return JSError. make ( type, null, null, arguments ) ; } } else {
return new JSError(null, null, -1, type, arguments);
 return new (null, null, -1, -1, type, null, arguments);
return new JSError(SourceName, null, lineno, charno, arguments);
 return JSError.make(null, arguments); }
return new JSError(null, null, arguments); }
return new JSError(null, null, -1, -1, type, null, null, null, null, arguments);
 return new JSError(... arguments);
 return new JSError ( null, arguments ) ;
 return new JSError()(arguments);
return new JSError(sourceName, null, arguments); }
 return new JSError(.1, type, null, arguments);
 return new JSError(sourceName); }
return  JSError. make ( type ) ;
 return new JSError null, -1, type, null, arguments);
return new JSError(null, null, -1, 0, null, arguments);
 return new JSError(0.1, -1, type, null, arguments);
 return new JError(type, null, arguments);
 return new JSError(*, null, arguments);
return new JSError(null, null, -1, type, arguments); }
return new  Error();
return new JSError(null, null, -1, -1, null, null, arguments); }
return new JSError(null, lineno, 0, 0, -1, -1, type, null, arguments);
return new JSError(sourceName, 0, 0, null, -1, -1, type, null, arguments);
 return make(type);
 return new JSError(--null, null, -1, -1, type, null, arguments);
 return new JError(null, null, -1, -1, type, null, arguments);
 return new J(null, null, -1, -1, type, null, arguments);
 return sourceName, -1, -1, type, null, arguments);
 return JSError. make ( null, null, null, null, null, null, null, null, arguments ) ; }
 return new JSError(_null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1,  0, 0, 0, null, arguments);
 return sourceName, -1, type, null, arguments);
return new JSError(null, null, -1, 0, 0, null, arguments);
return new JSError(null, lineno, charno, type) ;
 return new Source(, null, -1, -1, type, null, arguments);
 return new JSError(sourceName);JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, sourceName, null, arguments);
return new JSError(null, null, -1, -1, type, arguments); }
 return new JSError(", type, null, arguments);
return new JSError(sourceName, null, null, arguments); }
return new JSError(null, null, -1, -1, type, null, arguments) { return new JSError ( )
return new JSError(null, null, -1, -1, 0, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, arguments);
 return new JSError($null, null, -1, -1, type, null, arguments);
 return JSError ( null, null, null, null, null, null, null, null, null, null, arguments ) {
return new JSError(null, null, -1, -1, null, arguments); } }
 return new JSError(name, type, arguments);
 return new JSError(sourceName=-1, type, null, arguments);
 return new JSErr, null, arguments);
 return new JSError null, -1, -1, type, null, arguments);
return new JSError(null, null, null, arguments); }
 return new JSError(_null, -1, -1, type, null, arguments);
 return new JSError null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1,  0, 0, 0, null, arguments);
 return new JSError(null));
return new JSError(null,  lineno, charno, null, arguments);
 return new JSError()(null, arguments);
 return new JSError(sourceLocation);
return new JSError(null, null, lineno, charno, null); }
 return new JSError(sourceName)JSError(null, null, -1, -1, type, null, arguments);
 return JSError. make ( null, null, null, null, null, arguments ) ; } } else {
 return new JSError(new String(null, null, -1, -1, type, null, arguments);
 return new JSError(null);JSError(null, null, -1, -1, type, null, arguments);
 return JSError. make ( null, null, null, null, null, null, null, arguments ) ; }
 return JSError ( null, null, null, null, null, null, null, null, null, null, arguments ) }
return new JSError(null, null, -1, -1, -1, 0, 0, null, arguments);
return new JSError(null, -1, -1, -1, -1, type, null, arguments);
 return new JSError($, arguments);
return new JSError(null, null, -1, type, null, arguments); return null ;
 return new JError(null, -1, -1, type, null, arguments);
 return (-1, -1, type, null, arguments);
return new JSError(null, null, lineno, null, type, arguments);
 return new JSError($, null, arguments);
 return new JSError(Source).make(null, null, -1, -1, type, null, arguments);
 return JSError ( null, null, null, null, null, null, null, null, arguments ) ; }
return new JSError(null, null, -1, -1, type, null, arguments); return null ; }
return new JSError(null, 0, -1, -1, -1, type, null, arguments);
 return new JSErrorWithoutSource(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1,  0, 0, 0, 0, arguments);
return new JSError(null, null, -1, -1, type, null, null, null, null, arguments); }
return new JSError(null, null, -1, null, null, null, arguments); }
return new JSError(null, null, -1, -1, type, null, arguments, null, null, -1);
return new JSError(sourceName, lineno, null, null, -1, -1, type, null, arguments);
 return new JSEror, -1, -1, type, null, arguments);
 return new JSError(>-1, -1, type, null, arguments);
 return new JSError($, -1, type, null, arguments);
return new JSError(null, null, -1, -1, 0, 0, type, null, arguments);
 return new JSError() make(null, null, -1, -1, type, null, arguments);
 return new JSErr((-1, -1, type, null, arguments);
 return new JSError(null, 0, null, arguments);
 return new JSErr1, -1, type, null, arguments);
 return new JSError(sourceName make(null, null, -1, -1, type, null, arguments);
 return new JSErrorImpl(type, arguments);
return new JSError(SourceName, null, lineno, type, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) {} return new JSError ( ) ;
 return new JSError(0, -1, -1, type, null, arguments);
 return new JSError(sourceName=null, null, -1, -1, type, null, arguments);
return new JSError(null, null,  lineno, null, type, arguments); }
 return new JSError(sourceName+1, type, null, arguments);
 return new JSErrorImpl(new JSError(null, null, -1, -1, type, null, arguments);
 return new JSError(", -1, type, null, arguments);
 return JSError.make(null, null); }
 return new JSError()(type, null, arguments);
 return JSError make(arguments);
return new JSError(sourceName, null, lineno, charset);
 return JSError. make ( arguments ) ;
return new JSError(null, null, -1, -1, -1, null, null, null, arguments);
 return new JSE(1, type, null, arguments);
return new JSError(null, lineno, charno, null); }
 return new JSError(null,JSError(null, null, -1, -1, type, null, arguments);
return new JSError(sourceName, 0, 0, null, null, -1, -1, type, null, arguments);
 return JSError. make ( null, null, null, null, null, null, null, null, arguments ) }
 return new JSError(null),new JSError(null, null, -1, -1, type, null, arguments);
 return JSError ( null, null, null, null, null, null, null, arguments ) ; }
 return new JSError()(new JSError(null, null, -1, -1, type, null, arguments);
 return new JSError(]);
return new JSError(null, null, lineno, -1, type, null, arguments);
 return (type, null, arguments);
 return new JSError(name, arguments);
 return new JSError(null) {
return new JSError(null, null, lineno, 0, 0, -1, type, null, arguments);
 return new JSError(null),JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, -1, type, null, null, arguments);
return new JSError(sourceName, null,... arguments);
 return JSError. make ( null, null, null, null, null, null, type, null, arguments ) ; }
return new JSError(null, null, -1, null, null, arguments); } }
 return new JSErr-1, type, null, arguments);
return new JSError(null, null, -1, -1, -1, null, arguments); }
return new JSError(null, null, -1, -1, type, null, arguments); return JSError ;
 return new JSError(1-1, -1, type, null, arguments);
 return new JSError($, -1, -1, type, null, arguments);
 return new JSError(sourceName) {
 return JSError. make ( null, null, null, null, null, null, type, arguments ) ; }
 return JSError. make ( null, null, null, null, null, null, arguments ) ; }
return new JSError(null, null, -1, 0, -1, type, null, arguments);
return new JSError ( sourceName, null ) ;
 return JSError. make ( null, null, null, null, null, null, null, type, arguments ) ; }
 return JSError ( null, null, null, null, null, null, null, null, arguments ) {
 return new JSError(1001, type, null, arguments);
return new JSError(null, null, lineno, 0x00, -1, type, null, arguments);
return  new JSError ( ;
 return new JSError(sourceName).JSError(null, null, -1, -1, type, null, arguments);
 return new JSError(*type, null, arguments);
 return new JSError($);
 return new JSError(null-type, null, arguments);
return new JSError(null, null,  lineno, null, null, arguments); }
 return new JSError(null) }
 return new JSError(null, level, type, null, arguments);
return new JSError(null, null, -1, -1, null, null, arguments); } }
 return (null, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, null, arguments);
 return JSError. make ( type, null, null, arguments ) }
 return new JSError($null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, -1);
 return new JSEror, null, -1, -1, type, null, arguments);
 return new JSError(*, type, null, arguments);
return new JSError(sourceName, null, lineno, charset, arguments);
return new JSError(null, null, type, arguments); }
return new JSError(null, null, -1, -1, null, null, null, arguments); }
return new JSError(sourceName, null, 0, arguments); }
return new JSError(null, null,  lineno, 0, type, arguments); }
 return new JSError(source), make(null, null, -1, -1, type, null, arguments);
 return new JSError(sourceLocation,type, null, arguments);
 return new JSErr(new JSError(null, null, -1, -1, type, null, arguments);
 return JSError. make ( type, arguments ) ; }
 return New JSError(type, arguments);
 return new JSError(0,null, null, -1, -1, type, null, arguments);
 return JSError. make ( null, null, null, null, null, null, type, null, arguments ) }
 make(null, arguments);
 return new JSError(null, "", type, null, arguments);
 return JSError ( null, null, null, null, null, null, null, arguments ) {
 return JSError ( null, null, null, null, null, null, null, null, arguments ) }
return  JSError. INSTANCE ;
return new JSError(null, null, -1, 0, null, arguments); }
 return JSError. make ( type, null, null, null, arguments ) ; }
 return JSError. make ( type, null, null, arguments ) ; }
 return new JSError(null.type, null, arguments);
 return new JSError(null).JSError(null, null, -1, -1, type, null, arguments);
 return new JSError(nulltype, null, arguments);
 return new JSError(null, null) {
return new JSError(null, null, -1, -1, type, arguments, null, null, arguments);
 return new JSError() arguments;
 return new JSError(null, false, type, null, arguments);
 return new JSErr-1, -1, type, null, arguments);
 return new JSErrorInternal(null, null, -1, -1, type, null, arguments);
return new JSError(sourceName, null, 0, null, null, -1, -1, type, null, arguments);
return new JSError(SourceName, null, lineno, arguments);
 return new JSError((level-1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); } return null ; }
return new JSError(null, null, -1, -1, -1, null, type, null, arguments);
 return new J(null, type, null, arguments);
 return new JSEror, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return new JSError(); }
 return new JSError(null|null, -1, -1, type, null, arguments);
 return new JSError(null, "", -1, type, null, arguments);
return  JSError ;
 return new JSError(null) {}
 return JSErrorFactory.createJSError(null, null, -1, -1, type, null, arguments);
 return new JSError(0,1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) {} return new JSError ( )
 return new JSError(", -1, -1, type, null, arguments);
return new JSError(sourceName, null, * arguments);
return  new JSEror();
 return new JSError({})(new JSError(null, null, -1, -1, type, null, arguments);
return new JSError ( sourceName, type ) ;
 return new JSError($, null, -1, -1, type, null, arguments);
 return new JSError(null, null, -1, type, null, arguments); } else
return new JSError(null, null, -1, -1, 0, arguments);
return new JSError(null, null, -1, type, null, arguments); } } ;
return new JSError(null, null, lineno, null, null, -1, type, null, arguments);
 return new JSError(name, type, null, arguments);
return  new JSError ( arguments )
 return new JSError(0, 0, null, -1, -1, type, null, arguments);
 return new Error(type);
 return new JSError(sourceName=null, -1, -1, type, null, arguments);
 return new JSErrror, -1, type, null, arguments);
 return new sourceName, null, -1, -1, type, null, arguments);
 return new JSError(-1, -1, -1, type, null, arguments);
 return new JSError(name, null, -1, type, null, arguments);
return new JSError(null, null, -1, -1, -1, 0.0, null, arguments);
return new JSError(null, null, -1, 0, arguments);
return new JSError(null, null, -1, -1, type, null, 0, -1, arguments);
return new JSError(null,  lineno, 0, type, arguments); }
 return new JSError(0, type, null, arguments);
return new JSError(sourceName, -1, arguments);
return new JSError(null, null, -1, -1, type,  arguments, null, null, null, arguments);
return new JSError(null, null, -1, null, -1, type, null, arguments);
 return new JSError.Make(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, null, null, null, -1, -1, type, null, arguments);
 return JSError. make ( sourceName ) ; }
return new JSError(null, null, lineno, 0.1, -1, type, null, arguments);
 return new JSError(null, null) ;
 return new JSError(>-1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, -1);
return new JSError(null, null, null, null, null, arguments);
 return JSError. make ( type, null, arguments ) }
 return JSError. make ( null, null, type, null, arguments ) }
 return new JSEror, -1, type, null, arguments);
 return new JSError(null, "", -1, -1, type, null, arguments);
 return new JSErrorInternal(null, arguments);
return new JSError(null, -1, null, null, -1, -1, type, null, arguments);
 return new JSError(sourceLocation,new JSError(null, null, -1, -1, type, null, arguments);
 return new JSError(Level-1, type, null, arguments);
 return JSError.make(null);JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type,  arguments, null, null, null, null);
 return new JSError(0.0, null, -1, -1, type, null, arguments);
 return make(null, type, null, arguments);
return new JSError(null, 0, 0, null, -1, -1, type, null, arguments);
return new JSError(null,  lineno, null, type, arguments); }
 return JSError. make ( null, null, null, null, null, null, null, arguments ) ; } }
return new JSError(null, null, -1, -1, type, null, -1);
 return JSError ( sourceName, null, null, arguments ) }
 return new JSError(null);
 return new JSError.JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, lineno, 0x00, -1, -1, type, null, arguments);
 return new JSError("level-1, type, null, arguments);
return new JSError(null, lineno, null, null, -1, -1, type, null, arguments);
 return new JSError(0,null, -1, -1, type, null, arguments);
return new JSError(sourceName, null, null); }
 return JSError ( sourceName, null, null, arguments ) ; }
 return new JSErrror, type, null, arguments);
return new JSError(null, null, -1, -1, type, 0, -1, null, arguments);
 return new Error(null);
 return new JSError(0, 0, -1, -1, type, null, arguments);
 return new JSError(SourceLocation::-1, -1, type, null, arguments);
return new JSError(sourceName, type, arguments); }
 return new JSError(null+type, null, arguments);
return new JSError(null, lineno, null, -1, -1, type, null, arguments);
 return new JSError($1, type, null, arguments);
 return new JSError("null",type, null, arguments);
 return JSErrorImpl.new JSError(null, null, -1, -1, type, null, arguments);
 return new JSError(null, null, -1, type, null, arguments); };
return new JSError(null, null, -1, -1, type, null, arguments); return new JSError ;
return new JSError(sourceName, * arguments);
return new JSError(null, null, -1, -1, null, type, null, arguments);
 return new Make(null, null, -1, -1, type, null, arguments);
 return New JSError(sourceName,null, -1, -1, type, null, arguments);
 return new JSError(sourceName) {}
 return new JSError(null::-1, type, null, arguments);
 return New JSError(sourceName,null, arguments);
 return new JSError(sourceName|null, null, -1, -1, type, null, arguments);
 return new JSError({null,-1, -1, type, null, arguments);
 return new JSError(SourceName, -1, -1, type, null, arguments);
return new JSError(null, lineno, 0, arguments); }
return new JSError(sourceName, null, lineno, charno, null);
 return new JSErrror, -1, -1, type, null, arguments);
 return new JError(null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, null, null, null);
return  JSError. EMPTY ;
return new JSError(null, null, -1, -1, type, null, null, arguments); } return null ;
return new JSError(null, null, -1, -1, 0, null, arguments); }
 return (-1, type, null, arguments);
return new JSError(null, null, 0, -1, -1, type, null, arguments);
return new JSError(null, null, -1,  type, null, null, arguments); } }
 return JSError ( null, null, null, null, null, null, null, arguments ) }
return new JSError(null, lineno, null, null, null, -1, -1, type, null, arguments);
 return new JSError((null,null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, -1, null, null, arguments);
 return new JSError(null, null, -1, type, arguments); } else
return  new Error ( )
 return new JSErrror);
return new JSError(null, null, -1, 0, 0, arguments); }
return new JSError(null, null, -1, -1, type, null, arguments) { return new JSError() {}
 return new JSError(null, null, null, null, arguments); } else
 return JSError. make ( null, null, null, null, null, null, null, arguments ) ; } else,
return new JSError(null, null, null, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null);
return new JSError ( null, type, arguments )
 return new JSError(null, null, -1, null, arguments); } else
 return new JSError(...) {
return new JSError(null, null, -1,  null, null, null, arguments); } }
return new JSError(null, null, -1, -1, type, null,  null, null, arguments, null, null);
 return new JSError(null)JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, type, arguments); }
 return (1, type, null, arguments);
 return new JSError();;
return new JSError(null, null, -1, type, null, null, arguments); }
return new JSError(null,  sourceName, null, type, arguments); }
return new JSError(sourceName, null); }
return new JSError(null, null, -1, -1, type, arguments); } return null ;
return new JSError(null, null, -1, -1, type, null, arguments); } } ;
 make(type, arguments);
return new JSError(null, null, -1, -1, -1, null, null, arguments);
return new JSError(null, null, -1, -1, type, null, null, null, arguments); return null ;
 return JSError.make(null, null, null, arguments); } else
 return new JSError("null",-1, type, null, arguments);
return new JSError(null, null, lineno, 0, arguments); }
 return new J(type, arguments);
 return JSError.getJSError(null, null, -1, -1, type, null, arguments);
 return new JSError((null),null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, 0.0, type, null, arguments);
 return new ErrorImpl(arguments);
return new JSError(null, lineno, charset);
 return JSError.make(null, null, type, arguments); } else
 return (null, type, null, arguments);
 return new JSError(SourceName, -1, type, null, arguments);
return new JSError(null, null, -1, 0, 0, 0, arguments); }
 return JSErrorFactory.makeJSError(null, null, -1, -1, type, null, arguments);
 return new JSErrror, null, arguments);
 return new JSError(\);
 return new JSError((null),null, null, -1, -1, type, null, arguments);
 return JSErrorImpl.makeJSError(null, null, -1, -1, type, null, arguments);
 return new JSError1, type, null, arguments);
return new JSError(null, null, -1, -1, type, level, null, null, arguments);
 return New JSError(sourceLocation,arguments);
 return new JSError("null",null, -1, -1, type, null, arguments);
return new JSError ( type, arguments ) ; }
return new JSError(null, null, lineno, arguments);
 return new JSError(null|null, null, -1, -1, type, null, arguments);
 return new J($ror, null, arguments);
 return new J($Name, null, arguments);
 return new JSE(null, type, null, arguments);
return new JSError(sourceName, 0, null, null, null, -1, -1, type, null, arguments);
 return new JSError ( ) {
return new JSError(null, null, -1, -1, 0, 0, null, arguments); }
 return new JSError(Type, null, arguments);
return new JSError(null, null, -1, -1, -1, arguments); }
 return new ErrorImpl(null, arguments);
return new JSError(sourceName, null arguments);
return new JSError(null, null, lineno, charset);
 return new (sourceLocation, type, null, arguments);
 return new JSError(sourceLocation,null, arguments);
 return JSError.createInternal(arguments);
return new JSError(null, null, -1, -1, type, null, 0, null, arguments);
return new JSError(null, 0, 0, -1, -1, type, null, arguments);
return new JSError(null, null, -1, null, arguments); } }
 return new JSError(sourceName(null, -1, -1, type, null, arguments);
 return new JSError(0x-1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); return new JSError ( ;
return new JSError(null, null, -1, 0, arguments); }
return new JSError(null, lineno, 0.1, -1, -1, type, null, arguments);
return new JSError(null, null, lineno, 0, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return new JSError( arguments);
return new JSError(null, sourceName, null, arguments); }
return new JSError(null, null, -1, -1, type, level, -1, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return new Error ( )
 return new JSError(();
return new JSError(null, null, -1, -1, type, null, 0, 0, arguments);
 return JSErrorImpl.createJSError(null, null, -1, -1, type, null, arguments);
 return new JSE(null, arguments);
return new JSError(sourceName, -1);
 return new CheckError(arguments);
return new JSError(null, null, -1, -1, null, null, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return new JSError ( type )
return new JSError(null, null, -1, -1, 0.1, type, null, arguments);
 return JSError.createDefaultJSError(null, null, -1, -1, type, null, arguments);
 return JSError.make()(arguments);
return new JSError(null, null, -1, -1, type, null, arguments); return JSError. INSTANCE ;
return new JSError(null, null, -1, -1, type, null, arguments) { return new Error ( arguments ) ;
 return new JSError(name,null, arguments);
 return create(type,arguments);
return  new JSErrorImpl();
 return JSError. make ( type, null, null, null, arguments ) ; } } ;
 return JSError ( sourceName, null, null, arguments ) {
 return New JSError(sourceName,type, null, arguments);
return new JSError(null, arguments); }
 return JSError ( null, null, null, null, null, null, arguments ) ; } }
 return null);
 return new JSEr, -1, type, null, arguments);
 return new JSE(null, -1, type, null, arguments);
 return JSError ( null, null, null, null, null, null, null, null, arguments); } else
return new JSError(null, null, -1, -1, type, null, arguments); return new JSError ( {
 return new JSError(SourceLocation, arguments);
 return new JSError((null),-1, -1, type, null, arguments);
return new JSError(null, 0, arguments);
return new JSError(null, null, -1, -1, 0, type, null, arguments);
 return new CheckError(null, arguments);
return new JSError(sourceName, 0, lineno, arguments);
 return new JSError(sourceName(),null, arguments);
return new JSError(null, null, -1); }
return new JSError(sourceName, 0, null, null, -1, -1, type, null, arguments);
 return new J(null, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, 0, -1, null);
 return new JSErr;
return new JSError(null, null, -1, -1, type, null, arguments); return JSError ( type ) ;
return new JSError(null, null, -1, -1, 0, 0, 0, arguments); }
return new JSError(null, null, -1, -1, type, null, arguments, null); }
 return new JSError(SourceName, null, -1, -1, type, null, arguments);
 return new JSError2(null, null, -1, -1, type, null, arguments);
 return new JSError1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, type, null, arguments);
return new  JSError ( ) ; }
 return new Error(args);
 return new Diagnostic(type, null, arguments);
 if (type!= null) {
return new JSError(null, null, -1, -1, type, null, arguments) { return new JSErr();
 return new JSEr, null, -1, -1, type, null, arguments);
 make(arguments);
return new JSError(null, null, -1, -1, type, null, null, null, arguments); } }
return new JSError(null, null, -1, -1, type, null, null, arguments); }
 return new J($ror, type, null, arguments);
return new JSError(null, null, -1, -1, 0, arguments); }
 return (type, arguments);
return new JSError(null, 0, 0, null, null, -1, -1, type, null, arguments);
 return JSError. make ( type, null, null, null, arguments ) ; } else,
 return new JSEr-1, type, null, arguments);
 return new JSEr, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, 0.0, null, arguments);
 return new SimpleJSError(null, null, -1, -1, type, null, arguments);
 return new Error(...);
 return new J(type);
return new JSError(null, null, -1, -1, -1, arguments);
return new JSError(null, null, lineno, null, -1, type, null, arguments);
 return new CheckLevel(-1, type, null, arguments);
 return new JSError("null",-1, -1, type, null, arguments);
 return new JSError(*null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); } else { return null ; }
 return new JSError(SourceLocation,type, null, arguments);
 return new JSError(SourceName, null, arguments);
 return new JSErrorJSError(null, null, -1, -1, type, null, arguments);
 return new JSError-1, -1, type, null, arguments);
 return new JSError();(new JSError(null, null, -1, -1, type, null, arguments);
 return new JSErr(...);
 return new JSError(*new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, null, arguments); } }
 return new J(null);
 return new JSError(SourceName, type, null, arguments);
return new JSError(null, null, null, null, arguments); }
 return New JSError(arguments);
return new JSError(null, null, -1, -1, type, null, null, null, arguments); }
 return new JSEError(arguments);
return new JSError(null, null, null, null, -1, type, null, arguments);
 return new JSEror1, type, null, arguments);
return new JSError(null, null, -1, lineno, charno, type, null, arguments);
 return (null);
return new JSError(null, null, 0.0, -1, type, null, arguments);
return new JSError(null, null, -1, 0, 0, type, null, arguments);
 return new JSErr());
 return new Error ( ) ;
 return new JSError($null, arguments);
return new JSError(null, null, type, null, arguments); }
return new JSError(null, level, arguments);
 return new JSErrror(1, type, null, arguments);
 return new JSErrror();
 return new ErrorException(-1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, 0, null, null);
 return new JSError((-1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return new JSErrror();
return new JSError(null, null, -1, -1, type, null, arguments); return ;
 return new Diagnostic(null, arguments);
 return new JSErr($1, type, null, arguments);
return new JSError(sourceName, null, nil); }
 return new JSErrror;
return new JSError(null, null, -1, -1, type, null, arguments) {} return new JSError
 return new JSErrorBase(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return new ErrorException();
return new JSError(null, null, -1, -1, 0x00, type, null, arguments);
 return new JSE(type);
return new  JSErrror ( ) ;
 return new JSErr((1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, 0, -1);
 return new JSErrror(sourceName, null, -1, -1, type, null, arguments);
 return super.make(arguments);
return new JSError(null, null, -1, 0, type, null, arguments);
return new JSError(null, null, -1, -1, type, arguments); return null ;
return new JSError(null, null, -1, -1, type, null, 0.0, arguments);
return  null ; }
return new JSError(null, null, -1, -1, type, null, arguments) {} return new JSErr();
 return new ErrorException(-1, type, null, arguments);
 return new JSError(Type, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, arguments); }
return new JSError(null, null, -1, -1, type, null, arguments); } else { return null ; } } ;
 return new Make(null, arguments);
return new JSError(null, null, -1, -1, type, null, [null], null, arguments);
 return new JSError("-1, type, null, arguments);
 return new JSErrror(1, -1, type, null, arguments);
 return new JSE(args);
 return new JSEror(new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, null, type, null, null, arguments);
return new JSError(null, null, 0, 0, -1, type, null, arguments);
 return New JSError(sourceName, -1, type, null, arguments);
return  new ( ) ;
 return new J($ror, -1, type, null, arguments);
 return new JSRror(arguments);
return new JSError(null, null, -1, -1, type, null, arguments, 0, null);
 return new JSError(+1, -1, type, null, arguments);
 return new JError(-1, -1, type, null, arguments);
 return new JSErrrorImpl(null, null, -1, -1, type, null, arguments);
 return new (sourceName, null, -1, -1, type, null, arguments);
 return new JSErrror, arguments);
 return new JSEr(arguments);
 return new JSErrror(null, null, -1, -1, type, null, arguments);
 return new Diagnostic(-1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, null, null, arguments); } } ;
return new JSError(null, lineno, null); }
return new JSError(null, null, -1, -1, type, -1, 0, null, arguments);
 return new JSErs1, type, null, arguments);
 return "null, -1, -1, type, null, arguments);
 return new JSEerror, null, arguments);
 return new JSErrror, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, -1, type);
return new JSError(null, null, -1, -1, null, arguments); } } ;
return new JSError(null, null, -1, -1); }
 return new Source(, -1, -1, type, null, arguments);
 return new JSE(null, null, arguments);
 if (level == null) {
return new JSError(null, null, -1, -1, type, null, null, arguments); } } ;
 return new JSErrror(); }
return new JSError(null, 0.0, -1, -1, type, null, arguments);
return new JSError(null, null, lineno, null); }
 return new Make(type, arguments);
 return new JSError()); }
return new JSError(null, null, 0, arguments); }
return new JSError(null, null, 0, arguments);
 return new JSError() {}
return new JSError(null, sourceName, -1, -1, -1, type, null, arguments);
 return new JSError((-1, -1, type, null, arguments);
 return New JSError(new JSError(null, null, -1, -1, type, null, arguments);
 return new JSEerror, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, 0, -1);
 return new JSEr(null, arguments);
 return new (level, type, null, arguments);
 return null ; } return newJSError(null, null, -1, -1, type, null, arguments);
 return new JSEr(type, null, arguments);
 return new JSEption, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, 0, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null); } return null ;
 return new JSEerror, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, 0, arguments);
 return new JSEr(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, null); }
return new JSError(null, null, -1, -1, type, null, arguments) {} return null ;
 return new JSError(level, type, null, arguments);
 return new JSErrror(-1, type, null, arguments);
return new JSError(null, null, -1, -1, type); }
return new JSError(null, null, -1, -1, type, null, arguments, null, null, null, null); }
return new JSError(null, null, -1, -1, type, 0.0, arguments);
 return new Make(null, -1, -1, type, null, arguments);
return new JSError(null, 0.0, null, -1, -1, type, null, arguments);
 return new JSE(null);
 return new JSEerror, -1, type, null, arguments);
 return new Source(, -1, type, null, arguments);
return new JSError(null, lineno, type); }
 return new Source(, type, null, arguments);
 return new JSError("-1, -1, type, null, arguments);
 return create(type, null,arguments);
 return new JSEr(null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) {} return null ; }
 return new Error());
 return new Jse(type, null, arguments);
 return -1, -1, -1, type, null, arguments);
 return new DefaultJSError(null, null, -1, -1, type, null, arguments);
 return new JSErrornew JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, null, 0, null);
 return "(-1, -1, type, null, arguments);
 return new JSError('-1, type, null, arguments);
 return new ErrorImpl(type, null, arguments);
 return make(null);
 return New JSError(null, -1, -1, type, null, arguments);
 return (CheckLevel)new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return null ; } }
return new JSError(null, null, -1, -1, type, arguments); } }
 return new Error(, -1, type, null, arguments);
 return new Error(sourceName, arguments);
 return new Jse(null, null, -1, -1, type, null, arguments);
 return JSError.makenew JSError(null, null, -1, -1, type, null, arguments);
 return new Jse(null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, level, arguments); } }
 return -1, type, null, arguments);
return new JSError(null, null, -1, -1, 0.0, null, arguments);
 return JSErrorImpl(new JSError(null, null, -1, -1, type, null, arguments);
 return make(args);
 return new JSEerror, null, -1, -1, type, null, arguments);
return new  JSError(null); }
return new JSError(null, 0, null, null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, level, arguments);
return new JSError(null, null, 0x00, -1, type, null, arguments);
return  new ErrorException();
 return new Error, type, null, arguments);
return new JSError(sourceName, type); }
 return new JSError({1, type, null, arguments);
return new JSError(null, null, -1, -1, type, -1, type, arguments);
 return new Note(type, arguments);
return new JSError(null, 0, arguments); }
 return new JSEError(null, arguments);
 return new JSRror(null, arguments);
 return new JSErr({-1, -1, type, null, arguments);
 return new Error, null, -1, -1, type, null, arguments);
 return new ErrorImpl(null, null, -1, -1, type, null, arguments);
 return new Error(, -1, -1, type, null, arguments);
 return new JSEError(type, null, arguments);
 return new JRror(null, -1, -1, type, null, arguments);
 return new JRror(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, arguments); } }
 return "null, null, -1, -1, type, null, arguments);
 return new Error ( ) {
return new JSError(null, null, -1, -1, type, nil, arguments);
return new JSError(null, null, -1, null, 0.0, type, null, arguments);
 return new (null, null, arguments);
return new JSError(null, 0, 0, 0, -1, -1, type, null, arguments);
 return new ERror(null, null, -1, -1, type, null, arguments);
 return new Error(", -1, type, null, arguments);
 return New JSError(-1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, 0, arguments);
return new JSError(null, null, level, arguments);
return new JSError(null, null, -1, -1, arguments); } }
return new JSError(null, null, nil, arguments);
 return new JException(null, null, -1, -1, type, null, arguments);
 return new Error (...) {
 return New JSError(null, arguments);
 super(type, arguments);
return new JSError(null, null, -1, -1, null); }
 return new JSErrror(-1, -1, type, null, arguments);
 return make(argument);
 return new Error((-1, type, null, arguments);
 return new ErrorException(null, -1, -1, type, null, arguments);
return new JSError(sourceName); }
return new JSError(null, null, nil, arguments); }
 if (sourceLocation) {
 return new Source(, null, arguments);
return new JSError(null, null); }
 return new BasicJSError(null, null, -1, -1, type, null, arguments);
 return new JSError([-1, -1, type, null, arguments);
return new JSError(null, null, -1, 0.1, type, null, arguments);
 return new sourceName, null, arguments);
 return New JSError(type, null, arguments);
 return new NoSourceJSError(null, null, -1, -1, type, null, arguments);
 return new JSErrror(type, null, arguments);
 log(arguments);
return new JSError(null, null, -1, null, type, null, arguments);
 return new JSRror(type, null, arguments);
return new JSError(null, null, 0, -1, type, null, arguments);
 return "(-1, type, null, arguments);
 return new JSErrror(null, arguments);
 return new JSErsror, type, null, arguments);
return new JSError(null, null, -1, -2, arguments);
 log(null, arguments);
return new JSError(null, name, arguments); }
 return new NoSourceInfoJSError(null, null, -1, -1, type, null, arguments);
 return new JSErsror, -1, type, null, arguments);
 return new JSEError(-1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, 0.0);
 return new Exception ( ) ;
return new JSError(null, null, -1, null, 0, 0, type, null, arguments);
return  ( JSError )
 return new JSErr(-1, type, null, arguments);
 return New JSError;
return new JSError(null, null, -1, 0.0);
return new JSError(null, null, -1, null, null, type, null, arguments);
 return (null, null, arguments);
return new JSError(null, null, -1, -1), arguments);
 return null, arguments);
 return JSErrror.JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, 0x00, type, null, arguments);
 return New JSError(null, null, -1, -1, type, null, arguments);
 return new String(1, -1, type, null, arguments);
return new JSError(null, null, -1), arguments);
 return new IllegalArgument;
return new JSError(null, null, null, null, null, -1, type, null, arguments);
return new JSError(null, lineno); }
return new JSError(null, null, -1, -1, -1); }
return new JSError(null, null, -1, -1, -1, 0, null, arguments);
return new JSError(null, null, -1, -1, type, null, [null], arguments);
 return create(1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); return null ; } }
return new JSError(null, null, -1, -1, type, null, arguments, 0, 0);
 if (debug) {
 return (checkLevel)new JSError(null, null, -1, -1, type, null, arguments);
 return new JSErsror, -1, -1, type, null, arguments);
 return new Error, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, -1, 0);
 return "null, -1, type, null, arguments);
 return new JSErrror(null, -1, -1, type, null, arguments);
return  new JSE ;
 return new Error, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null); }
 return null ; return newJSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); } return null ; } ;
 return new JSRror(null, null, -1, -1, type, null, arguments);
 return new JSRror(null, -1, -1, type, null, arguments);
 return "(null, -1, -1, type, null, arguments);
 return new static(arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { } ;
 return null, null, arguments);
 return new JSEError(null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, level, arguments);
return new JSError(sourceName, 0, null, -1, -1, type, null, arguments);
 return create(type);
 return new BlankJSError(null, null, -1, -1, type, null, arguments);
 return new JSEError(null, null, -1, -1, type, null, arguments);
 return new J($ type, arguments);
return new  static ;
 return new static(null, arguments);
 return new JSEerror(null, arguments);
 return new JSEerror;
 return new NoSourceInformationJSError(null, null, -1, -1, type, null, arguments);
 return new String(arguments);
 return (Object) newJSError(null, null, -1, -1, type, null, arguments);
 return (null, arguments);
 return new JSEarror, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, -1, 0, arguments);
 log(type, arguments);
 return new Make(arguments);
return new JSError(null, null, -1, -1, type, null) ;
 return createInternal(arguments);
 return (String) newJSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, 0); }
return new JSError(null, null, null, 0, -1, type, null, arguments);
 return (CheckError)new JSError(null, null, -1, -1, type, null, arguments);
 return new Info(type, null, arguments);
 return new StaticJSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, 0, arguments); }
 return (void)new JSError(null, null, -1, -1, type, null, arguments);
 return new JSEerror(type, null, arguments);
return new JSError(null, null, -1, -1, type, nil, arguments); }
 print(arguments);
 return "(null, -1, type, null, arguments);
 return new JSEerror(null, null, -1, -1, type, null, arguments);
 return create(1, type, null, arguments);
return new JSError(null, null, -1, 0.0.0, type, null, arguments);
 return new JSEerror(null, -1, -1, type, null, arguments);
return new JSError(SourceName, null, null, null, -1, -1, type, null, arguments);
return new JSError(null, 0x00, -1, -1, type, null, arguments);
 return new Info(null, -1, -1, type, null, arguments);
 return new Info(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, type, null, arguments);
 return new Error([-1, type, null, arguments);
 return new Info(null, arguments);
 return null JSError(null, null, -1, -1, type, null, arguments);
 return null JSError(null, -1, -1, type, null, arguments);
 return new String(null, arguments);
 return (T)new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -2, arguments); }
return new JSError(null, null, -1, -1, type, null, null, -1);
 return new NullableJSError(null, null, -1, -1, type, null, arguments);
 return (null)new JSError(null, null, -1, -1, type, null, arguments);
 return new Exception(1, -1, type, null, arguments);
return new JSError(null, null, -1, -1,... arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { } }
return  - 1 ;
 return new Report(null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, type, arguments);
 return new static(type, null, arguments);
 return new Report(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments); return null
 return build(type, arguments);
 if (null) {
 return new JSErerror;
return new JSError(null, null, -1, -1, type, -2, null, arguments);
 return new Mirror(null, -1, -1, type, null, arguments);
return new  NullException();
 return new String(1, type, null, arguments);
return new JSError( arguments); }
 return new UndefinedJSError(null, null, -1, -1, type, null, arguments);
 return new (, type, null, arguments);
 return create(-1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, 0, 0, arguments);
 return new Error("-1, type, null, arguments);
 make(-1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, 0, -1);
 return new Exception(-1, -1, type, null, arguments);
 return create(, type, null, arguments);
 return new Exception(1, type, null, arguments);
 return new Info(1, type, null, arguments);
 return new UnspecifiedJSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, -1, false, null, arguments);
 return null, arguments;
return new JSError(null, type); }
return new JSError(null, null, null, 0.0, -1, type, null, arguments);
 return new Report(-1, -1, type, null, arguments);
return new JSError(null, 0, null, null, -1, -1, type, null, arguments);
 return new Error((-1, -1, type, null, arguments);
 return "-1, -1, type, null, arguments);
 return new String(-1, -1, type, null, arguments);
 return -1||new JSError(null, null, -1, -1, type, null, arguments);
 return new UnusedJSError(null, null, -1, -1, type, null, arguments);
 return -1*new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, null); }
 return new (, null, arguments);
return new JSError(null, null, -1, -1, -2, type, null, arguments);
 return new Error('-1, type, null, arguments);
 return (--1, type, null, arguments);
 return make((-1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, 0); }
 } else {
 return "Source location "+new JSError(null, null, -1, -1, type, null, arguments);
 return make([-1, type, null, arguments);
 return new Error(); }
return new JSError(null, -1);
return new JSError(null, null, -1, -1) {}
 return new (1, -1, type, null, arguments);
 return "Source location",new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) { return ;
 return make($1, type, null, arguments);
return new JSError(null, 0); }
 return "[-1, type, null, arguments);
 return create(arguments);
 return "null";
 return create(-1, type, null, arguments);
return new  Exception();
return new Instance();
 return "(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -2) ;
return new JSError(args); }
return new JSError(0, null, null, null, -1, -1, type, null, arguments);
return new JSError(null, nil); }
 return null ; }
 return new ErrorException;
return new JSError(null, null, -1, -1); } }
return new JSError(null, null, -1, -1, type) ;
 return create(null, null, -1, -1, type, null, arguments);
 return make(Type, arguments);
 return create(null, -1, -1, type, null, arguments);
 return make((-1, -1, type, null, arguments);
return new JSError(type); }
return new JSError(null, null) ;
return new JSError(null, null, -1); } }
 return build(1, type, null, arguments);
return new JSError(0, 0, null, null, -1, -1, type, null, arguments);
 build(arguments);
 super(arguments);
 return New Error(null, null, -1, -1, type, null, arguments);
 return "Unknown";
 print(argument);
return new JSError(null, null, -1, -1) {
 return build(arguments);
 return new Bug(null, null, -1, -1, type, null, arguments);
 print(args);
 return "[-1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments) {} return null
return new JSError(noSourceInfo, null, null, -1, -1, type, null, arguments);
 return "(1, type, null, arguments);
return new JSError(null, null, null); }
 log(args);
 return make({1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null), arguments);
 return make(--1, type, null, arguments);
 return new String, null, -1, -1, type, null, arguments);
 format(null, arguments);
 return null ;
 print(null, arguments);
 return make([-1, -1, type, null, arguments);
 return null||new JSError(null, null, -1, -1, type, null, arguments);
 return create(null, arguments);
 return createInternal(type, null, arguments);
return new  Error ;
 return build(-1, -1, type, null, arguments);
 return null ; } }
return new JSError(null, null, -1, -1, type, null, arguments, false);
return new JSError(null, null, -1) {}
return new JSError(null, null, -1, -1, null);
 return 0, -1, type, null, arguments);
 return "", type, null, arguments);
 return (1, -1, type, null, arguments);
 log(type, null, arguments);
 return null ; } {
 make(null, -1, -1, type, null, arguments);
 return null? }
return new JSError(null, null, -1, null);
 build(type, null, arguments);
 throw (-1, type, null, arguments);
 throw make(arguments);
 return (, type, null, arguments);
 return build(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, argument); }
return new JSError(null), arguments);
return new JSError(null, null), arguments);
 return build(null, -1, -1, type, null, arguments);
 make(null, null, -1, -1, type, null, arguments);
 return build(type, null, arguments);
return new JSError ( type )
 return build(null, arguments);
 create(type, null, arguments);
 return null,new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, lineno, -1, -1, type, null, arguments);
 return type;
 throw make(null, arguments);
return new JSError(null, null, -1, -1, type, args); }
 new Make(arguments);
 return "", -1, type, null, arguments);
return new JSError(null, null, -1, -1, type), arguments);
return new JSError(null, argument);
return new JSError(null, null, -1, -1, type, null, arguments) {}
 return 0, -1, -1, type, null, arguments);
 return sourceName;
 return ""+new JSError(null, null, -1, -1, type, null, arguments);
 return null; };
return new JSError(null, null, -1, -1, type, null, arguments) {
 return 0||new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments, 0);
 return null?;
 throw null, -1, type, null, arguments);
 return 0, type, null, arguments);
 return null?new JSError(null, null, -1, -1, type, null, arguments);
 return [-1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, []));
 throw make(null, -1, -1, type, null, arguments);
 return ; }
 return this);
 return false ;
return new JSError(null, null, null);
return new JSError(null); };
return new  JSEarror(null, null, -1, -1, type, null, arguments);
 return "", -1, -1, type, null, arguments);
 return "", null, -1, -1, type, null, arguments);
 throw make(null, null, -1, -1, type, null, arguments);
(null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, charno, type, null, arguments);
 throw arguments);
 return this;
 return nil;
return new  JSErerror(null, null, -1, -1, type, null, arguments);
(type, arguments);
(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, -2, arguments);
return new JSError(null) {}
 throw make(type, null, arguments);
return new JSError(null, arguments));
 return arguments);
return new JSError(null, null); };
 sourceName, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, argument);
 print type, arguments);
 throw null);
 throw null;
return new JSError(null, null, argument);
(type, null, arguments);
return new JSError(null, null, -1, -3);
return new JSError(null, null, -1, -1, type, null, +1);
return new JSError(null, null, -1, -1, type, null, arguments, true);
return new JSError(null, null, -1, -1, -2, null, arguments);
return new JSError(null, null, -1, -2, type, null, arguments);
 return (, null, arguments);
 return defaultError;
 return defaultInstance;
return new JSError(SourceName, null, null, -1, -1, type, null, arguments);
return new JSError(null, null, 0L, -1, type, null, arguments);
return new JSError(null, null, -1, -1)) ;
return new JSError(null, null, -1, -1, type); };
return new JSError(null, null, -1, -1, type, args);
return new JSError(null, null, -1)) ;
return new JSError(null, null, -1, level, type, null, arguments);
return new JSError(null, null, -1, -4);
return new JSError(null, null) {}
return new JSError(null, null, -1, -1, type, null) {}
return new JSError(null, null, -2, -1, type, null, arguments);
return new JSError(null, null, -2);
return new JSError(null, null, -1, -1, type, null, arguments, -2);
return new JSError(null, null, -1, -1, type) {}
return new JSError(null, null, -1, -1, type, null, arguments, +1);
return new JSError(null, null, -1, -1, type, null, arguments, "");
return new JSError(null, null, -1, -1, type, null,);
return new JSError(null, null, -1, -1, type, null, arguments, []));
return new JSError(null, +1, -1, -1, type, null, arguments);
return new JSError(null, 0L, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, arguments));
return new JSError(null, null, -1, -1, type, null) {
return new JSError(null, null, -1, -1, type, null); } }
return new JSError(null, null, -1, -1, type, null,  arguments)); }
return new JSError(null, null, -1, -1, type, 0L, arguments);
return new JSError(null, null, -1, -1, type) {
return new JSError(null, null, -1, 1, type, null, arguments);
return new JSError(null, null, -1)
return new JSError(null, null, -1, -1,  argument);
return new JSError(null, null, -1,  argument);
return new JSError(nullName, null, -1, -1, type, null, arguments);
return new JSError(nullName, null, null, -1, -1, type, null, arguments);
return new JSError(sourceLocation, null, null, -1, -1, type, null, arguments);
return new JSError(sourceLocation, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, +1, null, arguments);
return new JSError(null, null) {
return new JSError(null, null, -1, false, type, null, arguments);
 return createJSError(null, null, -1, -1, type, null, arguments);
 return "new JSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1,  args);
return new JSError(null, null, -1,  args);
 return makeJSError(null, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1,  0);
return new JSError(null, null, -1,  0);
return new JSError(null, null, 1, -1, type, null, arguments);
return new JSError(null,  args);
return new JSError(null, null, "", -1, type, null, arguments);
 return getJSError(null, null, -1, -1, type, null, arguments);
 } {
return new JSError(null, null,  args);
return new JSError(null, null, -1, -1, type, uments);
return new JSError(null, null, level, -1, type, null, arguments);
return new JSError(null, null,  arguments));
return new JSError(null, 1, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null,  args);
return new JSError(null, null, -1, -1, type, null,  arguments)
return new JSError(null, null, -1, -1, type, type, arguments);
return new JSError(null, null, -1, -1, type, null, uments);
return new JSError(null, null, -1, -1, false, null, arguments);
return new JSError(null, false, -1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, "", arguments);
return new JSError(null, null, -1, -1, "", null, arguments);
return new JSError(NULL, null, null, -1, -1, type, null, arguments);
return new JSError(NULL, null, -1, -1, type, null, arguments);
return new JSError(null, null, -1, +1, type, null, arguments);
return new JSError(null, null, +1, -1, type, null, arguments);
return new JSError(1, null, -1, -1, type, null, arguments);
return new JSError(1, null, null, -1, -1, type, null, arguments);
 *
return new JSError(null, null, -1, "-1, type, null, arguments);
return new JSError(null, null, -1, 01, type, null, arguments);
return new JSError(null, null, 01, -1, type, null, arguments);
return new JSError(null, null, "-1, -1, type, null, arguments);
return new JSError(null, null, -1, -1, type, null, argument);
return new JSError(null, null, -1, -1, type, null, documents);
