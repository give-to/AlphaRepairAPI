 } return changed ;
 compiler. addToDebugLog ( unknownDefine ) ;
 } return changed ;
 compiler. addToDebugLog ( unknownDefine ) ; }
 compiler.exit(1);
 compiler. addToDebugLog ( unknownDefine, unusedReplacements ) ;
 compiler. addToDebugLog ( unknownDefine )
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine ) ;
 }
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ;
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine ) ; }
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; }
 compiler. addToDebugLog ( unknownDefine, unusedReplacements ) ; }
 compiler. report ( unknownDefine ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unusedReplacements ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. report ( unknownDefine ) ;
 compiler. reportCompilationError ( unknownDefine ) ; compiler. reportCompilationError ( unknownDefine ) ; } return changed ;
 compiler. addToDebugLog ( unknownDefine, unusedReplacements )
 compiler. addToDebugLog ( Unknown_DEFINES ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. pop ( ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unusedReplacements ) ; }
 compiler. addToDebugLog ( unknownDefine ) ; } return changed ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. report ( ) ; }
 compiler. addToDebugLog ( Unknown_DEFINES, unusedReplacements ) ; }
 compiler. addToDebugLog ( Unknown_DEFINES ) ; }
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine )
 compiler. reportCompilationError ( unknownDefine ) ; compiler. reportCompilationWarning ( unknownDefine ) ; } return changed ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unknownDefine ) ; } return changed ;
 compiler. addToDebugLog ( Unknown_DEFINES, unusedReplacements )
 compiler. reportCompilationError ( unknownDefine ) ; compiler. reportCompilationWarning ( unknownDefine ) ; }
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unknownDefine ) ; }
 compiler. addToDebugLog ( unknownDefine ) ; } compiler. reportCodeChange ( ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unknownDefine ) ; compiler. report ( )
 compiler. addToDebugLog ( unknownDefine, info ) ;
 compiler. reportCompilationError ( unknownDefine ) ; compiler. reportCompilationError ( unknownDefine ) ; compiler. report ( )
 compiler. addToDebugLog ( unknownDefine ) ; compiler. reportCodeChange ( ) ;
 compiler. reportCompilationError ( unknownDefine ) ; compiler. reportCompilationError ( unknownDefine ) ; }
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unusedReplacements ) ; } return compiler ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unusedReplacements ) ; } return changed ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. reportChange ( ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unusedReplacements ) ; } } }
 compiler. addToDebugLog ( unknownDefine ) ; } return compiler ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unknownDefine ) ; } } }
 compiler. addToDebugLog ( unknownDefine, "" ) ;
 compiler. addToDebugLog ( unknownDefine, null ) ;
 compiler. reportCompilationError ( unknownDefine ) ; compiler. reportCompilationError ( unknownDefine ) ; } } }
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; compiler. report ( unknownDefine ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unusedReplacements ) ; compiler. report ( )
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( "" ) ;
 compiler. addToDebugLog ( unknownDefine ) ; } } }
 compiler. reportCompilationError ( unknownDefine ) ; compiler. reportCompilationWarning ( unknownDefine ) ; compiler. report ( )
 compiler. reportCompilationError ( unknownDefine ) ; compiler. reportCompilationWarning ( unknownDefine ) ; } } }
 compiler. reportCompilationError ( unknownDefine ) ; compiler. reportCompilationError ( unknownDefine ) ; compiler. stop ( )
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; compiler. report ( ) ;
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine, unusedReplacements ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unknownDefine ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. report ( UnknownDefine ) ;
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; } return changed ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. report ( Unknown_DEFINES ) ;
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; } return compiler ;
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; compiler. reportChange ( ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unknownValue ) ;
 compiler. report ( unknownDefine )
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( null ) ;
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; } }
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; compiler. report ( ) ; }
 compiler. addToDebugLog ( unknownDefine, undefinedDefine )
 compiler. addToDebugLog ( unknownDefine ) ; } }
 compiler. addToDebugLog ( unknownDefine ) ; compiler. report ( unknownDefine )
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unusedReplacements ) ; } } ;
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine ) ; compiler. report ( ) ;
 compiler. addToDebugLog ( unknownDefine ) ; compiler. addToDebugLog ( unusedReplacements )
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine ) ; compiler. flush ( ) ;
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine ) ; } return changed ;
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; } } }
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; } } return compiler ;
 } compiler. addToDebugLog ( defineName ) ;
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine ) ; } }
 compiler. addToDebugLog ( UnknownDefineWarning ) ;
 compiler. report ( unknownDefine ) ; }
 compiler. addToDebugLog("Error " + defineName);
 compiler. addToDebugLog ( unknownDefine ) ; } compiler. report ( )
 compiler. addToDebugLog ( unknownDefine ) ; } } ;
 compiler.reportCodeChange(); }
 compiler. report ( UnknownDefine ) ;
 compiler.exit(0);
 } compiler. reportCodeChange ( ) ;
 compiler. addToDebugLog ( "" ) ;
 compiler. addToDebugLog ( unknownDefine ) ; } compiler. pop ( )
 compiler.addToDebugLog(unknownDef);
 compiler. addToDebugLog ( Unknown_DEFINES, unknownDefine ) ; } compiler. report ( )
 } return unusedReplacements
 compiler.exit(); }
 compiler. addToDebugLog ( unknownDefine, ) ;
 compiler.addToDebugLog(comment);
 compiler. addToDebugLog ( unknownDefine ;
 } compiler. addToDebugLog ( ) ; compiler. addToDebugLog ( ) ; compiler. reportChanges ( ) ;
 } compiler. addToDebugLog ( ) ; compiler. addToDebugLog ( ) ; compiler. reportChange ( ) ;
 compiler.exitCode(1);
 compiler.exit();
 } compiler. addToDebugLog ( ) ; compiler. addToDebugLog ( ) ; compiler. commitChanges ( ) ;
 compiler.addToDebugLog(unknownDefinition);
 } compiler. addToDebugLog ( ) ; compiler. addToDebugLog ( ) ; compiler. exit ( ) ; }
 } compiler. reportCodeChange ( )
 compiler. addToDebugLog ( unknownDefine, unknownDefine ) ; } } } } ;
 compiler.reportCodeChange(changed);
 compiler.exit(); }
 compiler.addToDebugLog(comment); }
 } compiler. addToDebugLog ( ) ; compiler. addToDebugLog ( ) ; compiler. report ( ) ; }
 } compiler. addToDebugLog ( "done" )
 compiler.reportCodeChange();
 compiler.exit(1); }
 } return unusedReplacements
 changed = true ;
 compiler.stopLearning();
 compiler.exit(error); }
 compiler.exit(0); }
 compiler.addToDebugLog("Unknown definition detected"); }
 } return undefined ; }
 } } return compiler ;
 compiler.addToDebugLog("Unknown define detected"); }
 compiler.exitCode(); }
 } } }
 compiler.stop(); }
 compiler.stop(); }
 compiler.exit();
 } return null ;
 compiler.exit(); } }
 } return false ;
 compiler.exit()();
 } return true ;
 } return false ;
 } return ;
 } return changed
 } } } }
 } return ;
 } } }
 } } ;
 return false ;
 return false;
 } break ;
 } } ;
 } }
 } }
 }
 break;
 break;
 break }
 break }
 break();
};
