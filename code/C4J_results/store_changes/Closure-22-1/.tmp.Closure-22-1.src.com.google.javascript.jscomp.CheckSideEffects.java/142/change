msg = "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg.toLowerCase() +
msg = "The result of the '" + Token.name(n) +
msg = "The result of the '"  + simpleOp +
msg = "The result of the '"  + isSimpleOp +
msg = "The result of the '" + Token.name(n.getType()) + " +
 msg += n.getType()).toLowerCase() +
 msg += IR.name(n.getType()).toLowerCase() +
 msg += "'+ Token.name(n.getType()).toLowerCase() +
 msg = n.toLowerCase() +
 msg = n)).toLowerCase() +
 msg +=Token.name(n.getType()).toLowerCase() +
 msg = "The '" + n.getType()).toLowerCase() +
msg = "The result of the '"  + n.getType ( ) +
 msg += (n.getType()).toLowerCase() +
 msg = "The '" + op.toLowerCase() +
 msg = "The '"+ Token.name(n.getType()).toLowerCase() +
 msg = "The '+
 msg = n).toLowerCase() +
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' operator." ;
 msg += "'"+
 msg = n.getType() +
msg = "The result of the '" + Token.name(n.getType()) + "' '" + simpleOp +
msg = "The result of the '"  + n.getName ( ) +
msg = "The result of the '"  + n.getString ( ) +
 msg =.toLowerCase() +
 msg = "'" + n.toLowerCase() +
msg =  msg +
 msg = "' + op.toLowerCase() +
 msg = "The '+Token.name(n.getType()).toLowerCase() +
 msg = "The '+ op.toLowerCase() +
 msg = "The '"+(n.getType()).toLowerCase() +
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "'." ;
 msg = "'"+
 msg = "The result of the '" + Token.name(n.getType()) + "' operator is being used." ; } else
 msg = "The '+n.getType()).toLowerCase() +
 msg = n.getType()).toLowerCase() +
 msg = "'+
 msg += "The '" + n.getType()).toLowerCase() +
 msg = "'" + n.getType()).toLowerCase() +
 msg += " + IR.name(n.getType()).toLowerCase() +
 msg = n.getString()).toLowerCase() +
 msg =() +
 msg = "The '" + getName() +
msg = "The result of the '"  + n. getType +
msg = "The result of the '" + Token.name(n.getType( ))+
 msg = "The result of the '" + Token.name(n).getType() + "' operator is being used." ; } else
msg = "The result of the '"  + n.getIdentifier ( ) +
 msg = "The '+(n.getType()).toLowerCase() +
 msg += " "' + n.getType()).toLowerCase() +
 msg = (n.getType()).toLowerCase() +
 msg +=name(n.getType()).toLowerCase() +
 msg = "The '" + n.toLowerCase() +
 msg = "The result of the '+' operator is being used." ; } else if (isResultUsed) {
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "'";
 msg = "The result of the '" + Token.name(n.getType()) + "' operator is being used." ;
 msg = "The '" + IR.name(n.getType()).toLowerCase() +
msg = "The result of the '"  + n. name ( ) +
 msg = n.getSimpleName() +
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase(); }
msg = "The result of the '" + Token.name(n.getType()).getName() +
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "'."
msg = "The result of the '" + Token.name(n.getType()) + "' '" + op +
 msg = "The result of the operator is being used." ; } else
msg = "The result of the '" + Token.name(n.getType()) + "' '" + operator +
 msg = "The result of the '" + Token.name(n.getType()) + "' operator is being used." ; }
 msg = "The result of the operator is being used." ; }
msg = "The result of the '" +  n.getType().getName ( ) +
 msg += "The '" +Token.name(n.getType()).toLowerCase() +
 msg += n.getSimpleName() +
 msg = "The result of the '' operator is being used." ; } else if (isResultUsed) {
 msg += n.getSimpleName()).toLowerCase() +
 msg += "' + n.getType()).toLowerCase() +
 msg = "'" + capitalize(n.getType()).toLowerCase() +
 msg = "The result of the operator is being used." ; } else {
 msg = "The '(n.getType()).toLowerCase() +
 msg =)).toLowerCase() +
 msg = "The result of the '+' operator is not being used." ; } else if (isResultUsed) {
 msg = "The operator '" +Token.name(n.getType()).toLowerCase() +
 msg = "The '+" + n.getType()).toLowerCase() +
 msg = "The '"+name(n.getType()).toLowerCase() +
 msg = "The ' + IR.name(n.getType()).toLowerCase() +
 msg = n.getName()).toLowerCase() +
msg = "The result of the '"  + n.getSimpleName ( ) +
 msg += n.getType() +
 msg += "'"+ Token.name(n.getType()).toLowerCase() +
 msg = "' + n.getType()).toLowerCase() +
 msg += " The "+ Token.name(n.getType()).toLowerCase() +
 msg = "'" + n.getString()).toLowerCase() +
 msg = "The result of the '+' operator is being used." ; } else if (n.isFunction()) {
 msg += " The '+
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + " +
 msg = "The result of the '+' operator is being used." ; } else if (isResult) {
 msg =) +
 msg = "The '+ n.toLowerCase() +
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "'".
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase() } else {
 msg = " + (n.getType()).toLowerCase() +
 msg = "'" + n.getSimpleName()).toLowerCase() +
 msg = "The '+name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)) + "' '" + simpleOp +
 msg += "'" + n.getType()).toLowerCase() +
 msg += " The '+Token.name(n.getType()).toLowerCase() +
 msg = "'" + IR.name(n.getType()).toLowerCase() +
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase();
 msg = "'" + (n.getType()).toLowerCase() +
 msg = "The '" + getType() +
 return n.getType()).toLowerCase() +
 msg = "The '" + operator.toLowerCase() +
 msg = "The result of the '+' operator is not being used." ; } else if (isResult) {
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase(); } else
msg = "The result of the '" + Token.name(n.getType()) + "' '" + isSimpleOp +
 msg = "The result of the '' operator is being used." ; } else if (n.isFunction()) {
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase';
 msg = n.name()).toLowerCase() +
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase()';
 msg = "'" + n.getName()).toLowerCase() +
 msg = "The result of the " + Token.name(n.getType()).toLowerCase(); }
 msg += " The '"+name(n.getType()).toLowerCase() +
 msg = n.value() +
 msg += n.toLowerCase() +
 msg += "'(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a bug?" ; } else
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' operator."
 msg = "The result of the operator is being used." ; } } else {
 msg = "The "' + op.toLowerCase() +
 msg = "' + operator.toLowerCase() +
 msg = "The result of the '" + Token.name(n.getType()).toLowerCase()'; }
 msg += "The '" + op.toLowerCase() +
 msg = "The '+ operator.toLowerCase() +
 msg = "The '" + toString() +
msg = "The result of the '"  + n.getValue ( ) +
 msg = "'"+ Token.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a bug?" ; } else {
 msg += " "' + n.toLowerCase() +
 msg = n.getSimpleName()).toLowerCase() +
 msg = "The result of the '' operator is being used." ; } else if (isResult) {
 msg = "This code lacks side-effects. Is there a bug?" ; }
 msg = "The result of the operator is being used." ;
 msg = "The result of the operator is being used." ; } else if (isResultUsed) {
 msg = "The '+' + n.getType()).toLowerCase() +
 msg += " "' + IR.name(n.getType()).toLowerCase() +
 msg = "The result of the " + Token.name(n.getType()).toLowerCase();
 msg += "The '+" + n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?"; } else { msg = n +
 msg = "The result of the '' operator is being used." ; } } else {
msg =  "The '+'" +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + "' '" + simpleOp +
 msg += n.getString()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?"; } else { msg +=
 msg = "The operator '+ IR.name(n.getType()).toLowerCase() +
 msg += "The '" + IR.name(n.getType()).toLowerCase() +
 msg = "'" + n.getString().toLowerCase() +
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?"; } else { msg = "
 msg = IR.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + "' operator '" + simpleOp +
 msg = "The operator '" + n.getType()).toLowerCase() +
msg = "The result of the '"  + n.getType().name ( ) +
 msg = "'"+name(n.getType()).toLowerCase() +
msg = "The result of the '"  + n.getFullName ( ) +
 msg = "The result of the '+' operator is being used." ; } else if ( msg ) {
 msg = "This code lacks side-effects. Is there a '-' on the next line?"; } else { msg +=
msg =  "'" + n +
 msg = "'" + n.getType() +
msg = "The result of the '"  + n.value ( ) +
 msg += "The '+n.getType()).toLowerCase() +
 msg = "The '" + (op) +
 msg = "The '+ + op.toLowerCase() +
msg = "The result of the '" + Token.name("PROTECTOR_FN") +
msg  = "The '+'" + n +
 msg += "' + IR.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + "' operator '" + isSimpleOp +
msg = "The result of the '" + Token.name(n.getType(n)) + "' '" + op +
msg = "The result of the '" + Token.name(n.getType(n)); } else { msg = n +
 msg = n.name() +
msg = "The result of the '" + Token.name(n.getType(n)) + "' '" + operator +
 msg = "The operator '" + IR.name(n.getType()).toLowerCase() +
 msg = "The '+n.getType() +
 msg = "The result of the operator is not being used." ; } else {
msg = "The result of the '"  + n.getTypeName ( ) +
 msg = "This code lacks side-effects. Is there a '-' on the next line?"; } else { msg = "
msg = "The result of the '"  + op +
 msg = "'" + n.getName().toLowerCase() +
 msg = "The result of the '+' operator is being used." ; } else
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?"; } else msg +=
 msg = "The result of the '' operator is being used." ; } else {
 msg = "This code lacks side-effects. Is there a '-' on the next line?"; } else { msg = n +
 msg = "This code lacks side-effects. Is there a '-' on the next line?"; } else { msg = "' + +
 msg += "' + operator.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + "' '" + op +
 msg = "The '+' + op.toLowerCase() +
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?"; } else { msg += "
 msg = "'" + n.value() +
 msg += n.getName()).toLowerCase() +
 msg = "The result of the '+' operator is not being used." ; } } else {
 msg = "'" + n.getString(()).toLowerCase() +
 msg += "The '"+(n.getType()).toLowerCase() +
 msg = "The "+ Token.name(n.getType()).toLowerCase() +
 msg = "The result of the '+' operator is being used." ; } } else {
msg = "The result of the '" + Token.name(n.getType()) + "' expression '" + simpleOp +
 msg = "The '" + name() +
 msg = n.value()).toLowerCase() +
 msg = "The '# + capitalize(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + "' '" + operator +
 msg = "'" + n.getString() +
 msg = "The '+' + capitalize(n.getType()).toLowerCase() +
 msg += " "' +Token.name(n.getType()).toLowerCase() +
 msg = "The simple '"+ Token.name(n.getType()).toLowerCase() +
 msg = "The result of the operator is not being used." ; } } else {
 msg += " + (n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?"; } else { msg =
 msg = "The result of this operator is being used." ; } else
 msg = n.getString() +
 msg(getType()).toLowerCase() +
 msg = "The '" + n.name()).toLowerCase() +
 msg = "The result of the '+' operator is being used." ; }
 msg += "The '" + getName() +
 msg = "The '-' + op.toLowerCase() +
 msg = "The '" + n).toLowerCase() +
 msg = "This code lacks side-effects. Is there a '-' on the next line?"; } else msg +=
 msg = "'" + n.name() +
 msg = "This code lacks side-effects. Is there a '-' on the next line?"; } else { msg += "
 msg = "The result of the operator is not being used." ; } else
 msg += "' + op.toLowerCase() +
 msg = "An operator '" + op.toLowerCase() +
 msg = "The '" + t.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?" ; msg +=
 msg = "The '+(n.value()).toLowerCase() +
 msg = "The result of the '" + Token.name(n.getType()) + "' operator."
 msg = n.getName() +
 msg = "(n.getType()).toLowerCase() +
 msg = "The '+ + n.value() +
 msg += "The '+ op.toLowerCase() +
 msg = "The '" + capitalize(n.getType()).toLowerCase() +
 msg += " "'+name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a '-' on the next line?"; } else { msg =
 msg = "The '+' '"+(n.getType()).toLowerCase() +
 msg += "'" + IR.name(n.getType()).toLowerCase() +
 msg = "The result of this operator is being used." ; }
 msg = "The result of the operator is not being used." ;
 msg = "The result of the '' operator is being used." ; } else if ( msg ) {
 msg += "The '" + operator.toLowerCase() +
 return msg.toLowerCase() +
 msg = "'" + n.name().toLowerCase() +
 msg += " The '+name(n.getType()).toLowerCase() +
 msg = "' +Token.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?"; } msg +=
 msg = " + n.getType()).toLowerCase() +
 msg += (n).toLowerCase() +
 msg += "The operator '" +Token.name(n.getType()).toLowerCase() +
 msg += "." ;
 msg += "'" + n.getString()).toLowerCase() +
 msg += " "' + op.toLowerCase() +
 msg += " + n.getType()).toLowerCase() +
 msg = "The '" + (n) +
 msg = "'(n.getType()).toLowerCase() +
 msg = "The '" + n)).toLowerCase() +
 msg = "' + IR.name(n.getType()).toLowerCase() +
 msg = "'" + n.name()).toLowerCase() +
 msg = "'" + n.getName() +
 msg = "'" + n.value(().toLowerCase() +
 msg = "An operator '" + IR.name(n.getType()).toLowerCase() +
 msg = n.getName(()).toLowerCase() +
 msg = "The result of a simple operator is being used." ; } else
 msg = "'" + n.getName(()).toLowerCase() +
 msg = "The '+(n.string()).toLowerCase() +
 msg = "The "' + n.toLowerCase() +
 msg = n.getFullName() +
 msg = "The result of the operator is not being used." ; }
msg = "The result of the '" + Token.name(PROTECTOR_FN) +
 msg = "The '+' + (n.getType()).toLowerCase() +
 msg = "+ IR.name(n.getType()).toLowerCase() +
msg = "The result of the '"  + n.getFirstChild ( ) +
 msg = "The '+ + n.name() +
 msg += "\n" ; } else { msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg += n.name()).toLowerCase() +
 msg = "The result of the simple operator is being used." ;
msg = "The result of the '"  + n. getName +
 msg += n.getName().toLowerCase() +
msg  = "The '+ +
 msg += n.getString().toLowerCase() +
 msg += " "' +(n.getType()).toLowerCase() +
 msg = "The result of a simple operator is being used." ; }
 msg = "' + n.toLowerCase() +
 msg = "The result of the " + Token.name(n.getType()).toLowerCase());
 msg = "The '+"+(n.getType()).toLowerCase() +
 msg = "The result of the '+' operator is being used." ; } } } else {
msg = "The result of the '" + Token.name(n).getType() +
 msg = "The operator '" + capitalize(n.getType()).toLowerCase() +
 msg = "The '' + op.toLowerCase() +
 msg = "The operator '" + op.toLowerCase() +
 msg = "The "'+ n).toLowerCase() +
msg = "The result of the '" + TokenUtil.toString(n) +
msg = "The result of the '" + Token.name(n.getType()) + "' expression '" + isSimpleOp +
 msg += "The '" + n.name()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).getValue() +
msg = "The result of the '"  + n +
 msg = "" ;
 msg = "This code lacks side-effects. Is there a '-' on the next line?" ; } msg +=
msg = "The result of the '" + Token.name(n.getType()) + "' '" +
msg = "The result of the '"  + n.getFirstChild().getType +
 msg = "The '" + op).toLowerCase() +
 msg += "'" + n.getName()).toLowerCase() +
 msg += "The '" + capitalize(n.getType()).toLowerCase() +
 msg = "The '+'.+(op).toLowerCase() +
 msg = "An operator with type '"+ Token.name(n.getType()).toLowerCase() +
 msg += "." ; msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "The '+'" + op.toLowerCase() +
 msg = "'" + n.getString(().toLowerCase() +
 msg += "The operator '+ IR.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?" ; msg += "
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?" +
 msg = "'" + n.getValue() +
 msg = "The '+' + n.toLowerCase() +
msg = "The result of the '" + Token. BLOCK +
 msg += n.getString() +
 msg = "') +
 msg += " The " + IR.name(n.getType()).toLowerCase() +
 msg = "An operator with the '"+ Token.name(n.getType()).toLowerCase() +
 msg += "'" + n.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType())) +
 msg += " ' + (n.getType()).toLowerCase() +
 msg = "The '+' + operator.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(String.class) +
 msg = "(n.getString()).toLowerCase() +
 msg = "The operator '"+name(n.getType()).toLowerCase() +
 msg = "The result of a simple operator is being used." ;
 msg += "The '+ IR.name(n.getType()).toLowerCase() +
 msg = "The '"+toLowerCase() +
 msg = "'" + n.value()).toLowerCase() +
 msg = "The '" + indent() +
 msg = "The '+ + operator.toLowerCase() +
 msg = "The '+.toLowerCase() +
 msg += "'" + capitalize(n.getType()).toLowerCase() +
 msg = "The '+'" + capitalize(n.getType()).toLowerCase() +
 msg = "The result of the '" + Token.name(n).toLowerCase()'." ;
 msg = getName() +
 msg += n.value()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a '+' on the next line?" +
 msg += "The '+(n.getType()).toLowerCase() +
 msg = "The "' + (n) +
 msg += "+
 msg += "The '+' + capitalize(n.getType()).toLowerCase() +
 msg = "The '+ + capitalize(n.getType()).toLowerCase() +
 msg = "The result of the operator is being used." ; } else if ( result ) {
 msg = "The result is being used." ; } else
 msg = "This code lacks side-effects. Is it a bug?"; } else { msg +=
 msg += "The operator '" + IR.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is it a bug?"; } else { msg = "
 msg = "The '" + capitalize(n) +
 msg = "The '" + getOp() +
 msg = "The result of the '+' operator is being used." ; } else if ( strict )
msg = "The result of the '" + Token.name(n.getType()) + "' operator '" + operator +
msg = "The result of the '" + Token.name(n.getType()).name +
 msg += "The '# + capitalize(n.getType()).toLowerCase() +
 msg = "The '" + (op)).toLowerCase() +
msg = "The result of the '" + Token.name(n.getName()) + "' '" + operator +
 msg = (msg) +
msg = "The result of the '"  + n.getType()
 msg = (name()).toLowerCase() +
 msg = "The '+String(n.getType()).toLowerCase() +
 msg = "The operator '" + (n.getType()).toLowerCase() +
 msg = "The result of this operator is being used." ;
 msg = "'" + op.toLowerCase() +
 msg = "This code lacks side-effects. Is it a bug?"; } else { msg += "
msg = "The result of the '"  + n.getFirstChild().getName +
 msg = n.string()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getName()) + "' '" + op +
 msg = "'" + n.getName(().toLowerCase() +
 msg += " "+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(true) +
 msg = "The result of the " + n.getType() ; }
msg = "The result of the '"  + n.getFirstChild().getString +
 msg = "This code lacks side-effects. Is it a bug?"; } else { msg = msg +
 msg = "The '+" + getName() +
 msg = "The result of the '" + Token.name(n.getType()) + "'";
 msg = "'' + n.getType()).toLowerCase() +
 msg = "The result of the operator is being used." ; } else if ( result )
 msg = "The simple '+
 if (isResultUsed) { msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = n.getFirstChild()).toLowerCase() +
 msg = "+n.toLowerCase() +
 msg += " '+name(n.getType()).toLowerCase() +
 msg = "The result of the operator is not used." ;
 msg = n.string() +
 msg = "The '"+(op).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + "' operator '" + op +
 msg = "The '' + (n.getType()).toLowerCase() +
 msg = "'" + n.name(().toLowerCase() +
 msg += n.getFullName() +
 return msg).toLowerCase() +
msg = "The result of the '" +  n.getType ( ) + "'" +
 msg += "." ; msg |= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg += "The '" + t.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a '-' on the next line?" +
 msg = "The '+' ' + capitalize(n.getType()).toLowerCase() +
 msg = "The '+'." + n.getType()).toLowerCase() +
msg  = "The '+'" + op +
 msg += "The '+' '"+(n.getType()).toLowerCase() +
 msg = "(n)).toLowerCase() +
 msg += n.getName(().toLowerCase() +
 msg = "The '+(simpleOp).toLowerCase() +
 msg += capitalize(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(), level) +
 msg = "The '" + n.value() +
 msg += "Token.name(n.getType()).toLowerCase() +
 msg = "The '+(getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a missing '-' on the next line?"; +
 msg = "The operator '" + operator.toLowerCase() +
 msg += n.getName() +
 msg = "An operator with the type '"+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).getName() + "' '" + operator +
 msg = "This code lacks side-effects. Is it a bug?"; } else { msg = "'+',
 msg = "The '+(n) +
 msg = "The result of the '' operator is being used." ; } else if ( strict )
 msg = "The '' + n.getType()).toLowerCase() +
 msg = "This code lacks side-effects:\"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "The result is being used." ; }
 msg = "The "'+(n).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + "' '+ operator +
 msg = "'" + n.value().toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)); } else { msg = "The '
msg = "The result of the '" + Token.EXPR_RESULT +
 return IR.name(n.getType()).toLowerCase() +
 msg = "The '+ + (n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).getName() + "' '" + op +
 msg +="The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(simpleOp) +
msg = "The result of the '" + Token.name(n.getType()) + "' expression with the '" + operator +
msg = "The result of the '" + Token.name(PROTECTOR_FN).name() +
 msg = "The '+' or "'+
 msg += n.value() +
 msg = "The operator '+" + capitalize(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + "' expression of the '" + operator +
 msg += "The '+'" + capitalize(n.getType()).toLowerCase() +
msg  = "'" + simpleOp +
 throw IR.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(N).getType() +
 msg = "The '+ + IR.name(n.getType()).toLowerCase() +
 msg = n.getFullName()).toLowerCase() +
 msg = n.getString().toLowerCase() +
 msg = "Unknown operator." ; }
 msg = "The simple operator '+ IR.name(n.getType()).toLowerCase() +
 msg = "Unknown operator." ;
 msg = "The '" + () +
msg = "The result of the '" + TokenUtil.getIdentifier(n) +
 msg = "The operator '+" + n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' expression '" + simpleOp +
 msg = "The special '"+ Token.name(n.getType()).toLowerCase() +
 msg = "The '+op+
msg = "The result of the '" + Token.name(n.getType()) + "' expression with '" + simpleOp +
msg = "The result of the '" + Token.name(n.getType()).getSimpleName ( ) +
 msg += "'"+name(n.getType()).toLowerCase() +
 msg = "The '+' or '++
msg  = "A '+'" + n +
 msg += "The '" + n).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + "' '+ op +
 msg = "The operator '" + t.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is it a bug?" ; } else msg +=
 msg = "The '+' "' + op.toLowerCase() +
 msg = "." ;
 msg = "The result of the '' operator is being used." ; } else if ( debug )
msg = "The result of the '" + Token.name(n.getType(n)); } else { msg = op +
 msg = "An operator with type "'+ Token.name(n.getType()).toLowerCase() +
 msg += (n)).toLowerCase() +
 msg = "The '+' '"+name(n.getType()).toLowerCase() +
 msg = "The '+' ' + (n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)); } else { msg += "
 msg = "'" + n.string()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a '-' on the previous line?" +
 msg = "A simple operator '"+ Token.name(n.getType()).toLowerCase() +
 msg += ".name(n.getType()).toLowerCase() +
 msg = "An operator with the "+ Token.name(n.getType()).toLowerCase() +
 msg += " + capitalize(n.getType()).toLowerCase() +
 msg += " "' + capitalize(n.getType()).toLowerCase() +
 msg = "'" + n.name())).toLowerCase() +
 msg += n.name() +
msg  = "An '+'" + n +
 msg = "An operator '+" + n.toLowerCase() +
msg = "The result of the '" + TokenUtil.toLowerCase(n) +
 msg += "." ; msg.= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg += "The '+String(n.getType()).toLowerCase() +
 msg += " " ; } else { msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = msg.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)); } else { msg =
 msg += "." ; msg *= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "(n.getName()).toLowerCase() +
 msg += n.value(().toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)) + "' '+ operator +
 msg += "The '" + name() +
msg = "The result of the '" + Token.name(n.getType(n)); } else { msg +=
 msg = "The '+' "' + n.getType()).toLowerCase() +
 msg += "The '+' + (n.getType()).toLowerCase() +
 msg = "The " + simpleOp+
msg = "The result of the '" +  n.getType() + "::" +
msg = "The result of the '" + Token.name(n.getType(n)); } else { msg = "
msg = "The result of the '" + Token.name("PROTECTOR_FN)+
 msg = "The result is not being used." ;
 msg = "An operator with the "'+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + TokenUtil.getSimpleName(n)+
 msg = "' + n).toLowerCase() +
 msg += n.value().toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' operator '" + simpleOp +
msg = "The result of the '" + Token.name(N.getType() ) +
msg  = "The '+" +
msg  += "The '+'" +
 msg = "This code lacks side-effects. Is there a '-' on the next line?"; +
msg = "The result of the '" +  n.getName() + "' '" +
 msg += n).toLowerCase() +
 msg += "\n" ; } msg.= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is it a bug?"; } else { msg =
 msg = "An operator '"+ Token.name(n.getType()).toLowerCase() +
 msg += "An operator with the '" +Token.name(n.getType()).toLowerCase() +
 msg = "The special '+
 msg += n.getFullName()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType() + ")" +
msg = "The result of the '" + Token.name(n.getType(n)) +
 msg = "This code lacks side-effects. Is there a '+' on the next line?"
 msg = "' + capitalize(n.getType()).toLowerCase() +
msg  += " The '+ +
 msg = "An '+' or "'+
 msg = "An '+' or '++
msg = "The result of the '" + Token.name(n.getType()).getType() +
msg = "The result of the '" + TokenUtil.getType(n) +
msg = "The result of the '" + Token.name(n.getType()).getFullName ( ) +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "()" +
 msg = "An operator '+" + op.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType())) + "' '" + simpleOp +
 msg += ' '.toLowerCase() +
msg  = "'" + op +
msg =  "The '+' '" + n +
 msg = "The '".name(n.getType()).toLowerCase() +
 msg += n.name().toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + "' expression '" + op +
 msg += n.getFirstChildName()).toLowerCase() +
msg  += ' ' +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' '" ; } msg +=
 msg = "An operator '" + t.name(n.getType()).toLowerCase() +
 msg.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' '+" +
 msg += "The '+' ' + capitalize(n.getType()).toLowerCase() +
 msg = "The '+' or '+
 msg = "The result of the simple operator is used." ;
msg = "The result of the '" + TokenUtil.getFirstChild(n) +
msg = "The result of the '" + TokenUtil.escapeString(n) +
 msg = "The result of the '+' operator is being used." ; } } else { String
 msg = "A simple '+" + n.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + "' '" + SimpleOp +
msg = "The result of the '" + Token.name(n.getType()).getString() + "' '" + op +
msg = "The result of the '" + Token.name(n.getString()) +
 msg = "The operator '" + qname(n.getType()).toLowerCase() +
 msg += "An operator with type '"+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n).getType() + " ' + operator +
msg = "The result of the '" + Token.name(n.getType()).getName +
msg  += "The '+'" + n +
msg = "The result of the '" + Token.name(n.getType(n)) + " +
 msg += "." ; msg += "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg  = "The '+' '{n}
 throw n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(SimpleOp) +
msg = "The result of the '" + Token.name(n.getType()).getString ( ) +
msg  = "The '+' +
 msg = "Simple operator." ;
 msg = "'" + n.getType)).toLowerCase() +
 msg = "The '+n+
msg = "The result of the '" + Token.name(n.getType().getName() ) +
 msg = "A '+' or "'+
msg = "The result of the '" + Token.name(n.getType(n)) + "' expression '" + expression +
 msg = "An expression result with the '"+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).getString() + "' '" + operator +
msg = "The result of the '" + Token.name(n.getType(n)); } else { msg = "The simple
 msg = "The '+ + n+
msg = "The result of the '" + Token.name(n.getType()) + "' '+SimpleOp +
msg = "The result of the '" + Token.name(n.getType() + ") +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(String.valueOf(n)) +
 msg = "A simple '+' '+Token.name(n.getType()).toLowerCase() +
 msg = "The ' + t.name(n.getType()).toLowerCase() +
msg  = "The "' +
msg  = "The '+' '#' +
 msg += "\n" ; msg += "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name() +
 msg = n.name())).toLowerCase() +
 msg = "The result of a simple operator." ; }
msg = "The result of the '" + Token.name(N).getType().getName ( ) +
 msg = "The '" + name()).toLowerCase() +
 msg = "An operator with a '" +Token.name(n.getType()).toLowerCase() +
 msg += "The '+ + IR.name(n.getType()).toLowerCase() +
 msg = "(n).toLowerCase() +
 msg = "' + n)).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' '+ operator +
msg = "The result of the '" + Token.name(n).getType() + "::" +
msg = "The result of the '" + Token.name(n.getType(n)) + "' expression '" + op +
 msg += "The '+' '"+
 msg = "An operator with the name '"+ Token.name(n.getType()).toLowerCase() +
 msg = "The result of the simple operator." ;
 msg = "The '+' "' + operator.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + " '+" +
msg = "The result of the '" + Token.name(n).getType() + " ' + op +
 msg = "The result of a simple operator." ;
 msg = "The result of the simple operator." ; }
msg = "The result of the '" + TokenUtil.getSimpleType(n) +
 msg = "A '+' or '++
msg  = "'+ n +
msg  = "The '" + n +
 msg = "The '+ operator+
msg = "The result of the '" + Token.name(n.getType()).getName() + "' '+ operator +
 msg += "." ; } msg.= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(N).getType() + "::" +
 if (resultUsed) { msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg += " " +"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg  = "The '+' '+" +
 msg += " the "+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + " ' + simpleOp +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' '+'" +
 msg = "The result of the operator is being used." ; } else if ( result {
 msg += " +Token.name(n.getType()).toLowerCase() +
 msg = "The '+' '+n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(PROTECTOR_FN).srcref +
 msg += " IR.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' expression '" + expression +
 msg += "\n" ; msg.= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = (n).toLowerCase() +
 msg += " "' + t.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)) + "' '+' +
msg =  "The '+' in the '+'"
 msg += "\n" ; } msg += "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is it a bug?"; } else msg =
msg = "The result of the '" + Token.name(n).getValue() +
 msg += "(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "::" +
msg = "The result of the '" + Token.name(n).getType() + " '+' +
 msg += n)).toLowerCase() +
msg = "The result of the '" + Token.STRING +
 msg = "The '"+
 msg = "An operator with the '+ Token.name(n.getType()).toLowerCase() +
 msg = "The '+' or '*+
 } else {
 msg = "The '\+' + (n.getType()).toLowerCase() +
 msg = "A simple operator with the '"+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' operator '" + operator +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + '\n' +
 msg = "The '+ + op+
 msg = "The simple '++
msg = "The result of the '" + Token.name(n.getType(n)); } else { msg += operator +
msg = "The result of the '" +  n.getType ( ) + " " +
msg = "The result of the '" + Token.name(n.getType())) + "' '" + op +
msg = "The result of the '" + Token.STRING + "' operator '" + operator +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getType().getName()) +
 msg = "The result of the operator is not being used." ; } } else { String
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(String.valueOf(n)) + " +
 msg = "Unknown." ;
 msg = "+Token.name(n.getType()).toLowerCase() +
 msg = "This code lacks side-effects. Is there a '+' in the " +
msg = "The result of the '" + Token.name(n.getType())) + "' '" + operator +
 msg = "The result of the '' operator is being used." ; } } else { String
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' expression '" + op +
msg = "The result of the '" + Token.name(n.getType()) + "' '+ n +
msg = "The result of the '" + Token.STRING + "' operator '" + op +
msg = "The result of the '" + Token.name(n).value +
msg = "The result of the '" + Token.name(n.getType()).getTypeName ( ) +
msg =  "The '+' '" +
 msg += " is not being used." ; msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "The '+' or '-+
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + " ' + operator +
 msg = "The result of the operator is used." ;
 msg = "The '+'."+(n.getType()).toLowerCase() +
 msg = "The ''+
 msg += " is a simple operator." ; msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + '+' +
msg = "The result of the '" + Token.name(n.getType()) + "' expression with the '+'" +
msg  = "The '+' "' +
 msg += "\n" ; msg |= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "'" +
 msg += " the '+
msg = "The result of the '" + Token.name(n.getType()) + "' '' + operator +
 msg = "A simple '+' '"+ Token.name(n.getType()).toLowerCase() +
msg  = "The '' + n +
 msg = escape(n) +
 msg = "\n" + msg +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 if (isResultUsed) { msg += "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + "' expression with the '+" +
 msg = name()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType() + ") '+' +
msg = "The result of the '" + Token.name(n.getType()) + " ' + operator +
msg  = "The '+' '+' +
 msg += " the '"+ Token.name(n.getType()).toLowerCase() +
 msg = "The result of the operator was used." ;
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getType().toString())) +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getType()) +
msg = "The result of the '" + Token.name(n).getType() + " +
 msg += "$(n.getType()).toLowerCase() +
 msg += getName() +
 msg += ' '+name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' '+n +
 msg = "An operator with type ' + IR.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.EXPR_RESULT() +
 msg = + n.toLowerCase() +
msg =  "A '+' in the '+'"
 msg = " " ; }
msg  += "
msg = "The result of the '" + Token.name(SimpleOperation) +
 msg = "Simple operator" ; }
msg =  "An '+' in the '+'"
 msg = "Unknown operator." ; } else
msg  += n +
msg = "The result of the '" + TokenUtil.getName(n)+
 msg = "Unknown simple operator." ; }
 msg = "A simple '+' + IR.name(n.getType()).toLowerCase() +
 msg = "The result of the operator is being used." ; } } else { String
 msg += "'+
msg = "The result of the '" + TokenUtil.escape(n) +
 msg = "Unknown" ;
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getType()).getValue() +
 msg = "The operator '+" + IR.name(n.getType()).toLowerCase() +
 msg += " " ; } else { msg += "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "This code contains side-effects:\"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + "' expression '" + isSimpleOp +
 msg +=.toLowerCase() +
 msg = "(String)"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + +
 msg += " " + n ; msg |= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg += " "'(n.getType()).toLowerCase() +
 msg = "Unknown operator type." ; }
 msg += n.name(().toLowerCase() +
 msg = "Simple operator detected." ;
msg = "The result of the '" + Token.name(N).getValue() +
msg = "The result of the '" + Token.name(n.getName()) +
 msg = "The '+ + TypeToken.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getName() + ")" +
 msg += ""; msg += "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + " '+' +
msg = "The result of the '" + Token.name(n.getType()).getName() + "' '+ n +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' expression with the '+" +
msg = "The result of the '" + Token.name(n.getType()).getName() + "' '+SimpleOp +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getType())) + " +
msg = "The result of the '" + Token.IDENTIFIER +
msg = "The result of the '" + Token.name(n.getType()) + "::" +
 msg += " msg += "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg += "; " msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 return name()).toLowerCase() +
 msg += ((n.getType()).toLowerCase() +
msg  = "The '+' '+'" +
 msg += ": " +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "' + op).toLowerCase() +
 msg = "The result of a simple operation." ;
msg = "The result of the '" + Token.name(n).getType() + ": " +
msg = "The result of the '" + Token.name(n.getType(n)) + "' '" +
 msg = "\"(n.getType()).toLowerCase() +
 msg += escape(n) +
msg = "The result of the '" + Token.name(n.getType()).value +
 msg = "A simple '+' + t.name(n.getType()).toLowerCase() +
 msg = "+) +
msg =  "The '+' in the '+"
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' '" ; msg +=
msg = "The result of the '" + Token.name(N.getType(), level) +
msg = "The result of the '" + Token.name(n.getType()).getName() + "' '+ op +
 msg = "\n"+"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg =  "The "' + n +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase().toLowerCase() + "()" +
msg = "The result of the '" + Token.name(n.getType()) + "'" +
msg = "The result of the '" + Token.name(SimpleOperator)+
 msg = "This code lacks side-effects.""The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "An operator '+" + IR.name(n.getType()).toLowerCase() +
msg = "The result of the '"  + operator +
msg = "The result of the '" + Token.name(n.getType()).getString() + "' '+ operator +
msg = "The result of the '" + Token.name(N.getType() + ") +
msg = "The result of the '" + Token.name(n.getType(Node.STRING)) +
msg = "The result of the '" + Token.name(n.getType()).name() +
 msg = "Simple operator." ; }
msg = "The result of the '" + Token.name(n.getType(n)).getType ( ) +
 msg = "A simple operator with the "+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n, level)+
 msg += " " + n.name(); msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "The result is being used." ;
 msg = "Is a simple operator." ; }
msg = "The result of the '" + Token.name(n.getType()).getValue +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getType().toString()) +
 msg += "() +
msg = "The result of the '" + Token.name(N).getType() + " +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "' expression with the '+ operator +
msg  +=
 msg = " +)).toLowerCase() +
 msg += capitalize(n) +
msg = "The result of the '" + Token.name(n.getType() +) +
 msg = "The operator is simple." ; }
msg  = "'+ +
 msg = "The '+ + SimpleToken.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(N.getType() + ")" +
msg = "The result of the '" + Token.name(n).getName() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + ' ' +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getName()) +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getType().name()) +
 msg = "The '+ + operator+
 msg += " msg *= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = " + n).toLowerCase() +
 msg += name()).toLowerCase() +
 msg = "The "' + name() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase().toLowerCase() + "
msg = "The result of the '" + Token.name(N).getType() + " + +
 msg =name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n) +
 msg = "Simple operator type." ;
 msg = ((n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getType()).name +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + NL +
 msg = " + n)).toLowerCase() +
msg = "The result of the '" + Token. PLUS +
 msg += ' '".toLowerCase() +
 msg = (msg)).toLowerCase() +
 msg += (n) +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "
 msg = capitalize(n) +
msg = "The result of the '" + Token.name(n) + "' '+ op +
 msg += " + " ;
msg =  "The "'+ +
 msg += simpleOp.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).getName() + +
 msg = "The operator '+'"+"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg =  "The '+'
 msg = "The result of the '' operator is being used." ; } } else { {
msg = "The result of the '" + Token.name(N).getType() + +
msg = "The result of the '" + Token.STRING_OPERATOR +
 msg = "' + op)).toLowerCase() +
msg = "The result of the '" + Token.ESC_RESULT +
 msg = "This code lacks side effects. +"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + "' expression with '" + simpleOp +
 msg = (msg).toLowerCase() +
msg = "The result of the '" + Token.STRING(n.getType()) +
msg = "The result of the '" + Token.name(N).getType() + "' + +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(false) +
msg = "The result of the '" + Token.name(PROTECTOR_FN).getValue +
 msg = "Is a simple operator?" ; }
 msg =Token.name(n.getType()).toLowerCase() +
 msg += '+'; }
msg = "The result of the '" + Token.name(n.getType()).toLowerCase().getValue() +
msg = "The result of the '" + Token.name(PROTECTOR_FN)) +
 msg = "The operator '+ + TypeToken.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n).getType() + " + +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + "' expression with the '" + operator +
 msg += (name()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "() +
 msg = " " +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = (n)).toLowerCase() +
 msg = "Simple operator" ;
 msg += ' +(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType() + ") or '" + operator +
 msg = "The result is not used." ;
 msg = getName()).toLowerCase() +
msg  = "' + op +
 msg = "\n" ; msg +="The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "'+(n.getType()).toLowerCase() +
 msg = "Simple operator:\"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(N).getType() + " + "
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(String.valueOf(n)) + "
msg  = n +
 msg = "Simple operator type mismatch." ;
msg = "The result of the '" + Token.STRING + "' '" + op +
 msg = "The result of: " +"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + " + +
 msg += " + " ; }
 msg = getType() +
msg = "The result of the '" + Token.name(n.getType(0)) +
msg = "The result of the '" + Token.name(n.getType()) + "' + +
 msg = "'"+.toLowerCase() +
msg = "The result of the '" + Token.STRING + "' '" + operator +
msg = "The result of the '" + Token.name(n).getType() + +
 msg = "The operator is simple." ;
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(String.ORDER) +
 msg += " +"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '"  + SimpleOp +
msg = "The result of the '" + Token.name(n.getType() + ") or '" + op +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + "\\" +
 msg += "; msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg += toString() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + " + +
msg = "The result of the '" + Token.name(n.getType()), level +
 msg = "Unknown operation." ;
msg = "The result of the '" + Token.name(n).getType +
 msg = "The operator '+'."+"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = new String(n.getType()).toLowerCase() +
 msg = "This code contains side-effects.""The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg.= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getValue()) +
msg = "The result of the '" + Token.IDENTIFIERS +
msg = "The result of the '" + Token.name(n.getType() + ") + ") +
 msg = "() +
 msg += " + n).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCaseCase() + +
 msg = "''+
 msg = "'"+toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)); } else msg =
msg = "The result of the '" + Token.name(n.getType() + ") '+" +
 msg += "') +
msg = "The result of the '" + Token.name("SimpleOperator") +
 msg += "; " += "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = msg ; msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg +=() +
 msg += getName()).toLowerCase() +
msg = "The result of the '" + Token.name(N).getType()
msg = "The result of the '" + Token.name(n.getType(n)) + "'" +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + "' expression with the '+ + operator +
msg = "The result of the '" + Token.name(n.getType()).toLowerCaseCase() + "
msg = "The result of the '" + Token.SINGLE_OPERATOR +
msg = "The result of the '" + Token.name(n.getType()).toString() + +
msg = "The result of the '" + Token.STRING(n.getString()) +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + " " +
msg = "The result of the '" + Token.name(n.getType()) + "' + op +
msg = "The result of the '" + Token. getSimpleName ( ) +
 msg += ""; msg.= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)) + "' + operator +
msg = "The result of the '" + Token.name(n.getType()) + "' ' +
 msg |= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + " ' +
msg = "The result of the '" + Token.name(n.getType()) + ": " +
msg = "The result of the '" + Token.name(n.getType()).getText() +
msg = "The result of the '" + Token.name(n.getType()).getName() + " + op +
 msg = "The operator " + +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = op.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)); msg +=
msg = "The result of the '" + Token.EXPR_VALUE +
msg = "The result of the '" + Token.name(n.getType()).getName() + "'" +
 msg = "('') +
msg = "The result of the '" + Token.name(n.getType()).getString() + " + op +
msg = "The result of the '" + Token.name(n.getType(n)); } else msg +=
 msg = "+name(n.getType()).toLowerCase() +
 msg = getString() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() + " + op +
 msg += msg += "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg.+
msg = "The result of the '" + TokenUtil.getIdentifier(n)) +
msg = "The result of the '" + Token.name(n.getType())); msg +=
msg = "The result of the '" + Token.name(n.value)+
 msg = capitalize(n)).toLowerCase() +
 msg += "\n" + +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "The operator " +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "The simple"+ Token.name(n.getType()).toLowerCase() +
 msg = ') +
msg = "The result of the '" + Token.name(SimpleOperator +
 msg = capitalize(op) +
msg = "The result of the '" + Token.name(n.getType()).getName() + " + +
 msg = "Token.name(n.getType()).toLowerCase() +
 msg = "\n" + +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "The operator: " +"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n).getValue()
msg = "The result of the '" + Token.name(N).getValue()
msg = "The result of the '" + Token.name(n.getType()).getType +
msg = "The result of the '" + Token.STRING_OPERATOR_NAME +
msg = "The result of the '" + Token.SINGLE +
msg = "The result of the '" + Token.COMPILER_OPERATOR +
msg = "The result of the '" + Token.name(n.getType()) + NL +
 msg = "Simple " +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg += "\n+"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = +"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n), level +
msg = "The result of the '" + Token.IDENTIFIERNAME +
msg = "The result of the '" + Token.name(n +
msg = "The result of the '" + Token. NAME +
msg = "The result of the '" + Token.name(n.getType() + ") '+' operator +
 msg = msg +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = "This code lacks " + +"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg += t.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.EXPR_RAW +
 msg += op.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(null) +
 msg += "' + t.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + op +
 msg += (Token.name(n.getType()).toLowerCase() +
msg = "The result of the '"  + node. name +
 return; } else
msg = "The result of the '" + Token.STRING_VALUE +
msg = "The result of the '" + Token.name(n).getType()
 break; } else
msg = "The result of the '" + Token. FOR +
msg = "The result of the '"  + n. name +
msg = "The result of the '" + Token.name(N).getType +
msg = "The result of the '" + Token.name(node) +
msg = "The result of the '" + Token.name(OPERATOR_FN)+
msg =  "'Simple' +
msg = "The result of the '" + Token. COMMA +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.name()) +
 msg = ".name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.STRING_OPERATOR_STRING +
msg = "The result of the '" + Token.STRING_OPERATOR_TYPE +
msg = "The result of the '" + Token.name(n.getType()).getValue()
msg = "The result of the '" + Token.name(n).getValue +
msg = "The result of the '" + Token.STRING + "' operator '+ operator +
msg = "The result of the '" + Token.name(n.getType()).getString() + " + +
 msg = "The '+"+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.STRING_ +
msg = "The result of the '" + Token.END +
msg = "The result of the '" + Token.EXPRESSION +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.getType() +
 msg += '() +
msg = "The result of the '" + Token.name(N).getTypeName() + +
msg = "The result of the '" + Token.name(n.getType(true)) +
 msg += " \"The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg = ".toLowerCase() +
msg = "The result of the '" + Token.STRING_RESULT +
msg  = "
msg = "The result of the '" + Token.name(n.getType()).toLowerCaseString() + +
msg = "The result of the '" + Token. OP +
msg  += op +
msg = "The result of the '" + Token.name(n.value +
 msg += "\\"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '"  + thisSimpleOp +
msg = "The result of the '" + Token.name(n.value() +
msg = "The result of the '" + Token.STRING + "' operator '+ op +
 msg = "'() +
msg = "The result of the '" + Token.name(n.value()) +
 return; }
 msg += '.name(n.getType()).toLowerCase() +
msg =  ' ' +
msg = "The result of the '" + Token.COMPILER_NAME +
 msg = "Unknown operator: ""The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.STRING() +
 msg += " "'+
msg = "The result of the '" + Token.name(n.type()) +
 msg = null ;
 msg = name.toLowerCase() +
 msg += (getType()).toLowerCase() +
 msg += " '.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(n.value()) +
msg = "The result of the '" + Token.name(n.getType()) + +
msg = "The result of the '" + Token.name(n.getType(Node.NAME)) +
msg = "The result of the '" + Token.SINGLE_OP +
msg = "The result of the '" + Token.name(n.getType().getName)+
msg = "The result of the '" + Token.name(n.getType( ) + ")." +
 msg += +"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.EXPR_RESULT2 +
msg = "The result of the '" + Token.SINGLE_OPERATORS +
msg = "The result of the '" + Token.EXPR_RESULT* +
 msg = (getType()).toLowerCase() +
 msg = name() +
 msg + " *= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '"  + name +
 msg += " msg.= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)) + +
 msg = "$(n.getType()).toLowerCase() +
 continue; }
 msg = ()).toLowerCase() +
 if (!msg)
msg  += prefix +
 msg += " `.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n).name +
 msg += String(n.getType()).toLowerCase() +
 break; }
msg = "The result of the '" + Token.STRING_OPERATOR_REF +
msg = "The result of the '"  + n. value +
 msg += _name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(parent) +
 msg = String(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + OP +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(coding) +
 msg += "''+
 throw msg.toLowerCase() +
msg = "The result of the '" + Token.name(n.getValue());
msg = "The result of the '"  + op
msg = "The result of the '"  n +
 msg = "(.*) +
 msg += " msg= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg +=) +
 msg = "+
 msg += "('') +
 msg = msg += "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()  + name +
 msg *= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg +=)).toLowerCase() +
 return (n.getType()).toLowerCase() +
msg = "The result of the '"  + simpleop +
msg = "The result of the '" + Token.name(n.getType());
msg = "The result of the '"  op +
 msg += '+
msg = "The result of the '" + Token.name(n)) +
 msg = "'.name(n.getType()).toLowerCase() +
 msg + " += "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '"  + node +
msg = "The result of the '" + TokenResult +
msg = "The result of the '" + Token.name(n.getType(...)) +
 msg = "'+name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.COMMENT +
 msg = " "+name(n.getType()).toLowerCase() +
 msg ++
 msg = '.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType(n)) + "
 msg = "()).toLowerCase() +
msg = "The result of the '"  + simpleOperation +
 + n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.type)+
msg = "The result of the '"  + simplifiedName +
msg =  "' + n
 msg = (()).toLowerCase() +
msg = "The result of the '" + Token.EXPR +
msg = "The result of the '"  operator +
 msg = trim()).toLowerCase() +
msg = "The result of the '" + TokenName +
msg = "The result of the '" + Token.name(n.getType()).toLowerCaseName() +
 msg += n.(getType()).toLowerCase() +
msg = "The result of the '" + Token.PLAIN +
msg = "The result of the '" + Token.STR +
 throw n.toLowerCase() +
 msg = '().toLowerCase() +
 msg = ""The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(...) +
msg = "The result of the '"  prefix +
 msg + "= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 msg.+ Token.name(n.getType()).toLowerCase() +
 msg = "+"The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(c) +
msg = "The result of the '" + Token.name(n.getType())) + +
 msg + *= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()) + op +
msg = "The result of the '" + Token.name(n.getType()) + "" +
 msg.(getType()).toLowerCase() +
 msg += node.getType()).toLowerCase() +
msg = "The result of the '" + TokenType +
 msg = "')).toLowerCase() +
msg = "The result of the '" + Token.name(op) +
msg = "The result of the '" + Token.RAW +
 msg += Type.name(n.getType()).toLowerCase() +
 return n)).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(.) +
 return text()).toLowerCase() +
 msg ++ Token.name(n.getType()).toLowerCase() +
 msg((getType()).toLowerCase() +
 return n).toLowerCase() +
msg .=
 msg += parent.getType()).toLowerCase() +
 echo n.getType()).toLowerCase() +
msg =  op +
msg = "The result of the '" + Token.name(n.getType()) + "
 msg =+ Token.name(n.getType()).toLowerCase() +
 return () +
 msg = t.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.name)+
msg = "The result of the '" + TokenKind +
 throw (n.getType()).toLowerCase() +
 throw n).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).id +
msg = "The result of the '" + Token.name(n.op +
 msg"+
 msg."+
msg =  name +
 default :
msg = "The result of the '" + Token.name(n.getType(...) +
 msg +='"+ Token.name(n.getType()).toLowerCase() +
 msg <<-= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.STAR +
 return indent()).toLowerCase() +
 return trim()).toLowerCase() +
 else {
 throw name()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).type +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase()) +
 return "'+ Token.name(n.getType()).toLowerCase() +
 echo IR.name(n.getType()).toLowerCase() +
msg  = +
 throw ()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).String +
 throw () +
msg = "The result of the '" + Token.nameNAME +
 msg("getType()).toLowerCase() +
 } else
msg = "The result of the '" + Token.nameXXX +
msg =  "" +
msg = "The result of the '" + TokenPattern +
 "+n).toLowerCase() +
 + n).toLowerCase() +
 throw t.name(n.getType()).toLowerCase() +
 return name() +
 return "'+
 msg <<<<= "The result of the '" + Token.name(n.getType()).toLowerCase() +
 + IR.name(n.getType()).toLowerCase() +
 return n.toLowerCase() +
 errorMsg.= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name + +
 return indent() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase() +",
 return node.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()); +
 msg.name(n.getType()).toLowerCase() +
 msg().toLowerCase() +
 msg -=Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" + Token.name(n.) +
 msg".toLowerCase() +
 message.toLowerCase() +
msg = "The result of the '" + Token.name(n.getType()).toLowerCase(), +
 String
 {
 var
msg -= "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg << "The result of the '" + Token.name(n.getType()).toLowerCase() +
msg = "The result of the '" "+ Token.name(n.getType()).toLowerCase() +
msg = "The result of the '". Token.name(n.getType()).toLowerCase() +
