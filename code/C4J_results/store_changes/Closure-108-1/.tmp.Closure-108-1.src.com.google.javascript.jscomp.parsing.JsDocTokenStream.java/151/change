c = '.';
c = '.' ; }
 ungetBuffer[ungetCursor++]= '.';
c = '.' ; } }
c =  getChar(); }
 ungetBuffer[ungetCursor++= '.';
 } else {
 }
 ungetCursor *= '.';
c = '.' ; } } }
c =  getChar(); } }
 } }
 ungetBuffer[ungetCursor]= '.';
c =  getChar(); addToString(c); }
 addToString(c)+'.';
 if ( c == '<') { return JsDocToken.LT; } else {
 return JsDocToken;
 if ( c == '.' ) { return JsDocToken.STRING;
 if ( c == '<') { return JsDocToken.LT;
 if ( c == '.' ) { return JsDocToken.LT;
 return JsDocToken.STRING;
c =  getChar(); addToString(c);
 return c;
c = '.' ; } } } }
 this. string = getStringFromBuffer(); this. string = getStringFromBuffer(); this. string = getStringFromBuffer(); this.
 ungetBuffer[c]= '.';
c  = getChar ( ) ;
 if ( c == '.' ) { break ; } else {
c =  getChar(); addToString('.');
 if ( c == '.' )
c = '.' ; addToString ( c ) ;
 if ( c == '<') { return JsDocToken.LT
 addToString('.';
 return JsDocToken.STRING; } else { if (c == '<') { return JsDocToken.LT; }
 ungetCursor++ *= '.';
c =  getChar(); addToString(c1);
 if ( c == '<') { return JsDocToken.LT; } else { return JsDocToken;
 ungetBuffer[ungetLine++]= '.';
 if ( c == '<') { return JsDocToken.LT; } else { if (c == '.')
 if ( c == '.' ) { return JsDocToken ;
 if ( c == '<') { return JsDocToken.LT; } else { return JsDocToken; }
 if ( c == '<') { return JsDocToken.LT; } else { addToString('.'); }
c =  getChar(); addToString('.'); }
 return JsDocToken.STRING; } else { if (c == '<') { return JsDocToken.STRING;
 if ( c == '<') { return JsDocToken.STRING;
 } } }
 if ( c == '<') { return JsDocToken;
 if ( c == '.' ) {
 if ( c == '.') { c = '.'; } else { addToString('.'); } else {
c 2 = getChar(); } } }
c 2 = getChar(); } }
 if (c == '.') { return u'.';
 if ( c == '<') { return JsDocToken.LT; } } else {
 if (c == '.') { return'.';
 if ( c == '<') { return JsDocToken.LT; } else
 ungetBuffer[ungetBuffer++]= '.';
c =  getChar(); } } }
 if ( c == '<') { return JsDocToken.LT; }
 if (c == '<') { c = '.'; } else { if (c == '.') { c = '.';
 if ( c == '<') { return JsDocToken.LT; } else { break;
 if ( c == '<') { c = '.'; } else { if ( c == '.' )
 if ( c == '.') { c = '.'; } else { addToString('.'); }
 if ( c == '.' ) { c = '.' ; } else {
c 2 = getChar(); return c2 ;
c = '.' ; } else { c = '.' ; }
 this. string = getStringFromBuffer(); this. string = getStringFromBuffer(); if (c == '.') { this.
c 2 = getChar(); }
 if ( c == '<') { return JsDocToken.LT; } else { break ; }
 addToString(c); }
 if ( c == '.' ) { return JsDocToken.LT; } else {
c 2 = getChar(); } while (true);
 if ( c == '<') { return JsDocToken.LT; } else { return JsDocToken.
 } else { addToString(c)+'.';
 if ( c == '<') { return JsDocToken.LT; } else { return JsDocToken:
 ungetBuffer[c++]= '.';
 if ( c == '<') { return JsDocToken.LT; } else { addToString(c1); }
c  ++ ;
c = '.' ; addToString ( c ) ; }
 if ( c == '<') { return JsDocToken.LT; } else { return JsDocToken.STR;
c = '.' ; } } while ( true ) ;
 ungetCursor++ |= '.';
 this. string = getStringFromBuffer(); this. string = getStringFromBuffer(); if (c == '<') { this.
 if (c == '.') { c = '.'; } else { addToString('.');
 if ( c == '.' ) { break ; }
 if (c == '<') { c = '.'; } else { if (c == '.') { c = c ;
c = '.' ; addToString ( c ) ; } }
 if ( c == '<') { return JsDocToken.LT; } else { return JsDocToken.STRING
 if ( c == '<') { return JsDocToken.LT; } else { if (true)
 if ( c == '<') { return JsDocToken.LT; } else { return JsDocToken
 if ( c == '.' ) { break ; } } else {
c 2 = getChar(); return c ;
 } else { addToString('.');
c = '.' ; } else { c = '.' ;
c =  getChar(); return JsDocToken ;
 if ( c == '<') { return JsDocToken.LT; } else { addToString('.'); } }
c  = getChar(); return c ;
c =  getChar(); } while ( true ) ;
 if ( c == '.') { return JsDocToken.LT
c =  getChar(); } } } }
 c = u'.';
c 2 = getChar(); } } } }
 ungetBuffer[ungetEnd++]= '.';
 addToString(''.'.';
c  = getNextChar ( ) ;
c = '.' ; addToString('.'); } }
 if ( c == '<') { return JsDocToken.LT; } else { break ; } }
 if ( c == '<') { return JsDocToken.LT; } else { } else {
 return JsDocToken
c = '.' ; } } } } }
 if ( c == '<') { return JsDocToken.LT; } else { continue;
 if ( c == '<') { return JsDocToken.LT; } else { return JsDocToken.END
 if ( c == '.') { c = '.'; } else { addToString('.'); } }
 if ( c == '<') { return JsDocToken.LT; } else { return JsDocToken.STR }
 c |= '.';
 if ( c == '<') { c = '.'; } else { if ( c == c )
 addToString('.'.';
c = '.' ; addToString('.'); } } }
 } else { addToString('.'); return'.';
 if ( c == '<') { return JsDocToken.LT; } else { return;
 if ( c == '.' ) { c = ' ' ;
 return JsDocToken.PIPE;
 if ( c == '<') { return JsDocToken.LT; } else { break }
 return u'.';
 if ( c == '.' ) { c = '.' ;
 ungetBuffer[ungetChar++= '.';
 ungetBuffer[ungetChar]= '.';
 if ( c == '.' ) { return JsDocToken.NL;
 ungetBuffer['ungetCursor++]= '.';
c =  getChar(); return JsDocToken
 if (c == '.') { return null;
 addToString(c1); }
c = '.' ; break ; default : { break ; } }
 if ( c == '<') { break;
c  = getChar(); break ;
c =  getChar(); } } } } }
c =  getChar(); c = '.' ;
c = '.' ; addToString ( '.' ) ;
 if (c == '.') { return c;
 if ( c == '<') { return JsDocToken.LT; } } default:
c =  getChar(); return JsDocToken.LT
 if ( c == '.') { c = '.'; } else { addToString('.'); } else
 if ( c == '.' ) { break ; } }
 ungetBuffer[unget++]= '.';
 if (c == '<') { c = '.'; } else { if (c == '.') { c = 0;
 ungetBuffer[ungetCursor++].= '.';
 if (c == '.') return'.';
 if (c == '.') { break;
 addToString('','.';
c = '.' ; addToString ( c1 ) ;
c  = next ;
 addToString(c); addToString('.';
 addToString(c); c = u'.';
c = '.' ; addToString ( ) ;
 ungetCursor++= '.';
 if ( c == '.' ) { return JsDocToken.STR
 return JsDocToken.LT;
c = '.' ; addToString('.'); }
 ungetCursor++ ^= '.';
 addToString(c); return c ;
 if (c == '.') { break;
c =  getChar(); addToString ( c )
c 2 = getChar(); c = c ;
c = '.' ; } while ( true ) ;
 addToString('\\'.';
 if ( c == '.') { c = '.'; } else { break ; }
 if ( c == '<') { return JsDocToken.LT; } }
 addToString(\'.';
 } else { addToString(''.'.';
 if ( c == '<') break;
c =  getChar(); c = c ;
 addToString(c1);
 } else { addToString('.')+'.';
 } else { addToString(\'.';
 } else { ungetCursor *= '.';
 ungetBuffer[ungetCursor++*= '.';
 if ( c == '<') { break; }
c = '.' ; getChar ( ) ;
 } else { addToString(c) return'.';
 ungetChar *= '.';
c = '.' ; break ; }
 return JsDocToken.LT
c = '.' ; } } } } } }
 if ( c == '<') { return JsDocToken.LT; } else { return
 addToString(c); return'.';
 addToString(c); addToString(\'.';
c = '.' ; addToString('.'); return c ;
 ungetChar |= '.';
 addToString(c);
c 2 = getChar(); c ++ ;
 ungetBuffer[end++]= '.';
c = '.' ; break ; } }
 addToString(c); } }
 c *= '.';
 if ( c == '.' ) { return JsDocToken.STRING; }
 } } } }
c =  nextChar(); c = nextChar();
c  = getChar(); return c
 } else { addToString ( ) ;
 addToString(c) return'.';
 return JsToken.NL;
 if ( c == '<') { return JsDocToken.LT; } else { break
c =  nextChar ( ) ;
 addToString(c); } } }
 ungetBuffer[cur++]= '.';
 addToString('.');
 return JsDocToken.NL;
 if (c == '.') { break; } else
 ungetBuffer[ungetPosition]= '.';
 if ( c == c )
 } else { addToString('.';
 return JsDocToken.STR;
 if ( c == c ) {
 } else { addToString('.'); break;
 if ( c == '.' ) break ;
 } else { return JsDocToken;
c =  getChar(); return c ; }
 if ( c == '.' ) { return JsDocToken.LT; } else
 return JsToken.STR;
c = '.' ; } } while ( true )
c  = c ;
 return JsDocToken.'.';
 } else { addToString('^'.';
 addToString('.'); } }
 return c ; }
 break ; default : break ; } }
c  = nextChar ; }
 } else { c = '.' ;
 } } } } }
c = '.' ; break ; } } }
 } else { addToString('.').'.';
c = '.' ; c = '.' ;
 break ; } } }
 return JsToken.LT;
 } else { addToString('','.';
 } else { return JsDocToken.LT;
 if ( c == '.' ) { break ; } } }
 break ; default : { break ; }
c = '.' ; } break ; default :
 addToString('^'.';
 } else { return JsDocToken.NL;
 if ( c == '.' ) { continue ; }
c = '.' ; break ; default : { break ;
 if ( c == '.' ) break ; else
 if (c == '<') {
 break ; } } } }
 ungetBuffer[current++]= '.';
 if ( c == ',' )
 } else { addToString('\\'.';
 ungetCursor |= '.';
 addToString('.')+'.';
 return JsDocToken.STR
c =  getChar(); c = next ;
 if ( c == '.' ) { }
 break ; } }
 } else { return JsToken.NL;
 if ( c!= '.' ) { break ; } }
c = '.' ; return c ;
 ungetBuffer *= '.';
 return JsDocToken.EQUALS;
c = '.' ; } } break ;
 ungetCursor += '.';
c  = ' ' ;
 return JsDocToken.END;
c = '.' ; } break ; }
 if (c == '>') {
 if (c == '.') { return;
 return JsToken.END;
 ungetCursor++!= '.';
 } while (true);
c  = c ; }
 ungetBuffer.= '.';
 return this.string;
c = '.' ; c = c ;
 } else { addToString()'.';
c = '.' ; } break ;
 return null ; }
c = '.' ; break ;
 ungetBuffer[current] |= '.';
 return JsDocToken.TEXT;
 return jsDocToken
 return JsToken.TEXT;
 ungetBuffer |= '.';
 break ; }
 addToString(''.';
 if ( c == 0 )
c  = nextChar(); }
 } } break;
 addToString('.').'.';
 return - 1;
c  = 0 ;
 } c |= '.';
 addToString();'.';
 } else { c = u'.';
c  = getChar ( )
 return null;
 } else { addToString(')';
 } } else {
 return JsDocToken.LF;
 if (backtrack)
c  = '.'
 if (c == '<') { return
 break ; default:
 return JsDoc;
c  += 1 ;
 return '.' ;
 break; } else {
 } c *= '.';
 addToString()'.';
c  += 1
 addToString(c;
 c = ''.';
 break ;
 } default:
 c = b'.';
 return c1;
 return ' ';
 getChar |= '.';
 return JsDocString;
 addToString(.);
c = '.' ; continue ;
 c ^= '.';
 } else { break ; }
 } } } break;
 } break;
 return ''.';
 }
c  -- ;
c = '.' ; return c
 return b'.';
c  = 0
c  = c
 return '$';
 } c ^= '.';
 } }
 c []= '.';
 c =!'.';
 if (c == c))
 return ;
 } else
 return '\\';
 return c=='.';
 return c
 default:
 return return'.';
 return 0;
c = '.' } }
 break;
 break; default: {
 if (backtrack){
 break ; }
 if (backtrack())
 return false;
 } break ; }
 } } else:
 c <<= '.';
 c!= '.';
c = '.' break ;
c = '.' ; break
 else
c += '.';
 break
c -= '.';
c == '.';
