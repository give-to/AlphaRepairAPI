case SYNTHETIC_BLOCK_PROP: return "synthetic";
 case IS_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case SYnthetic_PROP: return "synthetic";
 case Synthetic: return "synthetic";
 case SYnthetic: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "block";
 case Symbol: return "synthetic";
 case SYNTHETIC_PROP: return "synthetic";
 case synthetic: return"synthetic";
case  BLOCK:
case SYNTHETIC_BLOCK_PROP: return "symbol";
case SYNTHETIC_BLOCK_PROP: return "syntaxblock";
 default: Kit.codeBug();
case SYNTHETIC_BLOCK_PROP: return "syntotic_block";
case SYNTHETIC_BLOCK_PROP: return "syntoticblock";
 case SYNETIC_PROP: return"synthetic";
 case SYNTHETIC:return "synthetic";
 case SYnthetic_PROPERTY: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic_block";
 case SYNTHETIC_PROPERTY: return "synthetic";
 case SYNTHON_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "syntholic_block";
 case SYNTAX_PROP:return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "syntheticblock";
 case SYNTHONIC_PROP: return "synthetic";
 default: Kit.codeBug(); }
 case SYnthetic_NAME: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "cyclic";
 case SYNTAX_PROPERTY: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "syntholicblock";
 case SYNETIC_PROPERTY: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "syntactic_block";
case SYNTHETIC_BLOCK_PROP: return "sync";
case SYNTHETIC_BLOCK_PROP: return "sync_block";
case SYNTHETIC_BLOCK_PROP: return "cyclicblock";
 case SYNTHONIC_PROPERTY: return "synthetic";
 case SYNTHETIC_NAME: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthotic_block";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_property";
 case SYNETIC: return"synthetic";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_props";
 case SYNTHONIZED: return "synthetic";
 case COMPUTED_PROP: return "computed";
case  BLOCK: return "blocked";
 case COMMENT_PROP: return "comment";
 case COMMENT_PROPS: return "comment_properties";
case SYNTHETIC_BLOCK_PROP: return "syncblock";
case SYNTHETIC_BLOCK_PROP: return "synonyms";
 case COMMENT_PROP: return "comment_props";
case SYNTHETIC_BLOCK_PROP: return "symblock";
 case BLOCK: return "block;
case SYNTHETIC_BLOCK_PROP: return block;
 case COMPUTED_PROPS: return "computed";
 case EMPTY_STRING: return "empty_strings";
 case SYNTHETETIC: return "synthetic";
case  BLOCK_PROP:
 case COMPUTED_PROP: return "compute_properties";
 case EXTENSION_PROP: return "extension_properties";
 case COMMENTING_PROP: return "commenting_props";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_properties";
 case SYNETIC_SYNETIC: return "synthetic";
 case BLOCK: return "blocked;
 case SYNTAXED_PROP: return "synthetic";
 case EXTENSION_PROP: return "extension_property";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_prop";
 case SYNTAX: return "synthetic";
 case COMMENTING_PROP: return "commenting_properties";
 case SYNThetic: return"synthetic";
 case SYNETIC_STRING: return"synthetic";
 case EXTENDED_PROPS: return "extended_properties";
 case EXTENSION_PROP: return "extension_props";
 case QUOTED_PROP: return "quoted"; case COMMENT_PROP: return "comment_props";
 case COMPUTED_PROPS: return "computeproperties";
 case EXTENSION_PROP: return "extension_name"; default: Kit.codeBug();
 case SYnthetic_TYPE: return "synthetic";
 case COMMENT_PROP: return "comment_property";
 case EXTENDED_PROP: return "extended_property";
 case COMMENT_PROPS: return "comment_props";
 case EXTENDED_PROP: return "extended_properties";
case  STRING_PROP: return "string";
 case QUOTED_PROP: return "quoted"; case EXTENSION_PROP: return "extension_props";
 case QUOTED_PROP: return "quoted"; case COMMENT_PROPS: return "comment_props";
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug(); }
 case SYNETIC_NAME: return"synthetic";
 case STRING: return "string;
 case EXTENSION_PROP: return "extension_properties";
 case QUOTED_PROP: return "quoted"; case QUOTED_PROP: return "quoted";
 case EXTENSION_PROP: return "extension_property"; default: Kit.codeBug();
 case QUOTED_PROP: return "quoted"; case COMMENT_PROP: return "comment_property";
 case STRING_PROP: return "string;
 default: Kit.codeBug(...) {
 case QUOTED_PROP: return "quoted"; case COMPUTED_PROP: return "computed_props";
 case COMPUTED_PROPS: return "compute_properties";
 case QUOTED_PROP: return "quoted"; case COMMENT_PROPS: return "comment_properties";
 case QUOTED_PROP: return "quoted"; case QUOTED_STRING: return "quoted";
 default: return "unknown";
 case COMMENT_PROP: return "comment_props";
 case SYntheticPROP: return "synthetic";
 case EXTENSION_PROP: return "extension_property";
 case EXTENSION_PROP: return "extension_name"; default: Kit.codeBug(); }
 case SYntICATIC: return "synthetic";
 case SYNTIC: return"synthetic";
 case COMPUTED_PROP: return "computed"; default: Kit.codeBug(); }
 case QUOTED_PROP: return "quoted_props";
case  COMPATIBLE : return "compatible";
 case COMMENT_PROP: return "comment_prop";
 case QUOTED_PROP: return "quoted"; case QUOTED_STRING: return "quotedString";
 case COMPUTED_PROPS: return "computed_props";
 case COMMENTING: return "comment_string;
 case QUOTED_PROP: return "quoted"; case COMMENT_PROP: return "comment_prop";
case SYNTHETIC_BLOCK_PROP: return symbol;
 case IS_SYNTHETIC_NAME: return "synthetic";
 case QUOTED_PROP: return "quoted"; case COMMENTING_PROP: return "comment";
 case EMPTY_BLOCK: case IS_SYNTHETIC_BLOCK_PROP: return "synthetic";
 default: Kit.codeBug(...);
 case COMPUTED_PROPS: return "computed_properties";
case  COMMENT_PROP: return "comment";
 case QUOTED_PROP: return "quoted"; case EXTENSION_PROP: return "extension_property";
 case SYnthetic: return \"synthetic";
case  EMPTY:
 case INDEXES: return "indexes;
case SYNTHETIC_BLOCK_PROP: return "blocks";
 case QUOTED_PROP: return "quoted"; case EXTENSION_PROP: return "extension_properties";
 case INDEX: return "index;
 case COMPUTED_PROP: return "computeable";
 case COMPUTED_PROP: return "compute_properties";
 case QUOTED_PROP: return "quoted"; case COMPUTED_PROP: return "compute_props";
 case SYNTHETIC_PROPES: return "synthetic";
 default: Kit.codeBug(null);
 case SYNETIC_PROP: #"synthetic";
 case COMPUTED_PROP: return "modified";
 case QUOTED_PROP: return "quoted"; case EXTENSION_PROP: return "extension_prop";
 case QUOTED_PROP: return "quoted"; case COMPUTED_PROP: return "compute_properties";
 case COMPUTED_PROP: return computed;
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug();
 case EXTENSION_PROP: return "extension"; default: Kit.codeBug();
 case QUOTED_PROP: return "quoted"; case COMPUTED_PROP: return "computed_property";
 case COMMENT_PROP: return "comment;
 case EXTENDED_PROP: return "extended_property"; case BLOCK:
 case COMMENT_PROPS: return "commentproperties";
 case COMPUTED_PROP: return "contained";
 case COMPUTED_PROPS: return "compute_props";
 case QUOTED_PROP: return "quoted"; case EXTENDED_PROP: return "extended";
 case EXTENDED_PROP: return "extended_property"; case EMPTY:
 case BLOCK: return "block";;
 case Synthesized: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return null;
 case SYNC:return "synthetic";
 case QUOTED_PROP: return "quoted"; case QUOTED_PROP: return "quote";
 case QUOTED_PROP: return "quoted"; case EXTENSION_PROP: return "extension_protocol";
 default: Kit.codeBug('');
 default: Kit.codeBug("Unknown property");
 case EXTENDED_PROP: return "extended_property_name";
 case COMMENTING_PROP: return "commenting_protocol";
 default: Kit.codeBug(); } return null; } case PROP:
 case SYNETIC_TYPE: return"synthetic";
 case SYnthetic_PROP: #"synthetic";
 case INDEX_PROP: case _SYNTHETIC_BLOCK_PROP: return "synthetic";
 case SYnthetic: return +"synthetic";
 case SYNOPS: return"synthetic";
 case QUOTED_PROP: return "quoted"; case QUOTED_PROP: return quoted;
 case COMMENTING_PROP: return "commenting_property"; case BLOCK:
 case EXTENSION_PROP: return "extension_property"; case EMPTY_STRING:
 case EXTENSION_PROP: return "extension_property_name";
 case COMPUTED_PROP: return "computed_property"; case EMPTY_CLASS:
 case SYSTEM: return"synthetic";
 case SYNOPSY: return "synthetic";
 case SYntheticNAME: return "synthetic";
 case STRICT: return "strrict;
case  STRING_PROP:
 case INDEX: return "indx;
case SYNTHETIC_BLOCK_PROP: return "synthetic" case NO_BLOCK:
 case COMPUTED_PROP: return "compute_property"; case EMPTY:
 case COMMENTING_PROP: return "commenting_property"; default: return "unknown";
 case SYNTHETIC_PROPS:return "synthetic";
 case COMPUTED_PROP: return "compute_property"; case BLOCK:
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug(...);
 case QUOTED_PROP: return "quoted"; case COMMENTING_PROP: return comment;
 case _SYNTHETIC_BLOCK_PROP: return "synthetic";
case  NEW_BLOCK:
 case EXTENSION_PROP: return "extension_property"; case EMPTY_PROP:
case  IS_BLOCK:
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug(...) {
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug(...) }
 case COMPUTED_PROP: return "computed_property"; case EMPTY_NAME:
 case INDEXES: return "indices;
 case QUOTED_PROP: return "quoted"; case COMMENTING_PROP: return commenting;
 case EXTENSION_PROP: return "extension_name"; default: return "unknown_property";
 case STRING_PROP: case _SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_PROP: return "extended_property"; case EMPTY_CLASS:
 case SYnthetic: return return"synthetic";
 case EXTENDED_PROP: return "extended_property"; case NEWBLOCK:
 case COMMENTING_PROP: return "commenting_property"; case BLOCK_TYPE:
 case STRICT_BLOCK: case IS_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case SYntECTED:return "synthetic";
 case DEFAULT_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case ANONYMOUS_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENSION_PROP: return "extension_prop";
 case COMMENTING_PROP: return "commenting_property"; case EMPTY:
 case EXTENDED_PROP: return "extended_property"; default: return "unknown";
 case EMPTY_BLOCK: case _SYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMPUTED_PROP: return "computed"; default: Kit.codeBug(...) {
 case SYNTAX_PROPS:return "synthetic";
 default: return "unknown_property;
 case EXTENSION_PROP: return "extension"; default: return "unknown";
 case QUOTED_PROP: return "quoted_procedure";
 default: Kit.codeBug(...) }
 return "quoted;
 case COMMENTING_PROP: return "commenting_property_name";
 case SYnthetic_PROPS:return "synthetic";
 return "quoted";
case  STRING: return "strings";
 case SYNETIC_PROPS:return "synthetic";
 case EXTENSION_PROP: return "extension_name"; default: return "unknown_name";
 case EXTENSION_PROP: return "extension_name"; default: return "unknown_type";
 case EXTENSION_PROP: return "extension_name"; default: return "unknown property";
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug("Unknown property");
 default: Kit.codeBug("unknown property");
 case UNKNOWN_NAME: return "unknownname;
 case COMPUTED_PROP: return composed;
case  BLOCK: return "block_name";
 return "quoted_string;
 case BLOCK: return block;
 case COMPUTED_PROP: return "computed"; default: Kit.codeBug("Unknown property");
 case EXTENSION_PROP: return "extension_property"; case CLASS_NAME:
 case INDEX_PROP: case ISSYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMPUTED_PROP: return "computed"; default: Kit.codeBug(...) }
 case EMPTY_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_PROP: return "extended_property"; case EMPTY_NAME:
 case EXTENDED_PROP: return "extended_property"; case STRING:
 case QUOTED_PROP: return "quoted"; case COMMENTING_PROP: return commented;
 case COMPUTED_PROP: return "computed"; default: return "unknown";
 case SYNAL:return "synthetic";
 return "quoted";;
 case QUOTED_PROP: return "quoted_property_name";
case SYNTHETIC_BLOCK_PROP: return "scope";
 case STRICT: return "strict";;
case  NO_BLOCK:
case SYNTHETIC_BLOCK_PROP: return "synthetic" case EMPTY_PROP:
 case QUOTED_PROP: return "quoted"; default: return "unknown";
 case EMPTY_BLOCK: case ISSYNTHETIC_BLOCK_PROP: return "synthetic";
 case SYN: return"synthetic";
 case STRING:
case SYNTHETIC_BLOCK_PROP: return "synthetic" case NOBLOCK:
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug("unknown property");
 case EXTENSION_PROP: return "extension"; default: throw "Unknown property";
 case STRING_PROPS: return "string;
case SYNTHETIC_BLOCK_PROP: return "prototype";
 case ISSYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENSION_PROP: return "extension"; default: return "unknown property";
case  COMPATIBLE: return "compatibility";
 case MULTIPLE_SYNTHETIC_BLOCK_PROP: return "synthetic";
case  COMPATIBLE_BLOCK:
 case SYNETIC: return \"synthetic";
case SYNTHETIC_BLOCK_PROP: return "";
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug() }
 case STRING_PROP: caseSYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENSION_PROP: return "extension"; default: throw "unknown property";
 case QUOTED_PROPS: return "quoted_properties_props";
 default: throw "Unknown property";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case COMPATIBLE_BLOCK:
 return "quoted_props;
 case COMPUTED_BLOCK: case _SYNTHETIC_BLOCK_PROP: return "synthetic";
 default: return "unknown property";
case  BLOCK: return "block_type";
 case UNIQUE_SYNTHETIC_BLOCK_PROP: return "synthetic";
case  STRICT: return "strrict";
 default: Kit.codeBug() }
 case NO_BLOCK: case _SYNTHETIC_BLOCK_PROP: return "synthetic";
 case MEMBER_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENSION_PROP: return "extension_property_property";
case  EMPTY_PROP:
 case QUOTED_PROP: return "quoted"; case COMMENT_PROP: return "comment_props;"
 case SYNETIC: return +"synthetic";
 case QUOTED_PROP: return "quoted"; case COMMENT_PROP: return "comment_props;
 case QUOTED_PROP: return "quoted"; case COMMENTING_PROP: return commenting";
 case STRING_PROP;
 case QUOTED_PROP: return "quoted_property_props";
 case EXTENSION_PROP: return "extension"; default: throw "unknown";
 case SYNTAX_FLAG:return "synthetic";
 case SIDEEFFECT_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_PROP: return "extended_property"; case STRICT:
 case STRICT: return "stable;
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug("unknown"); }
 case EXTENSION_PROP: return "extension"; default: throw "Unknown";
 case STRING: return "string_type;
case  NEWBLOCK:
 case STRING: return "string_name;
 case EXTENSION_PROP: return "extension"; default: return null;
 case EXTENSION_PROP: return "extension"; default: return "";
 case COMPUTED_PROP: return "computed_property"; case EMPTY_NAME;
 default: return "unknown";
 case COMMENTING_PROP: return "commenting_property"; case empty:
 else: return "unknown_property";
 case SIMPLE_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EMPTY_BLOCK: case NON_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case STRING_PROP: case IS_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case SYNOPSECT: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case EMPTY_NAME:
 default: Kit.codeBug(); } return null; } case PROP {
 default: throw "Unknown";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case COMPOSITE_BLOCK:
case SYNTHETIC_BLOCK_PROP: return true;
case  STRICT_BLOCK:
case SYNTHETIC_BLOCK_PROP: return "synthetic" case BLOCK:
 return "quoted";
 return "quoted_name;
 case NO_BLOCK: case NONSYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMPATIBLE_OR_SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" or "no_synthetic";
 default: throw "unknown";
 case NULL: return null;
case  NEW_BLOCK_NAME:
 case NO_BLOCK: case UNSYNTHETIC_BLOCK_PROP: return "synthetic";
 default: return "";
case SYNTHETIC_BLOCK_PROP: return "synthetic" or "synthetic_block";
 default: return undefined;
 case INDEX_PROP: caseSYNTHETIC_BLOCK_PROP: return "synthetic";
 case QUOTED_PROP: return "quoted"; default: Kit.codeBug(...) { }
case  NOBLOCK:
 default: return null;
 default: return null;
 case BLOCK:
 case EXTERNAL_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case ANALYZE_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMPUTED_PROP: return computed";
 case STRING_STRING_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case STRICT_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_PROP: return "extended_property"; default: return null; }
 default: Kit.codeBug(''); }
 default: codeBug();
case  BLOCK_NAME:
 default: Kit.codeBug(); } break ; }
 case EXTENDED_OR_SYNTHETIC_BLOCK_PROP: return "synthetic";
 default: Kit.codeBug("unknown"); }
case SYNTHETIC_BLOCK_PROP: return "synthetic" case COMPOSITE_NAME:
case  BLOCK_TYPE:
case SYNTHETIC_BLOCK_PROP: return "synthetic" case EMPTY_STRING:
 case INDEXES: case _SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENSION_PROP: return "extension"; default: return "" }
 case COMMENTING_PROP: return "commenting_props;";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case "block";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case BLOCK_TYPE:
case SYNTHETIC_BLOCK_PROP: return "synthetic" case "emptyblock";
 case EMPTY_STRING: return "empty_strings;
 case SYnthetic_PROP::return "synthetic";
 case SYntIC: return "synthetic";
 case COMPATIBLE_AND_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMMENTING_PROP: return "commenting_props; }
 case POSSIBLE_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMMENT_PROPS: return "comment_props"; }
 case INDEXED_OR_SYNTHETIC_BLOCK_PROP: return "synthetic";
case  STRING:
 case EMPTY_STR;
 case MAPPED_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EMPTY_TEXT;
 case PENDING_SYNTHETIC_BLOCK_PROP: return "synthetic";
 default: # fall through;
case  ISBLOCK:
 case empty_block;
case SYNTHETIC_BLOCK_PROP: return "synthetic" case BLOCK_SIZE:
 case QUOTED_PROPS: return "quoted_props"; }
 case COMMENT_PROPS: return "comment properties;
 case STRICT:
 default: Kit.codeBug("Unknown property")
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown_type"; }
 default: break;
case SYNTHETIC_BLOCK_PROP: return "synthotic_block",
 case QUOTED_PROP: return "quoted_procedure;
 default: # fall through }
 case NT: return"synthetic";
 case "empty";;
 case QUOTED_PROP: return "quoted_procedure;"
 case NON_SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_props;
 case CLASS:return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_property;
case SYNTHETIC_BLOCK_PROP: return "synthotic_block;
case SYNTHETIC_BLOCK_PROP: return "syntoticblock;
case SYNTHETIC_BLOCK_PROP: return "synthetic_block"; or
case SYNTHETIC_BLOCK_PROP: return "synthetic" for "block";
case SYNTHETIC_BLOCK_PROP: return "syntoticblock",
 default: ignore;
 default: Kit.codeBug());
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_props",
 default: Kit.codeBug() {
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_prop;
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_props;"
case SYNTHETIC_BLOCK_PROP: return "synthotic_block;"
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown type"; }
case  UNKNOWN:
case SYNTHETIC_BLOCK_PROP: return "synthetic" or "synthetic_blocks";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_property"; }
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown" ; } }
case SYNTHETIC_BLOCK_PROP: return "synthetic;
 case synthetic: #"synthetic";
case  STRING_PROP: return "string;"
case  NULL:
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown block"; }
 case SYNC:"synthetic";
case  BLOCK_PROP: {
case SYNTHETIC_BLOCK_PROP: return "synthetic" case "empty";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case EMPTY_PROP;
case SYNTHETIC_BLOCK_PROP: return "synthetic" case EMPTY_NAME;
case  COMPATIBLE_BLOCK;
case SYNTHETIC_BLOCK_PROP: return "synthetic" or "synthetic_blocked" ;
 return null;
 default: #"synthetic";
 case "empty quoted;
 case NTSTAT: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" or "synthetic_block" ; }
case  None:
 case Synthetic::return "synthetic";
case  BLOCK: return "block_name",
case  BLOCK: return "blocked;"
 case Symbol:"synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case EMPTY_STRING;
case  STRING: return "strings;"
case SYNTHETIC_BLOCK_PROP: return "synthetic" in block;
 default: return"synthetic";
 } return null;
case  STRING_PROP: {
case  empty:
case  STRICT:
 case USE_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case MISSYNTHETIC_BLOCK_PROP: return "synthetic";
case  TEXT:
case  Empty:
case SYNTHETIC_BLOCK_PROP: return "synthetic" for block;
 case __SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown block"; #
case  STRICT_BLOCK;
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; break ;
case SYNTHETIC_BLOCK_PROP: return "synthetic" case NOBLOCK;
 case Symbol:
 case AS_SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; break ; }
 case EXT_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case CLASS:
case SYNTHETIC_BLOCK_PROP: return "synthetic" case "emptyblock",
 break ; }
case SYNTHETIC_BLOCK_PROP: return "synthetic" in case;
case SYNTHETIC_BLOCK_PROP: return;
 case syntheticreturn "synthetic";
case SYNTHETIC_BLOCK_PROP: {
case  BLOCK: {
case SYNTHETIC_BLOCK_PROP_NAME:
 case SPECIAL: return "synthetic";
 case NAME: return "synthetic";
 break switch;
 break;
case SYNTHETIC_BLOCK_PROP : break ;
 # break;
 default: }
 case "empty;
 # default;
 case noop;
 } return "";
 case Symbolreturn "synthetic";
case SYNTHETIC_BLOCK_PROP: {}
 case ' ';
 return "";
case SYNTHETIC_BLOCK_PROP: #
 case #"synthetic";
 return #"synthetic";
 } #"synthetic";
 case!"synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; }
 case :"synthetic";
 case symreturn "synthetic";
case SYNTHETIC_BLOCK_PROP:  {};
case SYNTHETIC_BLOCK_PROP:  {},
 break }
 } }
case SYNTHETIC_BLOCK_PROP:: {
case SYNTHETIC_BLOCK_PROP: return "synthetic""; }
case SYNTHETIC_BLOCK_PROP(): return "synthetic";
case SYNTHETIC_BLOCK_PROP': return "synthetic";
 }
case SYNTHETIC_BLOCK_PROP): return "synthetic";
