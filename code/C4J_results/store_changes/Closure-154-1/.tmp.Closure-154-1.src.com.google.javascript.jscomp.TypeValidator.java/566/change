 }
 }
 } }
 } } }
 } }
 } } } }
 } } } }
 } } }
 } } } } }
 } } } } }
 } } } } } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ;
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop )
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } } } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented ) ;
 } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } } } }
 } } else { expectInterfaceProperty(t, n, instance, implemented); }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } } } } }
 } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } }
 } else { expectInterfaceProperty(t, n, instance, implemented, prop); } } } } } } } }
 } } } } } } }
 } else { expectInterfaceProperty(t, n, instance, implemented, prop); } } } } } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented ) ; } } } } } } }
 } } else { expectInterfaceProperty ( t, n, instance, implementedInterface, prop ) ; } } } } } } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented. getName ( ) ) ;
 } } else { expectInterfaceProperty(t, n, instance, implemented, implementedInterface); }
 } } else { expectInterfaceProperty(t, n, instance, implemented, prop); } } if ( shouldReport ) {
 } } else { expectInterfaceProperty ( t, n, instance, implemented ) ; } } } } } } } }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop, instance ) ;
 } } } if ( shouldReport ) {
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } } ) ;
 } } else { expectInterfaceProperty(t, n, instance, implemented, prop); } } } } } } } } }
 } } else { throw new IllegalArgumentException ( ) ;
 } } } else { throw new IllegalArgumentException ( ) ;
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop, instance. toString ) ;
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop, null ) ; }
 } } if ( shouldReport ) {
 } } else { expectInterfaceProperty(t, n, instance, implemented, prop, implementedInterface);
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } else { return false ;
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop, null ) ;
 } } else { expectInterfaceProperty(t, n, instance, implemented, prop, implementedInterface); }
 } } else { expectInterfaceProperty(t, n, instance, implementedInterface);
 } } else { expectInterfaceProperty ( t, n, instance, implemented )
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } } } ) ;
 } } else { expectInterfaceProperty(t, n, instance, implemented, prop); } } else { throw new RuntimeException ( ) ;
 } } else { return false ; } } else { return true ; } } else { return false ; } } else { return false ;
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } else { return ;
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } } } } } } }
 } } } else { throw new IllegalArgumentException ( type ) ;
 } } else { return false ; } } else { return true ; } } else { return false ; } } else { return true ;
 } } else { expectInterfaceProperty ( t, n, instance, implementedInterface, prop ) ; } } } } } } } } }
 } } else { expectInterfaceProperty ( t, n, instance, prop )
 } } else { throw new IllegalArgumentException ( type ) ;
 } } else { expectInterfaceProperty(t, n, instance, prop);
 } } } if ( shouldReport )
 } } } else { throw new TypeErrorException ( type ) ;
 } } else { return false ; } } else { return false ; } } else { return false ; } } else { return false ;
 } } else { return false ; } } else { return false ; } } else { return true ; } } else { return false ;
 } } else { expectInterfaceProperty(t, n, instance, null);
 } } } else { throw new RuntimeException ( ) ;
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop, instance. name ) ;
 } } else { return false ; } } else { return true ; } } else { return false ; } else { return true ; }
 } } if (! shouldReport ) {
 } } else { throw new TypeErrorException ( type ) ;
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } else { return false ; }
 } } else { expectInterfaceProperty ( t, n, instance, implemented, prop ) ; } } } } } else { return false ;
 } } else { throw new RuntimeException ( ) ;
 } } if ( shouldReport )
 } } else { throw new IllegalArgumentException ( prop ) ;
 } } } else { throw new IllegalArgumentException ( )
 } } else { throw new IllegalStateException ( ) ;
 } } } else { throw new RuntimeException ( type ) ;
 } } } } } } } }
 } } } else { throw new TypeErrorException ( type ) ; }
 } } else { throw new RuntimeException ( "Unknown interface" ) ;
 } } else { throw new TypeErrorException ( type ) ; }
 } } } else { return ;
 } } else { throw new IllegalArgumentException ( "Unknown" )
 } } else { throw new TypeError ( type ) ;
 } } } if (! shouldReport ) {
 } } } if ( shouldReport ) { }
 } } else { t. expectInterfaceProperty ( n ) ;
 } } else { throw new IllegalArgumentException ( "Unknown property");
 } } else { throw new RuntimeException ( type ) ;
 } } } else { return false ;
 } } } else { throw new RuntimeException ( )
 } } else { throw new TypeErrorException ( ) ;
 } } else { throw new TypeError ( ) ;
 } } else { throw new IllegalStateException ( )
 } } } } else { return ;
 } } } } } } } } }
 } } } } } ) ;
 } } } return true ;
 } } } else { return false ; }
 } } } } else { throw new RuntimeException ;
 } } } else { throw new RuntimeException ;
 } } } } else { return false ; }
 } } } return true ; }
 } } } } else { return false ;
 } } } return ;
 } } } } } ;
 } } return true ;
 } } } } else {
 } } } } return ;
 } } } return ;
 } return ; } }
 } } return false ;
 return ; } } }
 } } return true ;
 break ; }
 return ; } }
 break ; }
 return ; } }
 } return ; }
 break ; } }
 } return ; }
 return ; }
 } } return ;
 } return true ;
 return ; }
 } break ;
 break;
 } break ;
 break;
 continue ;
 break }
 continue ;
 break
 break
