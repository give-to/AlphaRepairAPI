 }
 } }
 } } }
 } } } else {
 } } else {
 } } } }
 else { seenSideEffects = false ; requiresDecomposition = false ;
 else { seenSideEffects = false ; requiresDecomposition ; }
 else { seenSideEffects = false ; } }
 else { return DecomppositionType.DECOMPOSABLE; } } } else { return DecomppositionType.DECOMPOSABLE;
 else { return DecompositionType.DECOMPOSABLE; } } } else { return DecompositionType.DECOMPOSABLE;
 else { return DecomppositionType.DECOMPOSABLE; } } else { return DecomppositionType.DECOMPOSABLE ; }
 else { return DecomppositionType.DECOMPOSABLE; } } else { return DecomppositionType.UNDECOMPOSABLE;
 else { return DecomppositionType.DECOMPOSABLE; } } else { return DecomppositionType.DECOMPOSABLE;
 else { seenSideEffects = false ; }
 else { parent. removeChild ( n ) ; } } } } }
 else { parent. removeChild ( n ) ; } } } } } }
 else { seenSideEffects = false ; } } }
 else { parent. removeChild ( n ) ; } }
 else { seenSideEffects = false ; break ; } }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } } else { return DecomppositionType ; }
 else { parent. removeChild ( n ) ; } } } }
 else { seenSideEffects = false ; } } } }
 else { parent. removeChild ( n ) ; } } } } } } }
 else { parent. removeChild ( n ) ; } } }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return DecomppositionType ; }
 else { return DecomppositionType.DECOMPOSABLE; } } else { return DecomppositionType.UNDECOMPOSABLE
 else { seenSideEffects = false ; } } } } }
 else { parent. removeChild ( n ) ; } } parent. removeChild ( child ) ;
 else { return DecomppositionType.DECOMPOSABLE; } } } else { return DecomppositionType.UNKNOWN; }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return DecomppositionType.ERROR;
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return DecomppositionType.ALL;
 else { return DecomppositionType.DECOMPOSABLE; } } } else { return DecompositionType ; }
 else { parent. removeChild ( n ) ; break ; } } } }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return DecompositionType ; }
 else { return DecomppositionType.DECOMPOSABLE; } } } else { return DecomppositionType ; }
 else { parent. removeChild ( n ) ; parent. removeChild ( n ) ;
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return DecomppositionType.OTHER;
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return DecomppositionType.ANY;
 else { parent. removeChild ( n ) ; break ; } } }
 else { parent. removeChild ( n ) ; }
 else { parent. removeChild ( n ) ; } } parent. setFirstChild ( child ) ;
 else { seenSideEffects = false ; requiresDecomposition = false
 else { parent. removeChild ( n ) ; parent. remove ( ) ; }
 else { parent. removeChild ( n ) ; break ; } } } } }
 else { parent. removeChild ( n ) ; } } } } } } } }
 else { parent. removeChild ( n ) ; break ; } }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return null ; }
 else { seenSideEffects = false ; requiresDecomposition } }
 else { parent. removeChild ( n ) ; } parent. removeChild ( n ) ; }
 else { parent. removeChild ( n ) ; } } parent. remove ( ) ; }
 } } } } }
 else { seenSideEffects = false ; break ; }
 else { parent. removeChild ( n ) ; } } parent. removeChild ( child ) ; }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } return DecomppositionType.UNKNOWN;
 else { return DecomppositionType.UNDECOMPOSABLE; } } } return DecompositionType.UNKNOWN;
 else { parent. removeChild ( n ) ; } parent. removeChild ( child ) ; }
 else { parent. removeChild ( n ) ; break ; } } } } } }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return parent ; }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return null ; } }
 else { parent. removeChild ( n ) ; } } } else { return null ; }
 } else { parent. removeChild ( child ) ; } } } } } }
 else { parent. removeChild ( n ) ; break ; }
 else { parent. removeChild ( n ) ; } } } } } } } } }
 else { seenSideEffects = false ; requiresDecomposition ;
 else { return DecompositionType.UNDECOMPOSABLE; } } } else { return null ; } }
 else { parent. removeChild ( n ) ; } } } return parent ; }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return "foo()"; }
 }
 } else { parent. removeChild ( child ) ; } } } } } } }
 } else { parent. removeChild ( child ) ; } } } } }
 else { parent. removeChild ( n ) ; return null ; } }
 else { parent. removeChild ( n ) ; return null ; } } }
 else { parent. removeChild ( n ) ; } } parent. setFirstChild ( null ) ;
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return parent ; } }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } else { return 0 ; } } }
 } else { parent. removeChild ( child ) ; } } } } } } } }
 } else { parent. removeChild ( child ) ; } } else { parent. removeChild ( ) ;
 else { parent. removeChild ( n ) ; } } } } return parent ; }
 else { parent. removeChild ( n ) ; break ; } } } } } } }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } } else { return null ; } }
 else { parent. removeChild ( n ) ; } } parent. setFirstChild ( parent ) ;
 else { return DecomppositionType.UNDECOMPOSABLE; } } } } } } } } }
 } else { parent. removeChild ( child ) ; } } } } } } } } }
 else { parent. removeChild ( n ) ;
 } else { parent. removeChild ( child ) ; } } else { parent. remove ( child ) ;
 } else { parent. removeChild ( child ) ; } } else { parent. remove ( ) ; }
 else { return DecomppositionType.UNDECOMPOSABLE; } } } } } } } } } }
 else { parent. removeChild ( n ) ; } } } } } } } } } }
 else { parent. removeChild ( n ) ; } } return parent ; }
 else { return DecompositionType.UNDECOMPOSABLE; } } } } } } } } } }
 else { return DecompositionType.UNDECOMPOSABLE; } } } } } } } } }
 else { parent = n ; break ; } }
 } parent. removeChild ( ) ;
 else { seenSideEffects = false ; requiresDecomposition }
 } parent. removeFirstChild ( ) ;
 } else { parent. removeChild ( child ) ; } } else { parent. removeChild ( child ;
 } else { parent. removeChild ( child ) ; } } else { parent. removeChild ( child )
 } else { parent. removeChild ( child ) ; } } } } } } } } } }
 } } } }
 } } } } }
 } parent = child ; } }
 else { parent = n ; break ; } } }
 } } } } } }
 else { break ; } } } }
 else { parent = n ; } } } }
 } parent. remove ( ) ; }
 else { return null ; } }
 else { break ; } } }
 } } } } } } }
 } } }
 else { break ; } }
 } parent = child ; }
 } } break ; }
 } } } ) ;
 } return parent ; } }
 else { return - 1 ; } } }
 } } } } } } } }
 } return parent ; }
 } } return parent ; }
 } } else { return null ; } }
 else { break; }
 } }
 } } else { }
 } else {
 } } ) ;
 else { } } }
 } } } } ;
 } } finally {
 } break ; }
 } return parent ;
 return n ; }
 } } } ;
 break ; }
 break; }
 } } ;
 } break ;
 }); }
 };
 };
