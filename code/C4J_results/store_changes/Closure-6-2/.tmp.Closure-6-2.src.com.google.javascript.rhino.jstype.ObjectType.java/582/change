 return ImmutableSet.of();
 return ImmutableSet.of;
 return ImmutableSet.of);
 return Set.of();
 return null;
 return null);
 return ImmutableHashSet.of();
 return ImmutableSet();
 return Iterable.of();
 return ImmutableSet.of(this);
 return Immutable.of;
 return ImmutableSet.of(); ImmutableSet.of();
 return ImmutableSet;
 return Immutable.of();
 return ImmutableSet.of(type);
 return ImmutableSet.ofInterfaces();
 return ImmutableSetOf();
 return ImmutableSet.of().of();
 return ImmutableSet.of.of();
return ImmutableSet.of( getCtorExtendedInterfaces());
 return ImmutableSet.of(...);
 return ImmutableSet<ObjectType>.of();
 return ImmutableImmutableSet.of();
 return ImmutableSet.of(interfaces);
 return ImmutableSet.of(); }
 return ImmutableSet.of(); } return null;
 return ImmutableSet.ofExtendedBy();
 return ImmutableSet.modifiable();
 return ImmutableSet.ofExtended();
 return ImmutableSet.of(), Iterable.of();
 return ImmutableSet.ofExtendedMethods();
 return ImmutableSet.of(); Iterable.of();
 return ImmutableSet of();
 return ImmutableSet.of
 return ImmutableSet.interfaces();
 return ImmutableSet.of(), Set.of();
 return ImmutableSet.of(); return null;
 return ImmutableSet<Object>.of();
return ImmutableSet.of( getCtorExtendedInterfaces()); }
 return ImmutableSet.of().getInterfaces();
 return ImmutableSet.ofExtends();
 public Set<ObjectType> {
 return ImmutableSet.ofAllInterfaces();
 return ImmutableSet.ofExtendedTypes();
 return ImmutableSet (*);
 return immutableSet.of();
 return ImmutableSet.of(_);
 return ImmutableSet.of(ObjectType).of();
 return ImmutableSet.<ObjectType>.of();
return ImmutableSet.of( getCtorExtendedInterface());
 public Iterable<ObjectType> getCtorInterfaces() {
 return ImmutableSet.of(); } return type ;
 public Set<ObjectType>() {
 return ImmutableSet.ImmutableSet.of();
 return ImmutableSet.ofInterfaces.of();
 return ImmutableSet.of(), ImmutableSet.of();
 return ImmutableSet.of(extends);
 return ImmutableSet.of(String).of();
 return ImmutableSet.of(...).of();
 return ImmutableSet.of().toArrayList();
 return null
 return ImmutableSet.of( extendedInterfaces);
 return ImmutableSet.of(...)).of();
 return ImmutableSet.of(extendedInterface);
 return ImmutableSet.of(interfaces).of();
 return ImmutableSet.of(this));
 return ImmutableSet.of(); Immutable.of();
 return getCtorExtendedInterfaces()||ImmutableSet.of();
 return ImmutableSet.of(?);
 return ImmutableSet.of(interface);
 return ImmutableSet.of(this.interface);
 public Iterable<ObjectType> interfaces() {
 public Iterable<ObjectType> getInterfaces() {
 return ImmutableSet.ofExtendedInterface();
 public Iterable<ObjectType> {
 public Iterable<ObjectType> getInterfaceInterfaces() {
 return ImmutableSet.of(extended interfaces);
 return ImmutableSet.of()); ImmutableSet.of();
 return ImmutableSet.interfaces.of();
 return ImmutableSet.of(Interface).of();
 return ImmutableSet.of());
 public Iterable<JSType> interfaces() {
 return immutableSet();
 return ImmutableSet.of().toIterable();
 public Iterable<ObjectType> getExtendedInterfaces() {
 public Iterable<ObjectType> getCtorExtendedMethods() {
 return ImmutableSet.of(type));
 public Set<ObjectType> interfaces() {
 return ImmutableSet.of(*);
 return ImmutableList<ObjectType>.of();
 return getCtorExtendedInterfaces().ImmutableSet.of();
 return ImmutableSet.interfaces;
 return immutableSet.of);
 public Set<JSType> interfaces() {
 public Iterable<ObjectType> getCtorImplementedInterfaces() {
 return ImmutableSet.of() Immutable.of();
 return ImmutableSet<String>.of();
 public Iterable<ObjectType> getCtorImplementedMethods() {
 return ImmutableSet.of(extended);
 return ImmutableSet.of(types);
 public Iterable<ObjectType> getCtorExtendedInterfaces() {
 return ImmutableSet.of(););
 return ImmutableSet.of(); } return Set.of();
 return ImmutableSet.of(thisType);
 return ImmutableSet.of(null);
 public Iterable<ObjectType> getExtendedInterfaces() { public Set<ObjectType> {
 public Iterable<ObjectType> getExtendedInterfaces() { public Set <String> {
 return (int)ImmutableSet.of();
 public Iterable<ObjectType> getExtendedInterfaces() { public Set<ObjectType> {}
 public Iterable<ObjectType>() {
 return ImmutableSet.of() | Set.of();
 return ImmutableSet.of() };
 return emptySet();
 public Iterable<ObjectType> getExtendedInterfaces() { public Set <String> {}
 return ImmutableSet.of(); } return this ;
 return ImmutableSet.of().toArray();
 return ImmutableSet.of(); return interfaces;
 public Iterable<ObjectType> getCtorImplemented() {
return ImmutableSet.of( getCtorExtended() );
 return ImmutableIterable.of();
 public Collection<JSType> interfaces() {
 public Iterable<ObjectType> getCtorExtendedClasses() {
 public Iterable<JSType> getCtorExtendedJSTypes() {
 return ImmutableSet.newSet.of();
 public Iterable<ObjectType> getCtorExtendedObjects() {
 return ImmutableSet of ImmutableSet.of();
 return ImmutableSet.Of.of();
 return ImmutableSet.<Object>.of();
 return ImmutableSet<Type>.of();
 return ImmutableSet.noCopy();
 public Iterable<ObjectType> getImplementedMethods() {
 public Iterable<ObjectType> getMembers() {
 public Iterable<ObjectType> getCtorExtendedInterfaces() { public Set interfaces() {
 return ImmutableSet.ofClasses();
return ImmutableSet.of( getCtorExtendedInterface() ); }
 return ImmutableSet.of(); ImmutableList.of();
 public Set<ObjectType> {}
 public Set < ObjectType > getCtorExtendedMethods() {
 public Iterable<JSType> getCtorExtendedInterfaces() {
 return ImmutableSet.ofInts();
 return getCtorExtendedInterfaces ( ) ;
 public Iterable<JSType> getCtorExtendedMethods() {
 return ImmutableSet.of().toList();
 public Iterable<ObjectType> getInterfaceExtendedInterface() {
 public Iterable<ObjectType> {}
 return ImmutableSet.of(this;
 return ImmutableSet.ImmutableList.of();
 public Iterable<ObjectType> getExtendedInterfaces() { public Set interfaces() {
 return getCtorExtendedInterfaces(),ImmutableSet.of();
 return ImmutableSet.noList();
 public Iterable<ObjectType> getExtendedInterfaces() { public Set set() {
 public Iterable<ObjectType> getExtendedInterfaces() { public Set members() {
 public Iterable<ObjectType> getExtendedMethods() {
 return ImmutableSet.noAccess();
 public Iterable<ObjectType> getCtorExtendedInterfaces(Interface interface) {
 public Iterable<ObjectType> getExtendedInterfaces() { public Set <>() {
 return ImmutableSet.of(); } }
 return (ObjectType)ImmutableSet.of();
 public Iterable<JSType> getMembers() {
 return immutableSet.of;
 public Iterable<ObjectType> getCtorInterfaces() {} {
 return ImmutableSet.of(Classes).of();
 return ImmutableList<Object>.of();
 return ImmutableSet. of ( type ).of();
 public Iterable<ObjectType> getExtendedInterface() {
 return getCtorExtendedInterface().ImmutableSet.of();
 return ImmutableSet.of(className);
 public Iterable<ObjectType> getCtorImplementedInterfaces() {} {
 public Iterable<ObjectType> getInterfaces() {} {
 public Iterable<JSType> getMethods() {
 public Iterable<JSType> getCtorExtendedTypeReferences() {
 public Set<ObjectType>() {}
 return getCtorExtendedInterfaces()ImmutableSet.of();
 public Iterable<ObjectType> getCtorExtendedClasses() {} {
 return new Iterable<ObjectType>()ImmutableSet.of();
 return getCtorExtendedInterfaces() ; }
 public Iterable<ObjectType> getExtendedInterfaces() {} {
 public Iterable<ObjectType> getExtendedInterfaces(InterfaceType interface) {
 public Collection<ObjectType> {
 public Iterable<ObjectType> getCtorExtendedInterfaces() {} {
 public Set<ObjectType> extendedInterfaces {
 public Set<JSType>() {
 return ImmutableSet.ofAllof();
 public Set<JSType> extendedInterfaces {
 public Iterable<ObjectType>() {}
 return ImmutableSet (();
 public Collection<ObjectType>() {
 public Set <String> {
 return ImmutableSet(of);
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; } public Set <String> {
 return Collections. emptyList ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(ObjectType type) {
 return.of();
 public Iterable<ObjectType> getExtendedInterfaces() { public Set set() {}
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getCtorImplementedMethods() {
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; public Set <String> {
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(Class type) {
 return getCtorExtendedInterfacesAsImmutableSet.of();
 return immutableSetOf();
 return Collections. singletonList ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(ObjectType) {
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(ObjectType) {
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; } public Set<ObjectType> {
 return { } ;
 return Collections. emptyList ( ) ; } public Iterable<ObjectType> getCtorExtendedObjects() {
 return ImmutableList.of();
 return Collections. emptyList ( ) ; } public Iterable<ObjectType> getCtorImplementedObjects() {
return ImmutableSet.of( getCtorExtendedInterfaces();
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getCtorExtendedObjects() {
 return Collections. singletonList ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(Class type) {
 return (ObjectType>)ImmutableSet.of();
 return ImmutableSet.of(); };
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(Interface interface) {
 return Collections. singletonList ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(Object type) {
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; public Set<ObjectType> {
return ImmutableSet.of( getCtorExtendedInterfaces() ); };
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(Object type) {
 return null ; }
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; public Set<ObjectType> {}
return ImmutableSet.of( getCtorExtendedInterfaces(); });
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; public Set <String>() {
return ImmutableSet.of(); } return null ; }
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; public Set <String> {}
 public Set <Interface> {
return ImmutableSet.of( ctorExtendedInterface );
 return ImmutableSet.Map.of();
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; } public Set<String>() {
return ImmutableSet.of( getCtorInterfaces());
 return Collections. emptyList ( ) ; } public Iterable<ObjectType> getCtorExtendedObjectTypes() {
 return getCtorInterfaces().ImmutableSet.of();
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getCtorExtendedObjectTypes() {
return ImmutableSet.of( getCtorInterface() );
 return Collections. emptyList ( ) ; } public Iterable<ObjectType> getCtorImplementedObjectTypes() {
 public Iterable<ObjectType> getCtorImplementedInterfaces() { }
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; public Set <Class> {
 return ImmutableSet.fromImmutableSet.of();
 public Iterable<ObjectType> getCtorImplementedInterfaces() {} }
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; } public Set<ObjectType> {}
 return getCtorExtendedInterface(),ImmutableSet.of();
 return ImmutableSet.of() }
 return Iterable<ObjectType>. of ( getCtorExtendedInterfaces() ) ; } public SetSet() {
 return Iterable<ObjectType>. of ( getCtorExtendedInterfaces(). iterator ( ) ) ; }
 public Iterable<ObjectType> getCtorInterfaces() {} }
return ImmutableSet.of(); } } return null ;
 return Iterable<ObjectType>. of ( getCtorExtendedInterfaces() ) ; } public static Set() {
 return getCtorExtendedInterfaces()|ImmutableSet.of();
return ImmutableSet.of(); } return ownerFunction ;
 return getCtorExtendedInterfaceAsImmutableSet.of();
return ImmutableSet.of( CtorExtendedInterface );
 return ImmutableSet.noCopy;
 return Iterable<ObjectType> getCtorExtendedInterfaces() ; } public Set<String> interfaces()
return ImmutableSet. of ( getCtorExtended ) ;
 return ImmutableSet.enumerable;
 return Immutable#of;
 public Iterable<ObjectType> getInterfaces() {}
 return [ ] ;
 return Collections(type);
 return (ObjectType[])ImmutableSet.of();
 return interfaces ;
 return getCtorExtendedInterface()ImmutableSet.of();
 return Immutable#of();
return ImmutableSet.of() return null;
 return set(type);
 return Collection<JSType>~ImmutableSet.of();
 return ImmutableSequence.of();
 return ImmutableObjectSet.of();
 public Iterable<ObjectType> getInterfaceInterfaces() {}
 return Iterables.of();
return ImmutableSet.of( getCtorInterfaces()); }
 return ImmutableEnumSet.of();
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(ObjectType) {}
 return ( Iterable<ObjectType>) GenericImmutableSet.of();
 return new Iterable<ObjectType>()->ImmutableSet.of();
 return new Iterable<ObjectType>()||ImmutableSet.of();
 public Set interfaces() {
 return interfaces ; }
 return Collections. singletonList ( ) ; } public Iterable<ObjectType> getExtendedInterfaces(ObjectType) {}
 return getCtorInterfaces(),ImmutableSet.of();
return ImmutableSet.of( ctorExtended );
return ImmutableSet.of() public boolean isNativeObjectType() { return false
 return getCtorInterfacesAsImmutableSet.of();
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getExtendedInterfaces() {} public static
 public Set <>() {
 return (void)ImmutableSet.of();
 return Collection<ObjectType>~ImmutableSet.of();
 return ImmutableSet.modifiableImmutableSet.of();
 return Iterable<ObjectType>. of ( getCtorExtendedInterfaces() ) ; } public static Set() {}
 return Collections(this);
 return new Iterable<ObjectType> ( ) ; } public Iterable<ObjectType> getExtendedInterfaces() {} public void
 return ImmutableSet);
 return Iterable<ObjectType>. of ( getCtorExtendedInterfaces() ) ; } public static final Set
return ImmutableSet. of ( ) ; } } ;
return ImmutableSet.of( getCtorExtendedMethods());
 return Iterable<ObjectType>. of ( getCtorExtendedInterfaces() ) ; } public static final void
return ImmutableSet.of() } return null ;
return ImmutableSet.of() public boolean isNativeObjectType() { }
return ImmutableSet.of() public void setOwnFunction(FunctionType type);
return ImmutableSet.of( CtorExtended );
 public Set extends() {
 return (ObjectType])ImmutableSet.of();
 return LinkedHashSetImmutableSet.of();
 return emptySet;
return ImmutableSet.of() public boolean isNativeObjectType() { return true
 return LinkedHashMapImmutableSet.of();
return ImmutableSet.of(); } return this ; }
return ImmutableSet.of() public boolean isNativeObjectType() {
 return empty();
return ImmutableSet.of() public void setExtendedInterfaces() { }
 return (Object)ImmutableSet.of();
return ImmutableSet.of(); } return setOwnerFunction ;
 return new Set();
 return immutableHashSet();
return ImmutableSet.of() public void setOwnerFunction(FunctionType type);
 return immutableSet.of(); }
return ImmutableSet.of( this.interfaces );
 return (null);
 return LinkedHashImmutableSet.of();
return ImmutableSet.of(); } return setOwnerFunction();
 return LinkedImmutableSet.of();
 return immutableInterfaces;
return ImmutableSet.of() } return type ;
 public Set implements() {
return ImmutableSet.of( getCtorInterface() ); }
 return ImmutableIteratorable.of();
 return Collections.of();
 return nil();
 return AbstractSet.of();
return ImmutableSet.of(ctorExtended());
 public static Set() {
return ImmutableSet.of(); } return false ;
 return ImmutableList.of);
 return CollectionsImmutableSet.of();
return ImmutableSet.of() public void setOwnerFunction() {
 return emptySet);
 return (iterator);
return ImmutableSet.of() public static int serialVersionUID() {
 return ImmutableSet.copyof();
return ImmutableSet.of() public void setExtended ( ) { }
return ImmutableSet.of() public void setOwnFunction() { }
return ImmutableSet.of() public static int serialVersionUID = 1
 return immutable.of;
 public Set() {
return ImmutableSet.of() public void setOwnFunction(function) {}
 return set();
 return ImmutableSet2.of();
 return Collections.of;
 return interfaces
 return this.interface;
return ImmutableSet.of() public void setOwnerFunction() {}
 return -1;
return ImmutableSet.of() public void clear ( ) {
return ImmutableSet.of() public void setOwner ( ) {
 return ImmutableListOfImmutableSet.of();
return ImmutableSet.of() public void setOwnFunction(function); }
 return ImmutableList.of;
 return ImmutableSet.Of;
return ImmutableSet.of() public void close() {
return ImmutableSet.of() public void setOwnFunction() {
 return DefaultImmutableSet.of();
return ImmutableSet.of( this); }
 return ImmutableSet.(of);
return ImmutableSet.of() public void clear() {}
return ImmutableSet.of() public static void clear() {}
 return ImmutableSet::of;
return ImmutableSet.of() public static int serialVersionUID();
 return _of();
 return null;
 return of();
return ImmutableSet.of() public boolean isNativeObjectType() {...
 return ImmutableMap.of;
 public static Set() {}
 return interfaces();
 return ImmutableSet(0);
 return ;
 return ImmutableSet.Of();
return ImmutableSet.of() } return this ;
return ImmutableSet.of() return interfaces;
return ImmutableSet.of( this).interface();
 return (int);
 return CtorImmutableSet.of();
 return getIterator();
 return null; }
 return ExtendedImmutableSet.of();
 public Set() {}
 return asSet();
 return ImmutableMap.of();
 return Immutable.ImmutableSet.of();
return ImmutableSet.of() public static final
 return set.of();
 return {
 return interfaces() ;
 return HashSet.of();
 return interfaces; }
 return AbstractImmutableSet.of();
 return Collection.of();
 return interfaces;
 return List.of();
 return copyof();
 return IImmutableSet.of();
 return Collection.ImmutableSet.of();
 return ClassLoadingImmutableSet.of();
 return nil;
return ImmutableSet.of() public static void
 returns ImmutableSet.of();
 Return ImmutableSet.of();
return ImmutableSet.of() } }
return ImmutableSet.of() public static
 return interfaces);
 return ImmutableCollection.of();
return ImmutableSet::of();
return ImmutableSet().of();
 return ImmutableIterator.of();
 return ();
 return 0);
return ImmutableSet.of() public };
 return 0;
 return undefined;
 } }
return ImmutableSet.OF();
 }
