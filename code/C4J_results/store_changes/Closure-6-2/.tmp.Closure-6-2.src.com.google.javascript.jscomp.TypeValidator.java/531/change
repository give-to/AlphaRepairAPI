JSDocInfo info = n.getJSDocInfo();
 info=n.getJSDocInfo();
 Info info;
 Info info= n.getJSDocInfo();
JSDocInfo info = n.getInfo();
 info = info();
 JSDocinfo = n.getJSDocInfo();
 n.getJSDocInfo();
JSDocInfo  info = n;
 allowDupe = true;
 Node info = n.getJSDocInfo();
 Info info = n.info();
JSDocInfo  info = n.info;
 InfoInfo info=getJSDocInfo();
JSDocInfo  info;
 var info = n.getJSDocInfo();
 NodeInfo info=n.getJSDocInfo();
 JSDocInfoImpl info= n.getJSDocInfo();
 info = n.info();
 newVar = n. getParent ( ) ; } else { newVar = parent. getParent ( ) ; }
 newVar = n. getParent ( ) ; } else { newVar = parent. getParent ( ) ;
 newVar = n. getParent ( ) ; } else { newVar = parent. getParent ( ) ; } if (n) {
 Info info = getInfo();
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ; }
 NodeInfo info = n.getInfo();
 newVar = n. getParent ( ) ; } else { newVar = n. getParent ( ) ;
 NodeInfo info = n.info();
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ;
 newVar = n. getParent ( ) ; } else { newVar = n. getParent ( ) ; } if (n) {
JSDocInfo  info = n.info();
 allowDupe =
 newVar = n. getParent ( ) ; } else { newVar = n. getParent ( ) ; }
JSDocInfo  info = n.getJsDocInfo();
 NodeInfo info = n.getNodeInfo();
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ; } if (n) {
JSDocInfo info = n.getJSDocInfo(0);
 varType = n. getType ( ) ; } else { varType = null ;
 newVar = n. getParent ( ) ; } else { newVar = parent ; }
 Info info = n.getJSDocInfo);
 NodeInfo info = newVar.getJSDocInfo();
 varInfo = n. getInfo ( ) ;
 varType = n. getType ( ) ; } else { varType = null ; }
 varInfo = n. getVarInfo ( ) ;
 JCInfo info = n.getJSDocInfo();
 newVar = n. getVar ( ) ; } else { newVar = n. getVar ( ) ;
 JSDocInfo info = newVar.getJSDocInfo();
 newVar = parent ; JSDocInfoinfo = n.getJSDocInfo();
 info = getInfo();
 newVar = n. getParentNode ( ) ; } else { newVar = parent. getParentNode ( ) ;
 Info info = n.getInfo();
JSDocInfo info =  parent.getJSDocInfo(n);
 JSDocInfo = n.getJSDocInfo();
 varType = n. getType ( ) ; } else { varType = null ;
 newVar = n ; JSDocInfoinfo = n.getJSDocInfo();
 varType = n.getType(); } else { varType = null ; }
 varType = parent.getType(); Info info= n.getJSDocInfo();
 var info = n.getJSDocInfo);
 info = n. getInfo ( ) ; } else { info = parent ; }
 varInfo = n.getJSDocInfo();
 allowDupe = true; }
 newVar = n. getVar ( parent ) ; } else { newVar = n. getVar ( parent ) ;
 newVar = n. getParentNode ( ) ; } else { newVar = parent. getParentNode ( ) ; }
JSDocInfo info = n.getJSDocInfo(); } else { info = n ; }
 DocInfo info= n.getJSDocInfo();
 newVar = n. getParent ( ) ; } else { newVar = parent ;
 newVar = n. getParent ( ) ; } else { newVar = n ; }
 newVar = parent. getVar ( ) ;
JSDocInfo  info = newType;
 newVar = parent. getVar ( variableName ) ; } else {
 newVar = parent. getVar ( variableName, newType ) ;
JSDocInfo info = n.getJSDocInfo(); } else { info = parent ; }
 newVar = parent. getVariable ( variableName ) ;
 newVar = n. getParent ( ) ; } else { var = n ; }
 varType = n. getType ; } else { varType = null ; }
 varType = n. getType ; } else { varType = newType ; }
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ; } if (newVar)
 info = n. getInfo ( ) ;
 varType = n. getType ( ) ; } else { info = parent ;
 info = parse(n);
 newVar = parent ; } JSDocInfoinfo = n.getJSDocInfo();
 allowDupe = true ; } else {
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ; if (n) {
 newVar = n. getParent ( ) ; } else { newVar = parent. getParent ( ) ; } if (n)
 info = n. getInfo ( ) ; } else { info = parent ;
JSDocInfo info = n.getJSDocInfo(); } else { info = n ;
 var info = n.getInfo();
 newVar = n. getParent ( ) ; } else { newVar = n. parent ( ) ;
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ; } if (n)
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ; } if (new) {
 newVar = n ; } JSDocInfoinfo = n.getJSDocInfo();
 varType = n.getType(); } else { varType = parent ; }
 NodeInfo info = n;
 newVar = n. getVar ( parent ) ; } else { newVar = n. getVar ( parent ) ; }
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ; } } else {
 newVar = n ; } else {
 Info info=getJSDocInfo();
 varInfo = parent.getVarInfo(); }
 newVar = n. getParent ( ) ; } else { newVar = n. getParent ( ) ; } if (parent)
 newVar = n. getParentNode ( ) ; } else { newVar = parent. getParent ( ) ;
 newVar = n. getParent ( ) ; } else { newVar = n. getParent ( ) ; } if (n)
 newVar = parent. getVar ( variableName ) ;
 newVar = n ; } else { newVar = parent ; }
 var info = n.getSourceInfo();
 varInfo = parent.getJSDocInfo(varName);
 newVar = n. getParent ( ) ; } else { newVar = parent. getParent ( ) ; } } else {
 newVar = parent ; JSDoc info= n.getJSDocInfo();
 varType = n. getType ( ) ; } else { varType = parent ;
 Info info = n;
 newVar = n. getParent ( ) ; } else { var = parent ; }
 var = parent. getVariable ( variableName ) ;
 varType = n. getType ( ) ; } else { info = parent ; }
 varType = n. getType ( ) ; } else { varType = parent. getType ( ) ; } } else {
 varInfo = parent. getJSDocInfo ( ) ;
JSDocInfo info = n.getJSDocInfo(); } else { info = parent ;
JSDocInfo info = n.getJSDocInfo(); } else { info = parent. info ;
 newVar = n. getParentNode ( ) ; } else { newVar = parent. parentNode ; }
 newVar = parent ; } JSDoc info= n.getJSDocInfo();
 newVar = n. getParent ( ) ; } else { newVar = n ;
JSDocInfo info = n.getJSDocInfo() ; allowDupe = true ;
 varInfo = varInfo ; info = n.getJSDocInfo();
 varInfo = parent.getJSDocInfo(); }
 newVar = n. getParent ( ) ; } else { newVar = n. getParent ( ) ; } } else {
 newVar = n. getParent ( ) ; } else { var = n ;
 varType = n. getType ( ) ; info = parent. info ;
 newVar = n ; JSDoc info= n.getJSDocInfo();
 varType = n. getType ( ) ; } else { allowDupe =
 NodeInfoInfo info = newVar.getJSDocInfo();
 NodeInfo info = n.getInfo(*);
 newVar = n. getParent ( ) ; } else { newVar = parent ; } } else {
JSDocInfo info = n.getJSDocInfo(parent); } else { info = n ; }
 Info = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(); } else { info = n. info ;
 if (n!= null) { info=n.getJSDocInfo();
 varType = n.getType(); Info info= n.getJSDocInfo();
 newVar = parent ; } else {
 varInfo = parent. getJSDocInfo ( variableName ) ;
 info = n. getInfo ( ) ; } else { info = n ;
 newVar = n. getParent ( ) ; } else { var = parent ;
 info = getInfo(n);
 NodeInfo info = parent;
 varInfo = parent.getJSDocInfo(); } else
 Info info = n.getSDocInfo();
 newVar = parent. getNewVar ( ) ;
JSDocInfo info = n.getJSDocInfo() || parent.getJSDocInfo();
 JSDocInfo _info = n.getJSDocInfo();
 Info info = n.getSourceInfo();
 NodeInfo info = parent.getNodeInfo();
 NodeInfo info = n.getNodeInfo(*);
 newVar = n. getParent ( ) ; } else { newVar = parent ; } else {
 varType = n.getType(); } else { varType = parent ;
 varInfo = parent.getType(); info=n.getJSDocInfo();
 newVar = n. getParent ( ) ; } else { newVar = parent. getParent ( ) ; final
 Info info = getInfo(n);
 info = n. getInfo ( ) ; if (info!= null)
 varType = parent.getType(); }
 varInfo = n. getJsDocInfo ( ) ;
 if (n!= null) info=n.getJSDocInfo();
 newVar = n. getGetProp ( ) ;
 varInfo = parent.getInfo(); info=n.getJSDocInfo();
 varType = n. getType ; } else { varType = null ;
 varType = n. getType ( ) ; } else { varType ; }
JSDocInfo  info = parent.getJsDocInfo();
JSDocInfo info = n.getJSDocInfo(parent);
 NodeInfo info = n.parent.getJSDocInfo();
 Info info = parent;
 info = parent. getJSDocInfo ( newType ) ;
 varInfo = n.getVarInfo(); }
 info = n. getInfo ( ) ; if (info == null)
 varType = n.getType(); } else { varType = null
 NodeInfoInfo info = n.getJSDocInfo();
 info = n. getSourceInfo ( ) ;
 newVar = n. getVar ( ) ;
 JSDocInfo info=getJSDocInfo();
 varInfo = (JSDocInfo)n.getJSDocInfo();
 newVar = n ; } else { var = n ; }
 newVar = n. getParent ( ) ;
 allowDupe = true
 newVar = n. getParent ( ) ; } else { newVar = parent ; } final
 info = parent. getJSDocInfo ( n ) ;
JSDocInfo info = n.getJSDocInfo(); } else { varInfo = n ; }
 JCSDocInfo = n.getJSDocInfo();
 Info info = n.getInfo(parent);
 Node info = n;
 var info = n.info();
 varInfo = parse(n);
 newVar = n. getVar ( variableName ) ;
 Info info = parent.getInfo(n);
 var info = parent.getInfo( );
 newVar = n. getParent ( ) ; } else { newVar = parent. getParent ( ) ; } {
 newVar = n. getParent ( ) ; } else { newVar = parent. getParent ( ) ; } final
 info = n.getJSDocInfoImpl();
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ; } final
JSDocInfo info = n.getJSDocInfo().get (0);
 newVar = n. getParent ( ) ; } else { newVar = n ; } final
 var = parent ; JSDoc info= n.getJSDocInfo();
 newVar = n. getParent ( ) ; } else { newVar = n. parent ; } final
 varInfo = n.getInfo(); }
 newVar = n ; } else { allowDupe =
 info = getInfo(parent);
 varInfo = parent.getJSDocInfo(); } else {
JSDocInfo info = n.getJSDocInfo(parent); } else { info = parent ; }
JSDocInfo info = n.getJSDocInfo(); } else
 Info info = n.getInfo(*);
 NodeInfo info = parent.getInfo();
 newVar = n. getParent ( ) ; } else { newVar = parent. parent ; } final
 var info = n.getInfo(*);
 newVar = n. getParentNode ( ) ; } else { newVar = parent ; } final
 newVar = n. getParent ( ) ; } else { var = n. parent ; } final
 NodeInfo info = getInfo(n);
 varInfo = parent.getJSDocInfo(varName); }
 varType = n. getType ; } else { info = parent ; }
 NodeInfo info = (Node) n.getJSDocInfo();
 newVar = n. getParentNode ( ) ; } else { newVar = parent. getParentNode ( ) ; final
 newVar = n. getVar ( ) ; } else { newVar = parent ; } final
 info = parent.getJSDocInfo(); } else
 var info = n.getSDocInfo();
JSDocInfo info = n.getJSDocInfo(); } else { varInfo = parent ; }
JSDocInfo info = n.getJSDocInfo(); if (info!= null)
 JSDocInfo info = newType.getJSDocInfo();
 info = n. getInfo(); info = info.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo() ; if (info) {
 info = (JSDocInfoImpl)n.getJSDocInfo();
 varInfo = (JSDocInfoImpl)n.getJSDocInfo();
 newVar = n. getParentNode ( ) ; } else { newVar = parent. getParentNode ( ) ; } final
 JCSDoc info = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(); if (info!= null) {
 JSDocInfoInfo info = n.getJSDocInfo();
 InfoInfo info = (Info) n.getJSDocInfo();
 varType = n. getType ( ) ; } else { varType = null ; } final
 newVar = n. getParent ( ) ; } else { newVar = n. parent ; } }
 newVar = n. getVar ( ) ; } else { newVar = parent. getVar ( ) ; } } {
 varInfo = NodeUtil.getInfo(n.getJSDocInfo();
 newVar = n. getParent ( ) ; } else { newVar = parent ; } }
 newVar = n. getVar ( parent ) ; } else { newVar = n. getVar ( parent ) ; final
 varInfo = parent.getVarInfo(); } else
 varType = n. getType ( ) ; } else { varType = null ; final
 varType = n.getType(); } else { varType =
 JSDocInfo info = parent;
 newVar = n. getParent ( ) ; } else { var = n ; } final
 newVar = n. getVar ( ) ; } else { return ; }
JSDocInfo info = n.getJSDocInfo(); if (info == null) {
 newVar = parent. getVar ( n ) ;
 NodeInfo info = getInfo();
JSDocInfo info = n.getJSDocInfo(true); } else { info = n ; }
 newVar = n. getParent ( ) ; } else { return ; }
 NodeInfo info = n.info;
JSDocInfo info = n.getJSDocInfo(newType) ;
 info = parent.getInfo(); info=n.getJSDocInfo();
JSDocInfo  info = parent.getInfo();
 newVar = parent. getVariable ( variableName ) ; }
 var info = n.getSymbolInfo();
 varType = parent.getType();
 info = (JSDocInfo)n.getJSDocInfo();
 Info info = getInfo(parent);
 var info = getInfo(n);
 JSCCInfo info = n.getJSDocInfo();
JSDocInfo  info = n.getSource();
 info = n. getInfo(); info = n.getJSDocInfo();
 var = parent.getVar(); Info info= n.getJSDocInfo();
JSDocInfo  info = n.getSourceInfo();
 JSInfo info = n.getJSDocInfo();
 varInfo = parent.getInfo(); }
 newVar = n. getParentNode ( ) ; } else { newVar = parent ; } }
 newVar = parent. getVar ( variableName ) ; }
 varType = n.getType(); } else { varType = parent
 JSDocInfo jinfo = n.getJSDocInfo();
 var info = parent.getInfo(n);
 newVar = n. getParent ( ) ; } else { var = n. parent ; } }
 info = n.getJSDocInfos();
JSDocInfo info = n.getJSDocInfo(parent); if (info!= null) {
JSDocInfo info = n.getJSDocInfo(true); } else { info = parent ; }
 info = parent.getInfo();
 info(parent);
JSDocInfo info = n.getJSDocInfo(false); } else { info = n ; }
 varType = parent.type; Info info= n.getJSDocInfo();
 varInfo = parent.getVarInfo ( ).getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(parent); } else { info = n ;
JSDocInfo  info = parent.info;
 DocInfo = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(); } if (parent) {
 NodeInfoInfo info = n;
JSDocInfo info = n.getJSDocInfo(); } else { varInfo = n ;
 JCSDocInfo info=getJSDocInfo();
 info = n. getInfo ( ) ; } else
 varInfo = (JSDoc) n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo() ; if (info == null) return null;
 NodeInfoInfo info = n.info;
 Info info = parent.getInfo();
JSDocInfo  info = n.getInfo (parent);
 InfoInfo info = (InfoInfo)n.getJSDocInfo();
 info = parent.info();
 NodeInfo info = (Info) n;
 JSDocInfo ninfo = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo() || parent.getInfo();
 NodeInfo info = newType;
 NodeInfoInfo info = newType;
JSDocInfo info = n.getJSDocInfo(parent); } else { info = parent;
 varInfo = parent.getScope ( ).getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(); if (info == null) { }
JSDocInfo info = n.getJSDocInfo() &&! allowDupe;
 JSDocInfoImpl info;
 if (parent!= null) {info = n.getJSDocInfo();
 NodeInfoInfo info = parent;
 var info = n.getInfo(parent);
 var info = parse(n);
 if (n!= null) { Docinfo = n.getJSDocInfo();
 varInfo = NodeUtil.getInfo()n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(); if (info == null)
JSDocInfo info  = n.getJSDocInfo(); }
 JSSDocInfo info = n.getJSDocInfo();
 var info = getInfo();
 info = n.getSDocInfo();
 varInfo = varInfo ; info = var.getJSDocInfo();
 varInfo = parent.getJsModuleInfo(); }
 var info = n.info(*);
 var.input = parent;
 JSDocInfo(info)=n.getJSDocInfo();
 newVar = n. getVar ( variableName ) ; }
JSDocInfo info = n.getJSDocInfo(parent); }
JSDocInfo info = n.getJSDocInfo() ; allowDupe = true
 JCMethodInfo info=n.getJSDocInfo();
 if (n!= null) { Nodeinfo = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(parent); if (info!= null)
 info = n. getInfo ( ) ; info = null ; }
 newVar = parent. getVar ( ) ; }
 JSDocInfoImplImpl info= n.getJSDocInfo();
 newVar = parent. getVar ( variableName ) ; } {
JSDocInfo  info = parent.info();
 varInfo = (JSDoc) var.getJSDocInfo();
 newVar = parent ; JSDocInfo _info = n.getJSDocInfo();
 varInfo = parent; Node info = n.getJSDocInfo();
 NodeInfo info = parent.info;
 newVar = parent. getVar ( variableName ) ; } }
 varType = n.getType(); } else { varType ;
 var = parent. getVariable ( variableName ) ; }
 Node info = parent;
 InfoInfo info = n.info.getJSDocInfo();
 newVar = parent ; } Info info= n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(newType); }
 NodeInfo info;
 newVar = parent ; JSDocInfo jinfo = n.getJSDocInfo();
 info(n);
 Info info = info();
 NodeInfo info = n.parent().getJSDocInfo();
 Info info = info(n);
 JSDocInfo n.getJSDocInfo();
 JSDocInfo* info= n.getJSDocInfo();
JSDocInfo  info = n.getJsDocInfo(); }
 varType = parent ; } Info info= n.getJSDocInfo();
 newVar = parent. getVariable ( variableName ) ; final
 JSCCallInfo info=n.getJSDocInfo();
 newVar = parent ;
 info = parent.getInfo(); info *= n.getJSDocInfo();
 allowDupe = true ; final
 JSDocInfo(info=n.getJSDocInfo();
 SourceInfo info;
JSDocInfo info = n.getJsdocInfo();
 varType = null;
 NodeInfoInfoInfo info = n.getJSDocInfo();
JSDocInfo  info = sourceInfo;
 var info=getJSDocInfo();
 NodeInfo info = nodeInfo;
 varType = parent.type;
 JSDocInfo n.info = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo() ; if (!info) {
 NodeInfoInfo info = n.info.getJSDocInfo();
 info = (info);
 InfoInfo info=n.getJSDocInfo();
 NodeJSDocInfo info= n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(parent); if (info == null)
 newVar = n ;
JSDocInfo info = n.getJSDocInfo() || parent.info;
 JSDocInfo jsinfo = n.getJSDocInfo();
 JSDocInfo info = nn.getJSDocInfo();
 varType = parent ; Info info= n.getJSDocInfo();
 JCSDocInfo info=n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo() ; if (info!= null) { }
JSDocInfo info = n.getJSDocInfo() ; } else { info = parent. info();
JSDocInfo info = n.getJSDocInfo(parent.getName() ) ;
 JSDocInfo info = pn.getJSDocInfo();
 JSDocInfoImpl(info)=n.getJSDocInfo();
 info = parent. getJSDocInfo ( ) ; }
 info = info(n);
JSDocInfo info = n.getJSDocInfo(parent, variableName);
 newVar = n ; } else { final
 NodeInfo info = (Info) parent;
 varInfo(parent);
JSDocInfo info = n.getJSDocInfo(true); }
 varInfo(n);
 var.getScope();
JSDocInfo info = n.getJSDocInfo(newVar); }
JSDocInfo info = n.getJSDocInfo(parent, newType);
 newVar = parent ; } else { final
JSDocInfo info = n.getJSDocInfo(this); }
JSDocInfo info = n.getJSDocInfo() || parent.info();
JSDocInfo info = n.getJSDocInfo(0); }
 JSDocInfo mjinfo = n.getJSDocInfo();
 allowDupe = true ; } final
 JSDocInfoImpl.info=n.getJSDocInfo();
 info = parent.info(); } info= n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(). get ( ) ;
JSDocInfo  info = n.getJSDocInfo());
JSDocInfo info = n.getJSDocInfo() ; info = parent.info();
 NodeInfo = n.getJSDocInfo();
 varInfo=getJSDocInfo();
 info = info(parent);
 String info = getInfo();
JSDocInfo info = n.getJSDocInfo(parent.getPathInfo()));
 NodeInfo info = parent.info = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(false); }
 TreeInfo = n.getJSDocInfo();
 info = parse(parent);
 newVar = parent ; }
JSDocInfo  info = n.getInfo(); }
JSDocInfo info = n.getJSDocInfo().getFirst ( ) ;
 allowDupe = true ; } {
JSDocInfo info = n.getJSDocInfo(parent.getName()));
 JSDocInfo w.info = n.getJSDocInfo();
 TreeInfo info=n.getJSDocInfo();
 InfoInfo info = parent;
 DocInfo info;
 JSDocInfo(Info info= n.getJSDocInfo();
 newVar = n ; }
JSDocInfo info = n.getJSDocInfo() ; } else {
 DocInfoInfo info=n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo().getFirst(0);
JSDocInfo info = n.getJSDocInfo() ; allowDupe =
JSDocInfo info = n.getJSDocInfo(parent.getPath()));
JSDocInfo info = n.getJSDocInfo(parent.getPath());
 info = (parent);
 if (n!= null) { varinfo = n.getJSDocInfo();
 info = parent.info(); info *= n.getJSDocInfo();
JSDocInfo  info = n.getInfo());
 newVar = parent ; JSDoc infoinfo = n.getJSDocInfo();
 if (n!= null) { Infoinfo = n.getJSDocInfo();
 varType = parent.getType(); #info = n.getJSDocInfo();
 JSTree info= n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(parent, sourceName);
 InfoInfo info = n;
 var.setScope();
JSDocInfo info = n.getJSDocInfo(parent.getPathInfo());
 newVar = n ; JSDoc infoinfo = n.getJSDocInfo();
 info = ngetJSDocInfo();
 JSCSourceInfo info= n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo() || newType;
 info = parse();
JSDocInfo info = n.getJSDocInfo(parent, varName);
 newVar();
 varInfo.getJSDocInfo();
JSDocInfo  info = sourceInfo();
JSDocInfo  info = input;
 debug(n);
 var.getType();
 Info info = var.getJSDocInfo();
 InfoImpl info;
 JSSDocInfo _info = n.getJSDocInfo();
 if (n!= null) _info = n.getJSDocInfo();
 debug(parent);
JSDocInfo info = n.getJSDocInfo(); else
 var = parent;
 varType = parent.type; #info = n.getJSDocInfo();
 if (parent)
 String info = parent;
 info = n);
 if (parent!= null) _info = n.getJSDocInfo();
 Doc info = n.getJSDocInfo();
 parent.getJSDocInfo();
JSDocInfo info = n.getDescription();
JSDocInfo info = n.getJSDocInfo() || null;
 Info info = node.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo( ) ; if (info!= null);
 var = n;
JSDocInfo info = n.getJSDocInfo(true);
JSDocInfo  = info;
JSDocInfo info = n.getJSDocInfo(parent, variableName); }
 info = var.getJSDocInfo();
 varType.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(); } else { } else
 newVar = parent ; } Docinfo = n.getJSDocInfo();
 n.next();
JSDocInfo info = n.getJSDocInfo() || { } ;
JSDocInfo Info info;
 info = child.getJSDocInfo();
 info = node.getJSDocInfo();
 info n.getJSDocInfo();
 return ; }
JSDocInfo info = n.getJSDocInfo(parent, parent); }
 JSDoc infoinfo = n.getJSDocInfo();
 JSDoc_info = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo() - 1;
 info := info();
JSDocInfo info = n.getJSDocInfo(null);
 var.getJSDocInfo();
 assert n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(this);
JSDocInfo info = n.getJsDocInfo());
 var.init();
JSDocInfo info = n.getJSDocInfo() || parent;
JSDocInfo  info; }
 InfoInfo info;
JSDocInfo info = n.getType();
 JSDoc.info = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(variableName); }
 node.getJSDocInfo();
 assert parent.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo(varName); }
 JInfoinfo = n.getJSDocInfo();
JSDocInfo info = n.getJSDocInfo() - parent;
 debug();
 info=getJSDocInfo();
 info info;
 try { final
 debug(_);
 Node info;
 Tree info=n.getJSDocInfo();
 (break);
 assertFalse();
 assert();
 return var;
 assertTrue();
 JSDinfo = n.getJSDocInfo();
 debug(*);
JSDocInfo info = n.getJSDocInfo() } else
 String info;
 checkType();
 JSHinfo = n.getJSDocInfo();
 try {
 info info= n.getJSDocInfo();
 checkParent();
JSDocInfo  info();
JSDocInfo info = n; }
 return var };
JSDocInfo info = n.src;
 var info;
JSDocInfo info  = parent
JSDocInfo info = n.Info();
 final
JSDocInfo info ; else
JSDocInfo info = n; else
JSDocInfo info  = [];
JSDocInfo info  = null
JSDocInfo  info);
JSDocInfo info = n.;
 info :=n.getJSDocInfo();
 info=(n.getJSDocInfo();
 info=$n.getJSDocInfo();
 try {}
 } {
 } }
 static
JSDocInfo info := n.getJSDocInfo();
JSDocInfo info: n.getJSDocInfo();
