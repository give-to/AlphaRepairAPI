 case Token.POS: return "+";
 Token.POS: return "+";
 case Token.NEG: case Token.POS: return "+";
 case Token.NEG: return "return "+";
 case Token.NEG: return "+"+";
 case Token.COMPOS: return "+";
 case Token.NEG;
 case Token.NEG: return "+"; caseToken.POS: return "+";
 case case Token.POS: return "+";
 case Token.NEG: case Token.COMPOS: return "+";
 case Token.NEG: return "+";return "+";
 case Token.GE: return "+";
 case Token.NEGPOS: return "+";
 case Token.NEG: return "+;
 case Token.NEG: case Token.GE: return "+";
 case Token.NEG: return "+";
 case Token.NEG: return "+;return "+";
 case Token.GE: return "+;
 case Token.ASSIGN_POS: return "+";
 case Token.NEG: return "+-";
 case Token.ADD: return"+";
 case Token.Token.POS: return "+";
 case Token.NEG: return "*=";
case Token.POS: return "--";
 case Token.NEG: return "+ case Token.POS: return "+";
case Token.POS: return "+" ; case Token.NEG: return "+;
 case Token.NEG_POS: return "+";
 case Token.GE: return "+"+";
 case Token.MUL:return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.NEG: return "-" ;
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.ADD: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.ADD: return "-";
 case Token.NEG: return "+=";
 case Token.NEG: return "-"+"+";
 case Token.NEG: return "+*";
 case Token.NEG: return "+|"+";
case Token.POS: return "+" ; case Token.NEG;
 case Token.NEG: return "--";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.NEG:
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.NEG: return -" ;
 case Token.NEG: return "+"; case Token.POS:
 case Token.NEG: case "+: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.NEG: return "+" ;
 case Token.NEG: return "~" ; case Token.POS: return "+" ; case Token.ADD: return "-";
 case Token.return "+";
 case Token.NEG: return "~" ; case Token.POS: return "+" ; case Token.NEG: return "-";
 case Token.NEG: return "+"=>"+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.ADD: return "+;
 case Token.NEG: case 0: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.ADD:
 case Token.NEG: return "~" ; case Token.POS: return "+" ; case Token.ADD: return "+";
 case Token.ADD: return "+"+";
 case Token.NEG: return "+";
 case Token.MOD: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.NEG;
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.ADD: -";
 case Token.NEG: case Token.XPOS: return "+";
case Token.POS: return "+" ; case Token.NEG: return "+";
 case Token: return"+";
 case Token.NEG: case -1: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.ADD: return "";
 case Token.NEG: return "+; case Token.POS: return "+; case Token.NEG: return "+;
 case Token.NEG: return "*"+";
 case Token.NEG:
case Token.POS: return "+" ; case Token.NEG:
 case Token.ADD: return "+"; case Token.POS: return "+";
 case Token.NEG: return "POS: return "+";
 case Token.ADD: return "+";
 case Token.NEG: return "~" ; case Token.POS: return "+" ; case Token.ADD:
 case Token.NEG: return "+; Token.POS: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+-";
 case Token.LE: return "+"; case Token.POS: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+";
 case Token.NEG: return "+; default: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.ADD;
 case Token.NEG: return "*";
 case Token.MOD:
 case Token.NEG: return "--=";
 case Token.NEG: return "~" ; case Token.POS: return "+" ; case Token.NEG:
 case Token.NEG: return "+~";
 case Token.REM: return "+";
 case Token.NEG:
 case Token.NEG: return "--";
 case Token.NEG: return "+; case Token.POS: return "+" ; case Token.ADD: return "+;
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.ADD: -;
 case Token.NEG: return "+-1";
 case Token.NEG: case Token.NPOS: return "+";
 case Token.NEG: return "^"+";
 case Token.NEG: return "*-*";
 case Token.NEG: return "<>"+";
 case Token.NEG: return +"+";
 case Token.NEG: return ">=";
 case Token.ADD: return "*="; case Token.NEG: return "*=";
 case Token.MOD: return "+";
 case Token.ADD: return "*="; case Token.NEG: return "+";
 case Token.IGN_MUL: return "+";
 case Token.POS.POS: return "+";
 case Token.NEG: return "~" ; case Token.POS: return "+" ; case Token.ADD;
 case Token.NEG: return "+*" case Token.POS: return "+";
 case Token.LE: return "+";
 case Token.NEG: return "+-"+"+";
 case Token.NEG: return "-; default: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "-";
 case Token.NEG: return "-";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; return "+" ;
 case Token.GE;
 case Token.EG: return "+;
 case Token.MOD: return "+"; case Token.POS: return "+";
 case Token.NEG: return "+&"+";
 case Token.NEG; caseToken.POS: return "+";
 case Token.NEG: return "*+: return "+";
 case Token.NEG: return "+-"; case Token.POS:
 case Token.NEG: return "+" ; case Token.POS;
 case Token.ADD: case Token.POS: return "+";
 case Token.GE: return ">";
 case Token.NEG: return "+" ; case Token.POS: return "*=";
 case Token.NEG: casePOS: return "+";
 case Token.ASSIGN_MUL: return "+";
case Token.POS: return "+" ; case Token.POS: return "+;
case Token.POS: return "+" case Token.NEG: return "+";
 case Token.GE: return ">=";
 case Token.MOD: return "~";
 case Token.NEG: return "<"+";
 case Token.ADD;
 case Token.ADD: return "*" ; case Token.ADD: return "+";
 case Token.IGNIGN_POS: return "+";
 case Token.NEG: return "+; case Token.POS: return "+" ; case Token.NEG:
 case Token.GE: break;
 case Token.NEG: case Token.ADD: return "+";
 case Token.NEG: return "+; case Token.POS:
 case Token.NEG: return \"+";
 case Token.NEG: return "+; case Token.ADD:
 case Token.IGN_ADD: case Token.POS: return "+";
 case Token.NEG: return "+"; case Token.ADD:
 case Token.NEG: return "*=";
 case Token.NEG: return "+"=="+";
 case Token.MOD: return "+"+";
 case Token.REM:
 case Token.NEG: return "+" ; case Token.POS: return "--";
 case Token.NEG: return 0;return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case "+" ;
 case Token.NEG: case Token.REPOS: return "+";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; case Token.OR:
 case Token.EG: return "+";
 case Token.ADD: return ">>="; case Token.NEG: return "+=";
 case Token.NEG: return "+; caseToken.POS: return "+";
 case Token.NE: return "+"+";
 case Token.ADD: return "*" ; case Token.NEG: return "*" ;
 case Token.NEG: return case Token.POS: return "+";
 case Token.NEG: case Token.NLPOS: return "+";
 case Token.NEG: return "+"+"+";
 case Token.GTE: return "+";
 case Token.ADD: return ">>="; case Token.NEG: return "+";
 case Token.NEG: return "~";
 case Token.NEG: case +: return "+";
 case Token.GE: return ">>";
 case Token.NEG: return -1;return "+";
 case Token.GE: return "-";
 case Token.NEG: return "+-"; case Token.POS;
 case Token.GE: return "return "+";
 case Token.ADD: return "*="; case Token.NEG: return "*-=";
case Token.POS:  return "+-"; case Token.NEG;
 case Token.NEG: return "+"-;
 return "+";
 case Token.GE: return;
 case Token.LE: return "+";
 case Token.MOD: return "%";
 case Token.ADD: return "*="; case Token.NEG: return "--=";
 case Token.GE:
 case Token.COMP:
case Token.POS: return "+"; return "+";
case Token.POS: return "+"; case Token.NEG: return;
 case Token.NEG: return "+"; return "~";
 case Token.NEG: return "+" ; case Token.POS: return "+" ; return "-";
 case Token.IGN: return "+"; caseToken.POS: return "+";
 case Token.OR: return "|" ; case Token.ADD: return "+";
 case Token.NEG: return "+" ; case Token.ADD;
 case Token.OR: return "|"; case Token.NEG;
 case Token.GTE: return "+;
 case Token.ADD: return "+;
 case Token.ADD:
 case Token.ASSIGN_LSH: return "+";
 case Token.MOD: case Token.POS: return "+";
 case Token.NEG: return "--return "+";
 case Token.DEC: return "+"+";
 case Token.NEG: return "*: return "+";
 case Token.NEG: return "+-";
 case Token.NEG: case "+": return "+";
 case Token.NEG: return +;
 case Token.NEG: case "GE: return "+";
 case Token.NE: case Token.POS: return "+";
 case Token.GE: return "+=";
 case Token.GT: return "+";
 case Token.COMMA:
case Token.POS: return "+"; case Token.Neg;
 case Token.NEG: case "+*: return "+";
 case Token.NEG: return "+';return "+";
 case Token.NEG: return "~=";
 case Token.MUL: case Token.POS: return "+";
 case Token.ADD: return "*="; case Token.NEG: return "*==";
 case Token.NEG: return "+" ; case Token.POS: return "--+";
 case Token.MIN: return"+";
 case Token.NEG: return "+" ; case Token.COMMA:
case Token.POS: return  "--" ; case Token.NEG;
 case Token.OR: return "|"; case Token.NEG:
 case Token.NEG: return "-"; caseToken.POS: return "+";
 case Token.NEG-POS: return "+";
 case Token.MOD: return;
 case Token.NEG: return "+" ; case Token.POS: return "+" ; return "+;
 case Token.NEG: return "--+";
 case Token.NEG: case -POS: return "+";
 case Token.EQ: case Token.POS: return "+";
 case Token.NEG: return "+; return "-";
 case Token.ADD: return "+ case Token.POS: return "+";
 case Token.NEG: return "*+";
 case Token.NEG: case!Token.POS: return "+";
case Token.POS: return "+"; case Token.DEC;
 case Token.GE: --;
 case Token.NEG: return "~" ; case Token.ADD;
 case Token.POS: return "+"; caseToken.POS: return "+";
 case Token.NEG_ADD: return "+";
 case Token.NEG: return "*";
case Token.POS: return "+" case Token.NEG: return "+-";
case Token.POS: return "+-";
 case Token.NEG: return -1; case Token.POS: return;
 case Token.NEG: return "~" ; case Token.POS:
 case Token.NE: return "+;
 case Token.OP:
 case Token.POS: case Token.POS: return "+";
 case Token.DEC;
 case Token.NEG: return -"; caseToken.POS: return "+";
 case Token.NEG: switch caseToken.POS: return "+";
 case Token.GEreturn "+";
 case Token.NEG+Token.POS: return "+";
 case Token.MUL:
 case Token.MOD: return "+;
 case Token.NEG: return "+" ; case Token.POS: return;
 case Token.GE: return";
 case Token.DIV: return"+";
 case Token.NEG: Token.POS: return "+";
 case Token.NEG|Token.POS: return "+";
case Token.POS: return "++";
case Token.POS: return  "--" ; case Token.NEG:
 case Token.GTE: return "return "+";
 case Token.NEG: return "+" ; return "";
case Token.POS: return "+"; return "+-";
case Token.POS: return  "+*" ; case Token.NEG;
 case Token.NEG.POS: return "+";
 case Token.DEC:
case Token.POS: return "+--";
 case Token.MOD: return";
 case Token.NEG: ifPOS: return "+";
case Token.POS: return "+"; case Token.DEC:
case Token.NEG: return "*" + 1;
 case Token.INCREMENT: return "+";
case Token.NEG: return "+" ; return "+;
 case Token.MOD: return "*";
case Token.POS: return "+" ; return "-";
 case Token.GE: ++;
 case Token.NEG Token.POS: return "+";
 case Token.ADD: return "*";
case Token.POS: return  "+*" ; case Token.NEG:
 case Token.NEG: return "+"; return "-";
 case Token.NEG: return "+;
case Token.NEG: return "+"; return "-";
 case Token.DEC: return "+";
case Token.POS: return "--+";
 case Token.MOD: return "+", Token.POS: return "+";
 case Token.NEG: case "POS: return "+";
 case Token.GE: return [];
 case Token.NEG, case Token.POS: return "+";
 case Token.NEG: return "+" ; return "+";
 case Token.NEG: return "*-*";
case Token.POS: return "+;
 case Token.NEG*Token.POS: return "+";
 case Token.NEG: return "--+";
 case Token.EG;
 case Token.NEG: return "~" ; case Token.BITOR:
 case Token.MOD: return "+"; Token.POS: return "+";
 case Token.NEG2: return "+";
 case Token.NEG: return "+" ; case Token.POS: return";
 case Token.NEG: return "~" ; case Token.BITOR;
case Token.NEG: return "+"; return "*";
 case Token.NEG: return "+return "+";
 case Token.MUL:
case Token.POS: return "*=";
 case Token.COMPACT:
 case Token.MOD: return [];
 return "+=";
 case Token.GE: return "+";return "+";
 case Token.POS: case Token.NPOS: return "+";
 case Token.NEG: case NoPOS: return "+";
 case Token.COMPOS:
 case Token.IGN: case Token.COMPOS: return "+";
 case Token.COMPOS: case Token.POS: return "+";
 case Token.GTE: return "+"+";
 case Token.NEG: return "+-";return "+";
 case MOD: return "+";
 case Token.NEG,Token.POS: return "+";
 case Token.ASSIGN_COMPOS: return "+";
 case Token.IGN_ADD: return "+";
case Token.POS: return "--" + 1;
 case Token.NEG:POS: return "+";
 case Token.NE;
 case Token.GTE;
 case Token.NEG: return "*POS: return "+";
 case Token.NEGATE: return "+";
 case Token.NOPPOS: return "+";
 case Token.Gt:
 case Token.NEG_Token.POS: return "+";
 case Token.NEG: if!Token.POS: return "+";
case Token.POS: return "+" ; case Token.PRIMARY;
 case Token.ADD+"+";
 case Token.NEG: return "*-1";
 case Token.NEG+1: return "+";
 case Token.EQUAL: return "+";
 case Token.POS: return "+",Token.POS: return "+";
 return "+";
case Token.POS: return "*";
case Token.POSITIVE: return "+";
 return "+;
 case Token.COUNT:return "+";
 case Token.NEG*+: return "+";
 case Token.ASSIGN.POS: return "+";
 case Token.ADD: return "return "+";
 case Token.NEG**: return "+";
case Token.POS: return "+" ; case Token.PRIMARY:
 case Token.IGN_POS: return "+";
case Token.POS: return;
 case Token.NEG_COMPOS: return "+";
 case Token.ADD=="+";
 case Token.GT: return;
 case TokenEG: return "+";
case Token.POS: return "+" ; case Token.POS-1;
 case Token.OP.POS: return "+";
 case Token.ADD_POS: return "+";
case Token.POS:  return "+"; case Token.REM:
 case Token.NEG: return "+"--return "+";
case Token.POS: return "+"; case "-";
 case Token.ADD "+"+";
 case Token.ADD: --;
 case Token.ADD.POS: return "+";
case Token.POS: return "+" ; return "+;
 case Token.Gt: return "+";
 case Token.PATTERN.POS: return "+";
case Token.POSEG;
 case Token.MIN;
 case Token.Gt;
 case Token.GTreturn "+";
 return "+-";
 case Token.IGNIGN_COMPOS: return "+";
 return "-";
 case Token.DIV=="+";
case Token.POS: return "+" ; case Token.NEG+;
 case Token.COMPARE.POS: return "+";
case Token.POSITIVE: return "+-";
 case GE: return "+";
case Token.POS: return "+" + 1;
 case Token.NPOS: return "+";
case Token.POS: return "+" ; return "";
case Token.POS: return "+" ; case Token.NEG,
 case Token.: return "+";
 return "";
 case Token.OP return"+";
 case Token.PUSH; caseToken.POS: return "+";
 case Token.GE++;
 case Token.SUB.POS: return "+";
 case Token.IGN++;
case Token.POS: return "---";
 return "*";
 return "--";
 case "+: return"+";
 return "~";
 return "++";
case Token.POSEG:
 case Token.NegativeToken.POS: return "+";
 case token: return"+";
 return "-";
 return "%=";
 case Token.COMPACT.POS: return "+";
case Token.POS:  case Token.NEG:
 case Token.NumericToken.POS: return "+";
case Token.POS:  case Token.NEG;
 case Token.ParenToken.POS: return "+";
 case "-" case Token.POS: return "+";
 case Token.OP_POS: return "+";
 case Token.XPOS: return "+";
case Token.POS: return "+" + -1;
 case Token.OR.POS: return "+";
case Token.ADD
 Token.MOD: return "+";
 case token.NEG.POS: return "+";
case Token.POSITIVE;
case  ">";
case Token.POS: return "+"*=";
 case Token.NLPOS: return "+";
 case token.GEreturn "+";
 case Token.SC.POS: return "+";
 case Token.GE: return "+return "+";
case Token.POS: return [];
 case -1:return "+";
case Token.POS: return "+" + "+";
case Token.POS: return "";
 case Token.neg-Token.POS: return "+";
case Token.POS: return "+" - 1;
 case Token.LEreturn "+";
case Token.POS: return "-";
case Token.POS: return "+" - "+";
 case Token.NEG: return "*-1;
 case Token.SubToken.POS: return "+";
case Token.POS: return 0;
 case Pattern.Token.POS: return "+";
 case POS:
case Token.POS: return";
 case Node.Token.POS: return "+";
 case Token.NEG::return "+";
 case Token.OPPOS: return "+";
 case Token.OPToken.POS: return "+";
 case Token.neg_Token.POS: return "+";
case  ">>";
 case "-" :"+";
case  "-";
 Token.GE: return "+";
 case 0:return "+";
case Token.POS: return "+"--";
 case "+";
 case Case Token.POS: return "+";
case  0:
 case "-"+"+";
 case Token.NToken.POS: return "+";
 case TokenNeg: return "+";
case Token.POS: return "+"+";
case Token.POSITION;
case  "+";
case Token.POS: return "+"*";
case  "==";
 default:
 return 0;
 return "";
 case Token.*Token.POS: return "+";
 return "+"+";
case Token.POSIX;
 case Number.Token.POS: return "+";
 case Token.POSToken.POS: return "+";
 case INC: return "+";
case Token.IN
case Token.POSIX:
case  0;
 case "=="+";
 return \"+";
 case Pattern:return "+";
case Token.POS:  --;
case Token.GE
 case PLUS: return "+";
 case Node.return "+";
 case --;
 return u"+";
 case Token:"+";
 case!Token.POS: return "+";
 case NE: return "+";
 case ""=="+";
 if case Token.POS: return "+";
 case ""=>"+";
 case Token::"+";
case Token.POS: return "+"s";
 case *Token.POS: return "+";
case  Negative:
 return '"+";
case  "";
case Token.NE
 case -Token.POS: return "+";
case Token.Neg
case Token.POS: return "+"++";
 return ";
 case \.Token.POS: return "+";
 break;
 case "return "+";
 switch;
 return "-;
 token.POS: return "+";
 Case.POS: return "+";
 return "return "+";
 switch:
 case.POS: return "+";
 case TokenPOS: return "+";
 case Node.POS: return "+";
 case --return "+";
 case :return "+";
 case -return "+";
 case Number.POS: return "+";
 case Text.POS: return "+";
,
 case
 or
 case Symbol.POS: return "+";
case Token.POS': return "+";
case Token.POS(): return "+";
case Token.POS.: return "+";
