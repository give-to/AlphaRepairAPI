 gval.setTime(date);
gval.setTime(date, field);
 gval.set(date);
gval.setTime(date, field, false);
gval.getTime();
gval = date;
gval.setTime(date); Date.
gval.setTime(date, field, true);
 gval. setTime(date); modify(gval, field, false); return gval.getTime();
 gval. setTime(date); modify(gval, field, true); return gval.getTime();
gval.setTime(date); DateUtils.
 gval. setTime(date); modify(gval, field, true);
gval.setTime(date, field); DateUtils.
 gval. setTime(date); modify(gval, field, true); return gval;
gval.setTime(date, field, false); DateUtils.
 gval. setTime(date); modify(gval, field, false); return gval;
gval.setTime(date, field, true); DateUtils.
gval.setTime(date, field); DateHelper.
 DateUtils.
 gval. setTime(date); modify(gval, field, false);
gval = DateUtils.
 gval. setTime(date); modify(gval, field);
gval.setTime(date, field, 0); DateUtils.
 gval.setDate(date, field);
 gval.setDate(date, field, false);
 gval. setTime(date); modify(gval, field, true); return gval.time();
 gval. setTime(date); modify(gval, field, false); return gval.time();
 gval. setTime(date); modify(gval, field, true); return gval.Time();
 if (date!= null)
 if (date!= null) {
 if (date == null) { return null; }
 gval.setDate(date, field, true);
 modify(gval, date, field, true);
gval.setTime(date, field); Date.
 gval. setTime(date); modify(gval, field, true); } else {
 gval. setTime(date); modify(gval, field, true); return gval();
 gval.setDate(date);
 return gval. getTime ( date, field ) ; } else { gval = Calendar. getInstance ( date, field ) ;
 gval. setTime(date); modify(gval, field, false); return gval();
gval. setTime ( date ) ; DateHelper.
 gval.setCalendar(date);
 Date(gval).setTime(date);
gval.setTime(date, field, false); DateHelper.
 gval. setTime(date); modify(gval, field, false); } else {
 if (date == null) { return null }
 if (date!= null) { gval.setTime(date);
 gval. setTime(date); modify(gval, field, true); return null;
 if (date!= null) gval.setTime(date);
gval.setTime(date, field, true); DateHelper.
 gval.getDate().setTime(date);
 gval. setTime(date); modify(gval, field, true); return gval.getTime(); }
gval.setTime(); Date.
 gval. setTime(date); modify(gval, field, false); return gval.getTime(); }
 gval.add(date);
 gval.setTime(date, field, false);
gval.setTime(date, field); Calendar.
 Date date = date; gval.setTime(date);
 gval.setTime(date;
gval = trunc
 gval.setTime(date);;
gval.setTime(date); Calendar.
 gval. setDate ( date ) ; return gval. getTime();
 gval.getTime().setTime(date);
 modify(gval, date, false);
gval.setTime(date, field, 0);
gval.setTime(date, field, 0); DateHelper.
 modify(gval, date, - 1);
 Date gval = Date. getInstance(); gval.setDate(date);
gval.setTime(date); DateModifier.
 return gval.getTime(); DateUtils.
 modify(gval, date, field, false);
 return gval. getTime ( date ) ; } else { gval = Calendar. getInstance ( field ) ; } return gval =
 gval.setDateTime(date);
 return gval. getTime ( date, field ) ; } else { gval = Calendar. getInstance ( date, field ) ; }
 gval. setTime(date); modify(gval, field, false); return gval.getTime(); *
 gval. setTime(date); modify(gval, field, true); return gval.getTime(); *
 if (date == null) { return }
 return gval. getTime(); } else { gval = Calendar. getInstance ( field ) ; } return gval =
gval.setTime(date, field); Modifier.
 gval. setTime(date); modify(gval, field, true); return gval.getTime());
 return gval. getTime ( date ) ; } else { gval = Calendar. getInstance ( date ) ; } return gval =
 if (date == null) return null;
 return gval. getTime(); } else { gval = Calendar. getInstance ( field ) ; } return gval ;
 return gval. getTime ( date ) ; } else { gval = Calendar. getInstance ( field ) ; } return gval &&
 truncate(date);
gval.setTime(date, field); DateMath.
gval.getTime(); Date.
gval.setTime(date, field); DateModifier.
 gval.setDay(date, field);
 gval. setTime(date); modify(gval, field, true); return gval; }
 date = date.getTime(); gval.setTime(date);
 return gval. getTime ( date ) ; } else { gval = Calendar. getInstance ( field ) ; } return gval ;
 gval. setDate ( date ) ; if (field!= 0)
 gval. setTime(date); modify(gval, field, false); return gval.time;
 gval. setTime(date); modify(gval, field, true); return gval.time;
 gval. setTime(date); modify(gval, field, true); } else
 gval. setTime(date); if (field == 0)
gval.setTime(date); Modifier.
gval = DateModifier.
gval.setTime(date, field, false); Calendar.
 return gval. getTime ( date ) ; } else { gval = Calendar. getInstance ( field ) ; } return null;
 gval. setTime(date); modify(gval, field, false); return gval; }
gval.setTime(); DateUtils.
 modify(date, field, true);
 gval.setTime(date); setDate(date);
 Date gval = Date.getInstance(date);
gval.setTime(date); DateMath.
 modify(gval, date, true);
 return gval. getTime(); } else { gval = Calendar. getInstance ( field ) ; } return gval &&
 gval. setDate ( date ) ; if (field == 0)
 gval. setTime(date); if (field!= 0)
 gval.init(date);
 gval.setTime = date;
 gval = gval.setTime(date);
 * gval.setTime(date);
 return gval. getTime ( date, field ) ; } else { gval = Calendar. getInstance ( field ) ; }
 Date gval = gval; gval.setTime(date);
 gval. setTime(date); modify(gval, field, true); } else,
 gval.setTime(date, field);;
 gval.setDate(date, true);
 return gval.getTime().setTime(date);
 gval. setTime(date); modify(gval, field, false); } else
 gval.setTime()(date);
 gval. setTime(date); modify(gval, field, true); } *
 Date gval = gval.setTime(date);
 Date dval = (Date) date; gval =
 gval. setTime(date); modify(gval, field, true); *
 return gval. getTime ( date, field ) ; } else { gval = Calendar. getInstance ( date ) ; }
 Date dval = gval; dval.setTime(date);
 if (date == null) return;
 gval.setTime(date, field;
 if (date == null) {
 if (date instanceof Date) {
 Date date = gval.setTime(date);
 Date dval = (Date) date; Date.
 gval. setTime(date); modify(gval, field, false); } *
 gval. setTime(date); modify(gval, field, false); } else,
 if (date!= null) { return gval.setTime(date);
gval.setTime(date) ; return gval. getTime ( ) ;
 gval. setTime(date); modify(gval, field); *
 return truncate(date);
 if (date == null) { return gval.setTime(date);
 Date gval = Calendar.getInstance(date);
 Date dval = date; DateUtils.
 return gval. getTime ( date, field ) ; } else { gval = Calendar. getInstance ( date, field ) }
 Date dval = Date.getInstance(date);
 gval.setTime() date;
 gval.setTimezone(date);
 Date gval = gval.add(date);
gval.setTime(date, - 1);
 Date gval = gval.addHours(date);
 if (date == null) return null; calendar.setTime(date);
 gval.setTimeZone(date);
 Date date = date.clone(); gval.setTime(date);
 Date dval = DateUtils.
 Date(gval.setTime(date);
 Date dval = (Date) date; DateHelper.
 Date dval = (Date) date; Calendar.
 gval. setTime(date); modify(gval, field, false); *
gval.setTime(date, field, 0, 0); DateHelper.
 Date date = date.clone(); date.setTime(date);
 Date dval = gval.setTime(date);
 return gval. getTime ( date ) ; } else { gval = Calendar. getInstance ( field ) ; } *
gval.setTime(date, field, false); Date.Utils.
 Date dval = (Date) DateHelper.
 Date dval = new Date(date);
 Gval.setTime(date);
 Date dval = gval.add(date);
 Date date = (Date) gval.setTime(date);
 return gval. getTime ( date ) ; } else { gval = Calendar. getInstance ( field ) ; } return null +
 return gval.setTime(date);
gval.setTime(date, field, false); DateUtUtils.
 Date dval = Date.parse(date);
 gval. setTime(date); modify(gval, field, true));
 gval.setTime(field,date);
 gval.setDayOfMonth(date);
gval = Modifier.
 if (date == null) { return };
 gval.setTime(date); truncate(date);
 gval. setDate ( date ) ; if ( field == - 1 ) {
 gval. setDate ( date ) ; if ( field!= 0 ) {
 Date gval = gval.withTime(date);
 return gval.add(date, field);
 gval.setDate(date, field); *
 Date gval = gval.newInstance(date);
 return gval.getTime(date, field);
 Date dval = date. clone ( ) ; Date.
 return gval.getTime(date);
 Date rval = new Date(date);
 if (date!= null) calendar.setTime(date);
 Date gval = Date.getInstance(date;
 Date gval = gval.addDays(date);
 Date rval = Date.parse(date);
 gval = gval.add(date);
 gval. setTime(date); modify(gval, field));
 gval.date = date;
 date.setTime(date);
 gval.setTime(0,date);
 if (date) { gval.setTime(date);
 gval.setTime(date), field;
 Date.parse(date);
gval.setTime(date, field, false); DateUtils.tr
 gval.setTime(gval.date);
 if (date == null) { return
gval.setTime(date) ; return gval.getTime(); Date.
 if (date instanceof Date)
 gval.setHours(field);
 return gval; gval.setTime(date);
 gval.setTime(this.date);
 if (date == null) { }
 Date dval = DateModifier.
 Date date = date; Date gval.setTime(date);
 gval.getInstance().setTime(date);
 Date gval = gval.getTime().setTime(date);
 Date dval = gval.addHours(date);
 Date gval = date;
 gval. setTime(date); modify(gval, true);
gval.getTime(date);
 Date gval = gval.createInstance(date);
 if (date == null) return
 return gval. getTime ( date, field ) ; } else { gval = Calendar. getInstance ( ) ; } *
 Date gval = date.getTime ( );
gval.setTime(date); *
gval.setTime(); DateHelper.
 Date date = (Date) DateHelper.
gval.setTime(date); Modify.
 Date date = DateUtils.
 return gval. getTime ( date ) ; } else { gval = Calendar. getInstance ( field ) ; } } *
 gval.setTime(); date.add(date);
 return gval. getTime ( date ) ; } else { gval = Calendar. getInstance ( field ) ; } } ;
 gval.setTimeOfDay(date);
 Gval(gval).setTime(date);
 g.setTime(date);
 Date dval = gval.addDays(date);
 gval.setTime(date); setDay(date);
 gval.setDate(date);
 gval.setDate(date, field, false); *
 modify(date);
 date = date.getTime(); Date gval.setTime(date);
 Date dval = date; dval =
 modify(date, field, false);
 Date dval = date; DateHelper.
 Date fval = gval.setTime(date);
gval.setTime(date); return
 DateHelper.
 gval.setTime().add(date);
 modify(gval, field, true);
 gval.setTime(date, 0;
 gval.date().setTime(date);
gval.setTime(date) ; return gval. getTime ( ) +
 gval.setDate(date); *
 date.set(date);
 Date ddate = gval.date().setTime(date);
 Date rval = DateUtils.
 gval.setDate(date, field, true); *
gval.setTime(date) ; return gval.getTime(); } return
gval.setTime(date) ; Date date = DateUtils.
 gval.setDate(date, field, 0); *
 if (date == null) return null; date.setTime(date);
gval = DateHelper.
gval = Date.
gval.setTime(date, field, true); DateUtils.tr
gval = DateModification.
 Date.days(date);
 date(date, field);
gval. clear ( ) ;
gval.setTime(date) ; Calendar.getInstance().
 modify(gval, date, - field);
 return gval.getTime(field, false);
 gval.setTime(date, date;
gval.setTime(date) ; gval.getTime(); Date.
 gval.cal.setTime(date);
 gval.setDay(date, field); *
 Date dval = gval.date().setTime(date);
 gval.create ( );
 Date gval = Date. getInstance().getTime(); * *
 gval.setTime(date, );
 modify(gval, -1);
 return gval.setTimeZone(tz);
gval = Modify.
 Date dval = DateHelper.
 if (field!= 0)
 gval.initDate(date);
 Date gval =
 if (gval)
 if (date == null)
 Date date = date; date.setTime(date);
 Date date = date;
 Date d = gval.setTime(date);
 Date dval = Date.from(date);
 gval.getTime() = round(date);
gval.setTime(date, field, null);
 gval.initTime(date);
 Date gval = Date. getInstance(field, date); *
 modify(gval, -field);
gval.setTime(date) ; CalendarUtils.
gval = DateModifyHelper.
gval.setTime(date) ; return DateUtilsUtils.
 gval.setTime(date, field, false); *
 Date rval = date;
 gval.setTime(date, field); *
 Date dval = date;
 Date gval = gval.date.setTime(date);
 date = date.clone(); date.setTime(date);
gval.clear (date);
 gval.getTime() = floor(date);
 Date gval = Date.parseDate(date);
 DateUtUtils.
gval.setTime(date) ; Date.Utils.
 if (field == 0)
gval.setTime(date) ; Date rval = DateHelper.
 date.add(date);
 return new Date(date);
 if (date!= null) cal.setTime(date);
 Date date = DateModifier.
 gval.create (date;
 DateTime gval.setTime(date);
 gval = gval.subsetTime(date);
gval.setTime(gval, date);
gval.setTime(date) DateUtils.
 Date rval = DateHelper.
 return gval.add(date);
gval.setTime(date) * DateUtils.
 if (!gval)
gval.setTime(date) ; gval.getTime(); Calendar.
 Date date = DateHelper.
gval.setTime();
 gval.init( );
 gval.init(date;
 gval.addHours(date);
 gval = gval.unsetTime(date);
 DateTimeUtils.
gval = Utils.
gval.setTime(date) ; gval.getTime(date);
 gval.date.setTime(date);
 gval.setDate(date, field, false));
gval.setTime(date) ; DateModifyHelper.
gval.setTime(date) ; ModifyUtils.
gval.setTime(date) ; DateModificationUtils.
 date = date;
gval.setTime(date) ; DateUtUtils.
gval.setTime(date) DateHelper.
 gval.setTime(0;
 gval.in(date);
gval.setTime(date.getTime());
gval.setTime(date) ; gval.getTime( ) =
 DateUtil.
gval.init(); Date.
 Date.now = date;
 Date rval = Date.
 Date gval = Date. getInstance().getTime(); * return
 gval += date;
gval.setTime(date) ; DateModifierUtils.
 DateUtilsHelper.
 Date dval = Date.
gval.setTime(date); Date
gval.setTime(date) ; Date date = DateModifier.
 return date.getTime();
gval.setTime(); date =
gval.getTime(); return
 Date.getInstance(date);
 date.setTime(0);
 calendar.setTime(date);
 gval.datetime.setTime(date);
gval.setTime(date) ; Date date = DateHelper.
 Date result =
 DateModifyHelper.
gval.setTime(jd, date);
 gval.update(date);
 if (modify)
gval.setTime(0, -1);
 Date(gval)
 DateModifier.
gval.setTime(date); date =
 date = date;
 Date gval = gval;.setTime(date);
 return date.toString());
 return date.getTime());
 DateMath.
gval.start();
 Date gval = gval; #setTime(date);
gval.setTime(date, 0);
 DateUtils.tr
 Date.create(date;
 gval.$setTime(date);
 setTime(date);
 return parse(date);
 date.setTime();
gval.getTime =
 Date.now().setTime(date);
 return date(date);
gval.setTime(date, true);
 date = null;
 if (modified);
 Date d = date;
 gval.unsetTime(date);
gval.setField
 DateTimeUtils.setTime(date);
 return (Date)
 modify(gval);
 Date.days = field;
 date = gval.setTime(date);
 DateBuilder gval.setTime(date);
 int field = field;
gval.setTime(date, false);
 return floor(date);
 return gval =
gval = date.
 Date gval.setTime(date);
 date = null;
 Date date =
gval.setTime(date, date);
 format(date);
 Date time =
gval.setTime(dateTime);
 return Date.
 return create(date);
gval.setTime(); return
 return(date);
 return (Date);
 setDate(date);
gval.getTime().
gval.setTime(0L);
 parse(date);
gval.getTime(),
gval.setTime(now());
 if (!modified);
 field = field;
(date);
gval.setTime(); *
gval.setTime(* date);
 gval.fsetTime(date);
gval.setTime(+1);
gval.setTime(date) *
 Date ret =
 Date res =
 if (!date);
gval.tr
 Date dval;
gval.setTime() *
 Date rval;
 Date date;
 return clone(date);
 * *
 int field;
 int i;
(UTC);
gval.set
 Date d;
 check(date);
 Date result;
gval.setTime(); Date
 gval().setTime(date);
gval.setTime() +
gval= new
gval.setTime(date) * return
 validate(date);
 * Gval.setTime(date);
(null);
gval.setTime(date) * *
 reset(date);
(this);
gval.setTime(Date).
 init(date);
 gval).setTime(date);
 Date.now.setTime(date);
 * return
gval.setTime(0);
gval.setTime(true);
 *
 geval.setTime(date);
 gvals.setTime(date);
gval.setTime(null);
gval.setTime(this);
