boolean offsetSet = false;
 offsetSet= false;
boolean  offsetSet ;
 boolean roundUp ;
 boolean roundUp = false ;
boolean offsetSet  = false
boolean offsetSet  = false ; boolean roundUp = false ;
 boolean round = false ;
 offsetSet;
boolean  offsetSet = false ; do {
 boolean roundUp = false ; boolean round = false ;
boolean  offsetSet = false ; if ( round ) {
 boolean offsetSet = false ; roundUp = false;
 boolean roundUp = offsetSet;
 boolean offset = false;
 boolean roundUp = offsetSet = false ;
 boolean offsetSet = false ; {
 int roundUp = false ; boolean offsetSet = false ;
boolean  offsetSet = false ; while ( true )
 boolean offsetSet = roundUp = false;
boolean offsetSet  = false ; boolean roundUp = false ; }
 boolean roundUp = false ; boolean offsetSet ;
boolean offsetSet =  false ; boolean roundUp = false ; do {
boolean  offsetSet = false ; if ( round )
 boolean roundUp = false ; boolean offsetSet = false ;
boolean offsetSet =  false ; boolean roundUp = false ; try {
 int roundUp = false ; boolean round = false ;
 boolean offsetSet = false ; }
boolean offsetSet  = false ; boolean roundUp = = false ;
 boolean offsetSet = roundUp == false;
 int roundUp = false ; boolean offsetSet = false ; int roundDown ;
 boolean roundUp = false ; boolean roundDown ;
 boolean offsetSet = false ; boolean roundUp |= false;
 boolean offsetSet ; roundUp= false;
boolean  offsetSet = false ; boolean round = false ;
 boolean roundUp = false ; boolean round = true ;
 boolean offsetSet = roundUp;
boolean  roundUp
 boolean offsetSet = offset == 0;
 boolean roundUp = offsetSet = false;
 boolean offsetSet = false; round=false;
boolean offsetSet = false ; boolean roundUp = offsetSet = false ;
boolean  offsetSet = false ; while ( true ) {
boolean offsetSet  = false ; boolean roundUp = false ; {
 boolean offsetSet = false ; try {
 offset = val.get(Calendar.DATE); offset = val.get(Calendar.MONTH);
 int roundUp = false ; boolean offsetSet = false ; int roundUp ;
boolean  offsetSet = false ; while true {
 boolean roundUp = false ; boolean round ;
 boolean roundUp = false ; boolean offsetSet=false;
 int offsetSet = false ; if ( round ) {
 boolean roundUp = true ; boolean round = false ;
 offset = val.get(Calendar.DATE) - 1 ; int roundUp = false ;
 offset = val.get(Calendar.DATE) - 1; offset = val.get(Calendar.MONTH);
boolean offsetSet  = false ; int roundUp = false ;
 int roundUp = false ; boolean offsetSet = false ; boolean roundUp = false ;
 boolean offsetSet = round=false;
 round=false;
boolean offsetSet  = false ; boolean roundUp = true ;
 int roundUp = false ; boolean offsetSet = false ; boolean round = false ;
 int offsetSet = false ; roundUp = false;
 offset = val.get(Calendar.DATE); offset = val.get(Calendar.TIME);
boolean offsetSet  = false ; if ( roundUp ) {
boolean offsetSet  = false ; boolean roundUp =! round ;
 boolean offsetSet = false ; int roundUp;
 boolean roundUp ; offsetSet= false;
 boolean offsetSet = false ; roundUp = true;
 int roundUp = false ; boolean offsetSet = false ; int round = 0 ;
 offset = val.get(Calendar.DATE) - 1 ; boolean roundUp = false ;
 int roundUp = false ; boolean roundUp_offsetSet = false;
 boolean roundUpOffsetSet= false;
 offset = val.get(Calendar.DATE); offset = val.get(Calendar.MONTH) - 1;
 int roundUp = false ; boolean offsetSet = false ; int offset = 0 ;
 boolean offsetSet = offset=false;
 int roundUp = false ; boolean offsetSet= false;
 offset = val.get(Calendar.DATE) - 1 ; int roundUp = - 1 ;
boolean  offsetSet = false ; } else {
 boolean roundUp = false ; boolean offset = false;
 offset = val. get ( Calendar.DATE ) - 1 ; offset = val. get ( Calendar.MONTH ) - 1 ;
 boolean roundUp =! round ;
 int roundUp = false ; boolean offsetSet = false ; boolean roundUp ;
boolean offsetSet  = false ; boolean roundUp = true ; }
 boolean roundUp = true ;
 boolean roundUp = = false ;
 boolean offsetSet ; boolean roundUpSet;
 boolean roundUp = false ; int offsetSet ;
 boolean offsetSet ; boolean roundUp= false;
 int roundUp = false ; boolean round = true ;
 offset = val.get(Calendar.DATE) - 1 ; int roundUp = true ;
 boolean roundUp = true ; boolean offsetSet = false ;
 int roundUp = false ; boolean offsetSet = false ; int roundDown = false ;
 int roundUp = false ; boolean offsetSet = false ; int roundUp = false ;
 int roundUp = 0 ; boolean offsetSet = false ;
 offset = val.get(Calendar.DATE) - 1 ; int roundUp ;
 int roundUp = true ; boolean offsetSet = false ;
 offset = val.get(Calendar.DATE) - 1 ; boolean roundUp = offset > 0 ;
 boolean round = true ;
 int roundUp = false ; int offsetSet = false ; boolean round = false ;
boolean  offsetSet = false ; while true ; {
 boolean roundUp = offset > 0 ;
boolean offsetSet =  false ; boolean roundUp = offset > 0 ;
boolean offsetSet = false ; boolean roundUp = offsetSet = true ;
 offset = val.get(Calendar.DATE) - 1; boolean round = false ;
 boolean offsetSet = roundUp == true;
boolean offsetSet =  false ; boolean roundUp = true ; do {
 int roundUp = false ; boolean offsetSet = false ; boolean roundUp = true ;
 offset = val.get(Calendar.DATE) - 1; offset = val.get(Calendar.TIME);
 boolean offsetSet = offset==false;
 int offsetSet = false ; while ( true )
boolean offsetSet = false ; if ( roundUp && offsetSet ) {
 offset = val.get(Calendar.DATE); offset = val.get(Calendar.MONTH, -1);
 boolean offsetSet =! round;
 offset = val.get(Calendar.DATE) - 1; offset = val.get(Calendar.MONTH)++;
 int roundUp = false ; boolean offsetSet = false ; boolean round = true ;
 offset = val.get(Calendar.DATE); offset = val.get(Calendar.DAY);
 offset = val.get(Calendar.DATE) - 1 ; if ( offset >= 0 ) { return ; }
 boolean roundUp = false, round = false ;
 offset = val.get(Calendar.DATE) - 1; offset = val.get(Calendar.DAY);
 boolean roundUp = roundUp = false ;
 int roundUp = false ; boolean offsetSet = false ; int roundUp = 0 ;
 boolean roundUp = false ; boolean roundUp_offsetSet = false;
 boolean offsetSet = false ; loop : {
 boolean offsetSet = offset > 0;
 offset = val.get(Calendar.DATE); offset = val.get(Calendar.UTC);
boolean  offsetSet = false ; int roundUp ; {
 offset = val.get(Calendar.DATE) - 1 ; if ( offset >= 0 ) { break ; }
 boolean roundUp = round = false ;
 offset = val.get(Calendar.DATE) - 1; offset = val.get(Offset.DAY);
 offset = val.get(Calendar.DATE) - 1; int roundUp = false
 int roundUp = false ; boolean offsetSet ; boolean round = false ;
 int roundUp = false ; boolean offsetSet |= false;
 offset = val.get(Calendar.DATE) - 1; offset = val.get(Calendar.MONTH); }
 offset = val.get(Calendar.DATE) - 1 ; int roundUp = offset > 0 ;
 offset = val.get(Calendar.DATE) - 1 ; int roundUp = false ; boolean offsetSet ;
 offset = val.get(Calendar.DATE) - 1 ; if ( offset >= 0 ) { offset ++ ; }
 boolean roundUp = true ; boolean offsetSet ;
 int roundUp = false ; boolean offsetSet = false ; } }
 int roundUp = false ; boolean offsetSet ; boolean roundUpSet ;
 int roundUp = false ; boolean _offsetSet = false;
 boolean offsetSet = true ; boolean roundUp=false;
 int roundUp = false ; boolean offsetSet = false ; int offset ;
 offset = val.get(Calendar.DATE) - 1 ; boolean roundUp = offset > - 1 ;
 offset = val.get(Calendar.DATE) - 1 ; if ( offset >= 0 ) { offset += 1 ;
 offset = val.get(Calendar.DATE) - 1 ; if ( offset >= 0 ) { continue ; }
 boolean offsetSet = false ; } }
 offset = val.get(Calendar.DATE) - 1; roundUp = false ;
 offset = val.get(Calendar.DATE) - 1 ; if ( offset >= 0 ) { offset -= 1 ;
 boolean offsetSet = false ; while ; {
 int roundUp = false ; boolean offsetSet = false ; boolean round ;
 offset = val.get(Calendar.DATE) - 1; if (round)
 int roundUp = false ; boolean offsetSet;
 offset = val.get(Calendar.DATE) - 1 ; int roundUp = offset < - 15 ;
 offset = val.get(Calendar.DATE) - 1 ; boolean roundUp = offset < - 15 ;
 offset = val.get(Calendar.DATE) - 1 ; boolean roundUp = offset > - 15 ;
 boolean offsetSet = offset < 0;
 do {
 int roundUp = 0 ; if ( field == 1 ) { offset = val. get ( Calendar.DATE ) - 1 ; } }
 int roundUp = false ; boolean is_offsetSet = false;
 offset = val. get ( Calendar.DATE ) - 1 ; offset = val. get ( Calendar.MONTH ) - 1 ; }
 offset = val. get(Calendar.DATE) - 1 ; offset = val. get(Calendar.MONTH) - 1
 int roundUp = false ; boolean offsetSet = false ; boolean roundUp = = false ;
 boolean offsetSet = offset > 7;
 int roundUp = false ; boolean offsetSet = false ; } else {
 int offsetSet = false ; int roundUp;
 boolean roundUp = offset == 0;
 boolean roundUp = false ; boolean roundUpoffsetSet = false;
 int offsetSet = false ; do {
 int offsetSet = false ; boolean roundUp= false;
 boolean roundUp = [ ] ;
 boolean offsetSet = false ; boolean roundUp;
 boolean roundUp =! round;
 int roundUp = true ; boolean offsetSet |= false;
 int roundUp = false ; offsetSet= false;
 offset = val. get ( Calendar.DATE ) - 1 ; offset = val. get ( Calendar.MONTH ) + 1 ; }
 int roundUp = false ; boolean offsetSet = false ; boolean roundUp =
 int offsetSet = false ;
 boolean offsetSet = false, roundUp= false;
 int offsetSet = - 1 ;
 roundUp ;
 boolean roundUp = round = true ;
 offset = val.get(Calendar.DATE) - 1 ; int roundUp = false ; }
 int roundUp = false ; int roundUp_offsetSet = false;
 boolean roundUpSet=false;
 offset = val.get(Calendar.DATE) - 1 ; boolean roundUp = false ; }
 boolean roundUp = offset > 16 ;
 int roundUp = false, offsetSet= false;
 int roundUp = true ; boolean offsetSet= false;
 offset = val.get(Calendar.DATE) - 1 ; int roundUp = false ; final
 offset = val.get(Calendar.DATE) - 1 ; boolean roundUp = true ; }
 int roundUp = false ; boolean roundUpoffsetSet = false;
 if (offsetSet) offset |= false;
 boolean roundUp = roundUp == false ;
boolean  offsetSet = false ; continue ;
 boolean roundUp = false ; boolean is_offsetSet = false;
 int roundUp = true ; boolean offsetSet = false ; } }
 int roundUp = false ; boolean offsetSet = false ; int roundUp =
 boolean roundUp = false ; boolean _offsetSet = false;
 boolean offsetSet = = false ;
 int roundUp = false ; boolean offsetSet = false ; break ;
 boolean offsetSet = false; boolean roundUpSet= false;
 int roundUp = 0 ; boolean offsetSet = false ; } }
 int roundUp = false ; boolean offsetSet = false ; } else
 boolean offsetSet false;
 boolean roundUp = offsetSet = true ;
 int roundUp = false ; boolean offsetSet = false ; final
 boolean roundUp = offset=false;
 int roundUp = true ; boolean roundUp_offsetSet = false;
 boolean boolean offsetSet= false;
 int roundUp ; boolean offsetSet= false;
boolean offsetSet  = false ; round ++ ;
 boolean offsetSet = roundUp |= false;
 boolean offsetSet ; {
 int roundUp = false ; boolean offsetSet = false ; }
 int roundUp = 0 ; boolean _offsetSet = false;
 int roundUp = false ; boolean isoffsetSet = false;
 boolean offsetSet = offsetSet;
 int offsetSet ; boolean roundUp= false;
 int roundUp = true ; boolean _offsetSet = false;
 boolean offset = true;
 int offset = 0 ;
 final boolean offsetSet= false;
 boolean roundUp = false
 if round {
 int roundUp = false ;
 int roundUp = 0 ; boolean offsetSet = false ; final
 int offsetSet ;
 boolean roundUp = offset==false;
 boolean roundUp offsetSet= false;
 int roundUp ; offsetSet= false;
 boolean roundUp = false ; boolean offsetSet = false ; final
 boolean roundUp = false ; } }
 int roundUp = 0 ; boolean offsetSet = false ; }
 boolean isRoundUp=false;
 boolean offsetSet = true ;
 boolean!offsetSet=false;
 if (round) offset |= false;
 int roundUp ;
 boolean roundUp = false ; final
 boolean roundUp = false,offsetSet = false;
 int roundUp = true ;
 boolean roundUp = false ; }
 boolean roundUp = false;offsetSet = false;
 boolean offsetSet =!false;
 boolean offsetSet roundUp= false;
 int roundUpOffsetSet= false;
 if (roundUp)offsetSet = false;
boolean  offset ;
 boolean roundUp |= false;
 int roundUp = 0 ;
 int roundUp = true;offsetSet = false;
 try {
 boolean roundUp = true
 boolean _offsetSet = false;
 if (offsetSet) {
 boolean roundUp_offsetSet = false;
 boolean offsetSetRoundUp= false;
 int roundUp,offsetSet = false;
 if (round
boolean  offsetSet = true
 boolean roundUp = ;
 if (!offsetSet)offsetSet = false;
 roundUp =
 int roundUp_offsetSet = false;
boolean  round ;
 offsetSet = false
boolean  offsetSet
 if (round)
OffsetSet=false;
 Boolean offsetSet = false;
 boolean roundUp|offsetSet = false;
 bool offsetSet = false;
 int roundUp
 boolean round=false;
boolean  roundUp = false ;
 if (round)offsetSet = false;
 offset=false;
 short roundUp ;
 long roundUp ;
 boolean isoffsetSet = false;
 bool offsetSet;
 RoundUp :
 boolean roundUp
 if (roundUp).offsetSet = false;
 if (roundUp){offsetSet = false;
 } }
boolean  offsetSet = FALSE ;
 boolean roundUp;
 offset set;
boolean  reset ;
 reset=false;
 even=false;
 offset = 0;
 boolean is_offsetSet = false;
 break ;
 int is_offsetSet = false;
 int roundUpoffsetSet = false;
 boolean roundUp = true ; #offsetSet = false;
 boolean unoffsetSet = false;
 int _offsetSet = false;
 try {
 break ;
 int round;
 } }
 int roundupoffsetSet = false;
 final
boolean offsetSet  = False ;
boolean offsetSet = false ) {
boolean  fieldSet ;
boolean offsetSet  = ;
 int round_offsetSet = false;
boolean  errorSet ;
boolean offsetSet = false ; else
 {
 continue ;
 ifSet= false;
 }
boolean offsetSet := false;
boolean offsetSet ; false;
