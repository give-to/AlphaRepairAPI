value = -value;
value = -value; }
 buf.append("" + -value);
 buf.append("" + -value); return;
 buf.append("" + -value;
 value = --value;
 buf.append("" + -value");
 value = 0;
value  = -value; } }
 return;
 buf.append("" + -(long)Integer.MIN_VALUE); } else {
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else {
 buf.append("" + -(long)Integer.MIN_VALUE);
 value = (int)value;
 }
 buf.append("0"); value= -value;
 buf.append("" + value)+-value;
value  = -value; } return;
value = -value; } else { buf.append("0");
 buf.append("" + -value); value= -value;
 buf.append("" + value); return;
 value = (int) -value;
 buf.append("0"); } value= -value;
 buf.append("" + value");
value = -(long)Integer.MIN_VALUE; }
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append('-');
 buf.append('0'); } value= -value;
 buf.append('0'); value= -value;
 buf.append("" + -(long)Integer.MIN_VALUE); }
 buf.append("" + value); }
 buf.append("" + -(long)Integer.MINVALUE);
 buf.append(" + -(long)Integer.MIN_VALUE); } else {
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { buf.append('-');
 value = 0; value= -value;
 buf.append("" + -(long)Integer.MIN_VALUE); } else { } else {
value = -(long)Integer.MIN_VALUE;
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append('');
 buf.append("" + "+-value;
value  = -(long)Integer.MIN_VALUE
 buf.append("" + (int) -value;
 buf.append("" + -value); }
 buf.append((char) (value - (d << 3) - (d << 1) + '0')); } else {
 buf.append("" + -(int)value);
 buf.append(" + -(long)Integer.MIN_VALUE); return; } else {
 buf.append("" + -(long)Integer.MAX_VALUE);
 buf.append("" + -(long))-value;
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { buf.append('+'); }
 buf.append("" + -(long)Integer.MAXVALUE);
 buf.append("" + -(int))-value;
 value --;
 value *= -value;
 buf.append("" + -(long)value);
 buf.append("" + -(long)Integer.MAX_VALUE); } else {
 buf.append("" + -(long)Integer.MIN_VALUE"); return; } else {
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append();
 buf.append("" + -(long)Integer.MIN_VALUE"); } else {
 buf.append("" + --value;
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append('0'); }
 buf.append("" + -(long)Integer.MIN_VALUE); return; } if ( value > 0 ) {
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append("0'); }
value = -value; } buf.append("0");
 } else {
 buf.append("" + -(long)Integer.MIN_VALUE); return; } if (value > 0)
value  = -value; } return; }
 buf.append("" + -(long)Integer.MIN_VALUE); return; } if (value > -value) {
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append('+'); }
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append("");
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append("0");
 buf.append("" + value);
 value = -value; }
value  = -value; } else {
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append("-');
 buf.append("" + -(long)Integer.VALUE);
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { buf.append('');
 buf.append("" + value + -value;
 buf.append("" + value);
 buf.append("" + value + "-value;
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { } else {
 buf.append("" + -(int)Integer.MIN_VALUE);
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { buf.append('0'); }
 buf.append("" + value)*-value;
 buf.append("" + -(long)Integer.MIN_VALUE); return; } } else {
 buf.append("" + value); } else {
 buf.append("" + -(long)value); }
 buf.append("" + -(long)Integer.MIN_VALUE");
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { buf.append('-'); }
 value = (int)0-value;
 buf.append("" + -(long)Integer.MIN_VALUE
 buf.append("" + -(long)Integer.MIN_VALUE"); } else { buf.append('-');
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append("")
 buf.append("" + -(int)value); }
 buf.append("" + -(int)value;
value = -value; buf.append("0"); }
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { buf.append('+') ;
 buf.append("" + -(long)Integer.MIN_VALUE); } else
value = -value; } buf.append("" + value);
 buf.append("" + -(long)Integer.MAX_VALUE); }
value = -value; buf.append("" + -value);
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append('';
 buf.append("") + -(long)Integer.MIN_VALUE
 buf.append("" + -(long)-value;
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append("0") ; }
value = -value; buf.append("" + value);
 buf.append('0'); } value *= -value;
 buf.append("" + -value); };
 buf.append("" + -(int)Integer.MIN_VALUE); }
 buf.append(" + -(long)Integer.MIN_VALUE); } else { } else {
 buf.append("" + -(value)); }
 value = -value + 1;
value  = -value; buf.append("0");
 buf.append("" + value) -value;
 buf.append("" + value); value= -value;
 buf.append("" + -(long)Integer.MIN_VALUE); return; } } else { buf.append('+') ;
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { buf.append('-'');
 buf.append("" + -value)*-value;
 buf.append("") value= -value;
 buf.append("" + -value)+-value;
 buf.append("" + value + "+-value;
 value = 0;
 buf.append("" + -(long)Integer.VALUE); }
value =  -value; buf.append('0'); }
 value = -value; return;
 buf.append("" + -(long)Integer.MAX");
 value = -value;
 buf.append("-" + value);
value  = -value; } else { return;
value  = -(long)Integer.VALUE;
 buf.append(" + -(long)Integer.MIN_VALUE); } else
 buf.append("" + -value"); value= -value;
 buf.append("" + -(long)Integer.VALUE");
 buf.append("" + -(long)Integer.MIN");
 buf.append("" + value;
 buf.append("" + (int)0-value;
 buf.append('-'); value= -value;
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else
 buf.append("" + value) *= -value;
 buf.append("" + -(long)Integer.MAX);
 buf.append("" + +-value;
value  = -value; } buf.append("");
 buf.append("" + value - -value;
 buf.append("" + (long)0-value;
 value = +value; }
 buf.append("" + value + ");
value  = -value; } else { }
value = -value; } buf.append("0"); }
 buf.append("" + value); } value= -value;
 buf.append(); } value= -value;
 buf.append("" + value); }
 buf.append('-'); } value = -value;
 buf.append("" + -(long)Integer.MIN_VALUE); return; } } else { buf.append('+') +
 buf.append('0'); }
 buf.append("" + value + "= -value;
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { } else
 value = "+-value;
 value = -value - 1;
 buf.append("" + -(long)Integer.MIN_VALUE); return; } } else { buf.append('+') {
value = -value; buffer.append("" + -value);
value  = -value; } buf.append(); }
 buf.append("0"); } value *= -value;
value  = -value; } else { return; }
 buf.append("" + (long) -value;
 value = -(long)-value;
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append;
 buf.append("" + -(long)Integer.MIN_VALUE) + '0') } else
 buf.append("" + -(long)Integer.MAX_VALUE); } else
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append()
 buf.append("" + "+value); value= -value;
 buf.append("" + value + "")= -value;
value  = (int) -value; }
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append('0'); } }
 buf.append("" + -(long)Integer.MIN_VALUE); } else { buf.append('
 value = -value++;
 buf.append("" + -)-value;
 buf.append("" + -(int)Integer.MIN_VALUE); } else
 buf.append("" + -(value); }
 buf.append(); value= -value;
 buf.append("-value"); }
 buf.append("" + value + '0'); }
 buf.append("" + value + '-value;
 buf.append("" + value); };
value = -value; } out.write("0"); return;
 buf.append(" + -(long)Integer.MIN_VALUE); return; } else
 buf.append("" + -value);
 value = -value; value= -value;
value  = -value; } } }
 buf.append("" + value)=-value;
 buf.append("" + -(value)) }
 buf.append('" + -value');
 buf.append("" + value + '0') }
 buf.append("" + -)value;
 value = (long)0-value;
 buf.append("" + '0'); }
 buf.append("" + "-value;
 buf.append("-"); return;
value  = -value; } } return ;
 buf.append("");
value  = (int)value - -value;
 value = +value;
 buf.append("" + value + "");
value =  -value; buf.append("0")};
 value = -value - 0;
 buf.append("" + -(long)value) +
 buf.append("" + -(long)Integer.MIN_VALUE"); } else
 buf.append("" + -(long)Integer.MIN_VALUE"); return; } else
value = -value; buf.append("0"); return;
 buf.append("0"); return;
 buf.append('" + -value);
 buf.append("" + value) }
 buf.append("" + value *= -value;
 buf.append("" + value)+;
 buf.append("" + value + "");
 buf.append("+value); }
 buf.append("" + -(long)Integer.MIN_VALUE); } else { }
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { }
 value = value;
value  = -value; } return; } }
 buf.append(""); value= -value;
 buf.append("" + -(long)Integer.MIN_VALUE); } else { } else
 buf.append("0"); }
value  = (int)value - 1;
 buf.append("*" + -value;
value = -value; buf.append('0');
 value = -value; };
value = -value; } buf.append('0');
 buf.append('+'); }
 buf.append("" + +value");
 buf.append("" + -(long)Integer.MIN_VALUE); return; } }
 buffer.append("" + -value;
 value = -value }
 value = -value; } else
 buf.append("" + -(long)Integer.MIN_VALUE); return; } else { return
 buf.append("" + "+value");
 buf.append("" + value; }
value  = -value; } buf.append();
 buf.append("+value");
 value = -1-value;
 buf.append("" + value); } else
 value = -value0;
 value = 0x-value;
 buf.append("" + -(value)) ;
value  = -value; } exit;
 value = -0-value;
 buf.append("+value");
 buf.append(" -value");
 buf.append("0") value= -value;
 buf.append();
 buf.append("-");
 buf.append('+'); value= -value;
 buf.append("0"); value *= -value;
 buf.append("" + 0)+-value;
 value = -value } value= -value;
 value = -value+-value;
 return -value;
value = -value; return; } }
 value ++;
value = -value + '0'; }
 buf.append("")-value;
 value = 0 value= -value;
 value = (long) -value;
 value = -value*-value;
 value = -$value;
 buf.append(" "+);
value = -value; } buffer = null ;
 buf.append(" + -value;
 value --; value= -value;
 value = +value; }
 value + "= -value;
 value = "-value;
 } value = -value;
 value -value;
 buf.append('0'); } else
 buf.append("")+-value;
 value = +-value;
 value = -int)value;
 value += -value; }
 buf.append("= -value;
 value < 0 } value= -value;
 value += value;
 value = -int-value;
 value -= value;
 value = -+value;
 value = +value;
 value += -value;
 value = 0+-value;
 value = value;
 value = "0-value;
 value = value *= -value;
 value = 0-value;
 value = 0 += -value;
 } value *= -value;
 value = -value += -value;
 value = 0
 value += value;
 } } value= -value;
value =  "-value; }
 buf.value= -value;
 return; }
 }
 value -= -value;
 } }
 } return;
 value = value
 value += 1;
 } }
 value + "<= -value;
 } else
 value |= -value;
 value+value;
 value --;
 return};
 if negative {
 value ++;
 return;
value =  -value
 return }
value = -Value; }
 };
 value ^= -value;
value =  -value};
 return;}
value =  0';
 return};
 value==-value;
 value+-value;
value = -value"; }
 return
 return
value = 0value;
