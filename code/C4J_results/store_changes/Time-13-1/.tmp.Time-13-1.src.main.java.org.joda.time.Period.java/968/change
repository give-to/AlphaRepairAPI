 return new Period(values, getPeriodType());
 return new Period(getPeriodType());
 return new Period(values));
 return new Period(values);
 return Period(values, getPeriodType());
 return new Period(values, millis);
 return new Period(values());
 return new Period(values, getType());
 return new Period(values, getPeriodType));
 return this;
 return new Period(values, millis));
 return new Period(values, getPeriodType);
 return values, getPeriodType());
 return new Period());
 return new Period(values, millis,getPeriodType());
 return Period(values);
return new  Period(values, getPeriodType()); }
return new  Period();
 return new Period(values, getPeriodType;
 return new Period(millis);
 return new Period(values;
 return new Period(millis,getPeriodType());
 return new Period(values, getPeriod());
 return new Period(values, this);
 return new Period(values); }
 return new Period(values, this));
 return new Period(getValues());
 return new Period(millis));
 return this);
 return new Period(values, getPeriodType()); return millis ;
 return new Period(millis,values, getPeriodType());
 return new Period(this,values, getPeriodType());
 return new Period(values, getPeriodType()); return this ;
 return new Period(values, getPeriodType(), millis); }
 return (getPeriodType());
 return new Period(values, this,getPeriodType());
return new Period(values, getPeriodType(millis));
 return new Period(values, getPeriodType(), millis);
 return new Period(values,);
 Period(values, getPeriodType());
return new Period(values,  getPeriodType(), getPeriodType());
return new  Period ( )
 return new Period(values, getMonthType());
 return clone());
 return new Period(values, milliseconds, getPeriodType());
 return new Period(values, this;
 return new Period(values, getMonthType));
 return new Period(values, getMonthType);
 return new Period(values, getPeriod);
 return new Period(values, 0, getPeriodType());
return  millis ;
 return new Period(values, getType());;
 return new Period(values, millis;
 return new Period(values, values, millis, getPeriodType());
 return new Period(values, getPeriodType()); } }
 return (values));
 return new Period(values, getPeriod));
 return new Period(this, millis,values, getPeriodType());
return new Period(values, getPeriodType()). withMillis ( millis ) ;
return new Period(values, getPeriodType().getPeriodType()); }
 return new Period(values, millisIndex, getPeriodType());
 return new Period(values, this.getPeriodType());
 return new Period(values, clone());
 return new Period(values, get());
return new Period(values,  getPeriodType().getPeriodType());
 return new Period(values, null);
 return new Period(values, millis)(getPeriodType());
 return new Period ( values, getPeriodType ( millis )));
 return new Period(this, withMillis(values, getPeriodType());
 return new Period(values, getPeriodType()); } return this ;
 return new PeriodImpl(values, getPeriodType());
 return new Period(values, millis); withPeriod(values, getPeriodType());
 return new Period(values, type());
 return new Period(values, getPeriodType()); return null;
 return new values, getPeriodType());
 return new Period(millis+values, getPeriodType());
 return new Period(values, getEpType());
 return new Period(values, 0, millis, getPeriodType());
 return new Period(new Period(values, getPeriodType());
 return new Period(values, 0));
 return new PeriodWithMillis(values, getPeriodType());
 return new Period(values, 0);
return new Period(values,  getPeriodType(), this, millis);
 return new Period(values, getType);
 return new Period(this, withMillis(),values, getPeriodType());
 return new Period(values, millis + 1, getPeriodType());
return new Period(values, getPeriodType()). withMillis (millis); }
 return new Period(values, getType();
 return new Period(values, getPeriodType()); *
 return new Period(values, getParserType));
 return new Period(millis());
return new Period(values, getPeriodType(this, getPeriodType()); }
 return new Period(values, getUnitType));
return new Period(values, getPeriodType(this, getPeriodType(), millis));
 return new Period(values); return new Period(values, getPeriodType());
return new Period(values, getPeriodType()), getPeriodType());
 return new Period(values, getEpoch());
 return (this);
 return new Period(values, millis, *getPeriodType());
return new Period(values, getPeriodType(values, millis)); }
 return new SimplePeriod(values, getPeriodType());
return new Period(values, getPeriodType()), getPeriodType()); }
 return new Period(values, getPeriodType(); });
 return new Period(values, millisField, getPeriodType());
 return new Period(values, millis); addPeriod(values, getPeriodType());
 return new Period(values); return Period(values, getPeriodType());
return new Period(values, getPeriodType(values, millis); });
 return new PeriodMillis(values, getPeriodType());
 return new Period(this, new Period(values, getPeriodType());
 return new Period withMillis(values, getPeriodType());
 return new Period(values, copy());
 return new Period(values, millis,.getPeriodType());
 return new Period(values, getEpType);
 return new Period(this, PeriodType).create(values, getPeriodType());
 return new Period(values, milliIndex, getPeriodType());
 return new Period(this).withMillis(values, getPeriodType());
 return new Period(values, millis);
 return new Period(());
 return new Period(values, null));
 return new Period(values, millis)+(getPeriodType());
 return new Period(values, 0.0, getPeriodType());
return new Period(values, getPeriodType()), getPeriodType(), millis);
 return this ; } return new PeriodImpl(values, getPeriodType());
 return new Period(this, withMillis,values, getPeriodType());
 return new Period(values, millis); add(values, getPeriodType());
 return new Period(values, millis * 2, getPeriodType());
 return new Period(values, milliseconds));
 return new Period(values, null;
 return new Period(values, build());
 return new Period(values, ms);
 return new Period(this, PeriodType.values, getPeriodType());
 return (values);
 return new Period(values, getUnitType);
 return new Period(this, millis+values, getPeriodType());
 return new Period(this).withPeriod(values, getPeriodType());
 return new Period(values, 0, 0, getPeriodType());
 return new Period(values, 1, getPeriodType());
 return new Period(values, millis * 1000, getPeriodType());
 return new Period(this, PeriodType).of(values, getPeriodType());
 return new Period(values, getPeriodType());
return new Period(values, getPeriodType()). with (millis);
return new Period(values, getPeriodType(this), getPeriodType(millis));
 return new Period(milles,getPeriodType());
 return new Period(values, getPeriodType()); } else { if ( period == null ) return this ; if ( values!= null )
 if ( values == null ) { return this ; } if ( values!= null ) {
 return new Period(values, getPeriodType()); } else { int[] values = getValues();
return new Period(values, getPeriodType(this), getPeriodType()); }
 return new Period(values, null, getPeriodType());
 return New Period(values, getPeriodType()); }
 return new Period(values, getPeriodType()); } else { int[] values = getValues(millis);
return new Period(values, getPeriodType(), values, getPeriodType());
 return new Period(this, "millis",values, getPeriodType());
return new Period(values, getPeriodType()). with (millis); }
 return (values, getPeriodType());
return new Period(values, getPeriodType(values), getPeriodType()); }
return new Period(values, getPeriodType()); return new Period(values, millis);
 return new ReadablePeriod(values, getPeriodType());
return new Period(values, getPeriodType(this, millis));
 return new Period(values, millis); setPeriod(values, getPeriodType());
return new Period(values, getPeriodType(), values, millis); }
 return New Period(values, millis,getPeriodType());
return new Period(values, getPeriodType(), this, getPeriodType());
return new Period(values,  getPeriodType()); } return this ; }
 return New Period(values, getPeriodType());
return new Period(values, getPeriodType()). withMillis ( milliseconds);
return  get ( ) ;
 return ( Period ) this ; } return new Period(values, getPeriodType());
return new Period(values, getPeriodType(values), getPeriodType());
 return Period. of(values, getPeriodType());
 return new Period(values); } return newPeriod(values, getPeriodType());
 return New Period(values, getPeriodType);
return new Period(values, getPeriodType()), getPeriodType()); return millis ;
return new Period(values, getPeriodType()); return this ; }
 return new Period(values, getMonthType());;
 return new Period(values); return new SimplePeriod(values, getPeriodType());
 return new Period(values, milliseconds);
return new Period(values, getPeriodType(), this, getPeriodType()); }
return new Period(values, getPeriodType()), getPeriodType(), millis); }
 return New Period(values, getPeriodType));
 return new Period(values, getPeriodType()); return this
 return Period(values, milliseconds, getPeriodType());
 return new Period(this.withMillis(values, getPeriodType());
 return new Period(values, getPeriodType()); } else { int[] values = null;
return new Period(values, getPeriodType().getType());
 return new Period(values, getPeriodType()); } else { int[] values = [ ] ;
 return new Period(values, getPeriodType()); } else { int[] values = 0;
return new Period(values, getPeriodType(), values, getPeriodType()); }
return new Period(values, getPeriodType()). withMillis ( millis));
 return new Period(values values));
return new Period(values, getPeriodType()).withMillis(ms);
 return new Period(values, getPeriodType()); return ;
 return new Period(values); return withPeriod(values, getPeriodType());
return new Period(values, getPeriodType()) withMillis(millis);
return new Period(values, getPeriodType(), getPeriodType()); }
return new Period(values, getPeriodType(this, millis); });
return new Period(values, getPeriodType()). withMillis ( ) ;
return new Period(values, getPeriodType(this).getPeriodType()); }
 return new Period(this), new Period(values, getPeriodType());
 return new Period(values, millis); getPeriod(values, getPeriodType());
 return new Period(this, 0,values, getPeriodType());
 return new Period(values, 1);
 return new Period(values); new Period(values, getPeriodType());
return new Period(values, getPeriodType(this, getPeriodType())); }
 return new Period(values, ms));
return new Period(values, getPeriodType().getPeriodType()); return millis ;
 return new Period(values, getPeriodType()); } else { values = [ ] ;
 return new Period(this, null,values, getPeriodType());
return new Period(values, getPeriodType()).getPeriodType();
 return new Period(values, getPeriodType()); } else { if ( period == null ) { return this ; } else {
 return new Period(values, getPeriodType()); } } else { if ( period == null ) { return this ; } else {
 return new Period(values, millis)+new Period(values, getPeriodType());
 return new Period(values, getPeriodType()); } else { int[] values = this;
 return new Period({ values, getPeriodType());
 return new Period(values, millis());
 return Period(values, 0, getPeriodType());
return new Period(values, getPeriodType().getPeriodType(), millis);
 return new Period(values, getPeriodType()); } else { if ( period == null ) { return this ; } } else {
return new Period(values, getPeriodType()).getPeriodType());
return new Period(values, getPeriodType().getPeriodType()); return this ;
 if ( values == null ) { return this ; } if ( values > 0 ) {
 return new Period(values, getPeriodType()); } else { int[] values = getValues(millis); }
return new Period(values, getPeriodType(), this, millis); }
 return new Period(values, getPeriodType()); } else { int[] values = getValues(int[] millis);
 return new Period(values, getPeriodType()); } else { int[] values = [0];
 return New Period(values, getPeriodType;
 return new Period(values, getPeriodType()); } } else { if ( period == null ) { return this ; } } else {
 return new Period(millis*values, getPeriodType());
 return new Period(values, millis)*new Period(values, getPeriodType());
 return new Period(this, PeriodType.create(values, getPeriodType());
 return new Period(values,));
return new Period(values, getPeriodType() getPeriodType());
return new Period(values, getPeriodType()).getPeriodType(); }
 if ( values == null ) { return this ; } int[] values = values;
 return with(getPeriodType());
 return new Period(values, millis); updatePeriod(values, getPeriodType());
 return new Period *(values, getPeriodType());
 return new Period(values, getPeriodType()); } else { int[] values = getValues({ millis });
 return new Period(values, getPeriodType()); } else { double values = getValues ( ) ;
 } return new Period(values, getPeriodType());
 return new Period(values); withPeriod(values, getPeriodType());
 return new Period(values, mills, getPeriodType());
 return new Period(values, getPeriodType()); } else { if ( period == null ) return this ; if ( values == null )
 return new Period(values, getPeriodType()); } } else { if ( period == null ) {
return new Period(values, getPeriodType()), getPeriodType()); return this ;
 return new Period(values, getPeriodType()); } else { if ( period == null ) {
 return new Period({values, getPeriodType));
 return new Period(this, this.values, getPeriodType());
return new Period(values, getPeriodType(this, getPeriodType()); });
 return new Period(values, getPeriodType()); } else { double values = getValue ( ) ;
 return ( Period ) this ; } return withPeriod(values, getPeriodType());
 return new Period(values, getPeriodType()); } else { double values = get ( ) ;
return new Period(values, getPeriodType()).getPeriodType()); }
return new Period(values, getPeriodType().type());
 return new Period(this, millis, getPeriodType());
return new Period(values, getPeriodType()); return new Period(values); }
 return new Period(longs,getPeriodType());
return new Period(values, getPeriodType(millis); });
 return new Period(this, millis)+values, getPeriodType());
return new Period(values, getPeriodType()); return new Period(values, this);
return new Period(values,  getPeriodType()); return this ; } }
 if ( values == null ) { return this ; } if ( values!= null )
 return new Period(values);;
 return new Period()values;
return  this ; }
 return new Period(values, getPeriodType()); } else { int[] values = getValues(this);
 return new Period(new SimplePeriod(values, getPeriodType());
 return new Period(values, getPeriodType()); } else { int[] values = getValues(); }
 return new Period(values,(ms));
 return new Period(mMillis,values, getPeriodType());
return new Period(values, getPeriodType(values, millis)) ;
return new Period(values, getPeriodType()), getPeriodType(millis));
return new Period(values, getPeriodType(ms, millis));
 return new Period(values, getPeriodType()); } else { int[] values = getValues ( this, 0 ) ;
 return new Period(values); } return withPeriod(values, getPeriodType());
 if ( values == null ) { return this ; } if ( millis ) {
 return new Period(this, Math.add(values, getPeriodType());
 return new Period(millis-values, getPeriodType());
 } return new SimplePeriod(values, getPeriodType());
 return new Period(values); return period(values, getPeriodType());
 return (this));
 if ( values == null ) { return this ; } if ( values. length > 0 )
 return new Period(values, milli,getPeriodType());
return new Period(values, getPeriodType()) + getPeriodType();
 return new Period(values, getPiodType;
 if ( values == null ) { return this ; } else if ( values!= null )
 return new Period(values, getPeriodType()); } else { int[] values = getValues(this, millis); }
 return new Period(values, getPeriodType()); } else { int[] values = getValues(int[][]);
 return new Period(values, getPeriodType()); } else { int[] values = getValues(int[0]);
 return new Period(this).with(values, getPeriodType());
 return newMillis());
 if ( values == null ) { return this ; } if ( values. length == 1 )
 return getPeriod());
return new Period(values, getPeriodType(values, millis)); } }
 return new Period(values, getPiodType));
 if ( values == null ) { return this ; } else { values = values ; }
return new Period(values, getParserType());
 if (values!= null) {
return new Period(values, getPeriodType().getPeriodType(), getPeriod());
 return new Period({values, millis));
 return New Period(values, millis);
 return new Period(values). withPeriod(values, getPeriodType());
 return new Period(this, new PeriodType(values, getPeriodType());
 return new Period(values); return createPeriod(values, getPeriodType());
return new Period(values, getPeriodType() + millis); }
return new Period(values, getPeriodType()). withMillis ( milliseconds ) ; } }
 return new Period(values, *getPeriodType());
 return new Period(values), createPeriod(values, getPeriodType());
 return new Period(values, getPeriodType()); } else { if ( period == null ) return this ; if ( copy )
 return new Period(null,values, getPeriodType());
 return new Period(values), newPeriod(values, getPeriodType());
 return new Period(values()));
 return (int[])new Period(values, getPeriodType());
 return new Values, getPeriodType());
 return new Period(this, new SimplePeriod(values, getPeriodType());
 return new Period(values, getPeriodType()); }
return new Period(values, getPeriodType(this));
return new Period(values, getPeriodType()). withMillis (millis)); }
return new Period(values, getPeriodType() + millis);
return new Period(values, getPeriodType(), this, getPeriodType(), this);
 return ( Period) this;
 return ( Period ) new PeriodImpl(values, getPeriodType());
 return New Period(values, millis));
 return new Period(millis,new Period(values, getPeriodType());
return new Period(values, getPeriodType(values, millis)) ; } return this ;
return new Period(values, getPeriodType().type);
 if ( values == null ) { return this ; } if ( copy ) {
 return new PeriodImpl());
return new Period(values, getPeriodType(millis)); }
return new Period(values, getPeriodType().getPeriodType()); } }
 return new Period(millis),new Period(values, getPeriodType());
return new Period(values, getPeriodType()), millis);
 return new Period(values); addPeriod(values, getPeriodType());
 return New Period(values, getType());
 return new Period(0,values, getPeriodType());
 return new Period(values++);
 return new Period(newValues());
 return new Period(value, millis, getPeriodType());
 return new PeriodMilli(values, getPeriodType());
return new Period(values, getPeriodType(this, getPeriodType()); } }
return new Period(values, getPeriodType()) + millis;
 return new Period(values, getUnit());
 return new Period({values, getPeriodType);
 return new Period(longs));
 return new Period(values); add(values, getPeriodType());
 return new Period(values..);
 return new Period(values, millis)new Period(values, getPeriodType());
 return new Period(this, this,values, getPeriodType());
 if ( values == null ) { return this ; } if ( extended ) {
return new Period(values, getPeriodType(); }
 return new Period(values, getPeriodType()); } else { int[] values = getValues(millis());
 return getMillis());
 } return new Period(values, 0, getPeriodType());
 } return new Period(values, getPeriod());
 return (period)new Period(values, getPeriodType());
return new Period(values, getPeriodType(this), getPeriodType()); } }
 return new Period(_));
 return new Period({values, millis},getPeriodType());
 return new Period(values, millis);new Period(values, getPeriodType());
 return new Period(values, getPiodType);
 return new Multiod(values, getPeriodType());
return new Period(values, getPeriodType(values), getPeriodType()); } }
return new Period(values, getPeriodType()). withMillis ( ms ) ; } }
 return new Period(values values);
 return new Period(values, getPeriodType()); } else { int[] values = getValues(int[][]());
 } return new PeriodImpl(values, getPeriodType());
return new Period(values, getPeriodType()), getPeriodType()); } }
 return new Period(values, millis),new Period(values, getPeriodType());
 return new Period(values, getPeriodType()); } else { int[] values = getValues(int[] millis());
 return new FixedPeriod(values, getPeriodType());
 return new ReadableStandardPeriod(values, getPeriodType());
 if ( values == null ) { return this ; } if ( immutable ) {
 return new Period(values, getPeriodType()); } else { if ( period == null ) { return this ; } else,
 return ( Period ) new Period(values, getPeriodType());
 return new Period(values, getPeriodType()); } else { int[] values = getValues(); } *
 return ( Period ) new SimplePeriod(values, getPeriodType());
 return new Period(getValue());
return new Period(values, getPeriodType()), getPeriodType().type());
 return new Period(values, getPeriodType()); } *
return new Period(values, getPeriodType()) + (millis);
 if ( values == null ) { return this ; } if ( append ) {
 return new Period(values, getPiodType());
return new Period(values, getPeriodType(values, millis)); return this ; } }
 return this ; } return newPeriod(values, getPeriodType());
 return new Period(values, getPeriodType()); } else { int[] values = getValues(); } }
 return new Period(values, getPeriodType()); } else {
 return new PeriodImplMillis(values, getPeriodType());
 return new Period(values); }
 return new Period(add(values, getPeriodType());
return new Period(values, getPeriodType()). withMillis (millis); } }
 } } else { if ( period == null ) { return this ; }
 return new Period($));
 return new Period(values, getPeriodType()); } } else { if ( period == null ) { return this ; } } }
 return new Period(values, getPeriodType()); } else { if ( period == null ) { return this ; } } } }
 return add(getPeriodType());
 return new Period(values, getPeriodType()); } } else { if ( period == null ) { return this ; } } } }
 } return new ReadablePeriod(values, getPeriodType());
 return new Millis(values, getPeriodType());
 return new Period(values, getPeriodType()); } } else { if ( period == null ) { return this ; } } else
 return new Period(mis());
 return new Period(values, getPeriodType);
 return new Period(\));
 return new Period(values);
 return new Period(millis)+new Period(values, getPeriodType());
 return new Period(longs);
 return new Period(values,new Period(values, getPeriodType());
 return new Period({));
 return create(getPeriodType());
 return new Period(1+values, getPeriodType());
 return this + 1;
 return this(getPeriodType());
 return new Period(values, millis); returnnew Period(values, getPeriodType());
return new Period(values, getPeriodType(this, getPeriodType())); } }
 return new Period({values, millis);
return new Period(values, getPeriodType()) + millis; }
 if (values!= null)
 return new Period(values, milli);
 if ( values == null ) { return this ; } if ( values!= null ) { }
 return getPeriodType()+new Period(values, getPeriodType());
 return new Period(values, millis); }
 return new Period(millis)*new Period(values, getPeriodType());
 return new Period(new FixedPeriod(values, getPeriodType());
 return ( Period) millis;
 } return new Period(values, getPeriod);
 return new Period(values, getClass());
 return new Period(new BasicPeriod(values, getPeriodType());
 return this + values;
 } else { int[] values = getValues(millis); }
 return new Period(values, getInstance());
return new Period(values, getPeriodType()) return this;
return new Period(values, getPeriodType()) + millis();
 if ( values == null ) { return this ; } int[] values = values();
 } return Period(values,getPeriodType());
 return new Period(values), millis);
 } return this;
 return period(values);
 return ( Period ) this. withMillis ( values ) ;
 } } else { if ( period == null ) { return this ;
 return new Period(values,Millis);
 return new Period(this), add(values, getPeriodType());
 return new Period(values...);
 return get(getPeriodType());
 return new Period(values, getPiodType());
 return ( Period ) clone ( this, millis ) ;
 return getPeriodType());
return new Period(values, getPeriodType()) return millis ;
 if (values == null) return;
 return ( Period ) this. withMillis ( ) ;
 return copy());
 } return new Period(values, getMonthType));
 return getPeriodType().new Period(values, getPeriodType());
 return new Period(values)*;
 return new Period(values, getPeriodType()); } } else {
 return new Period(null), create(values, getPeriodType());
 return new Period(values, getPeriodType()); *
 if (values == null) return null
 return $(values));
 return new Period(append(values, getPeriodType());
 } else { if (period == null) { return this; } }
 return ( Period ) this. withMillis ( milliseconds ) ;
 return new Period(values, millis); }new Period(values, getPeriodType());
return new Period(values, getPeriodType(this, getPeriodType()); }); }
 return new PeriodValues(getPeriodType());
return new Period(values, getPeriodType(values, millis); } }
 return new TimeUnit(values, getPeriodType());
 return new PeriodPeriod(values, getPeriodType());
 } } else { if ( period == null ) { return null ; }
 return ( Period) withPeriod(values, getPeriodType());
 return ( Period ) get ( millis ) ;
 return new WritablePeriod(values, getPeriodType());
 return new Period(values, milli);
 } else { if (period == null) { return this; } else
 } return new FixedPeriod(values, getPeriodType());
return  this ; } }
return new  Period(values
 return period(values,getPeriodType());
 } } else { if ( period == null ) { return null ;
 return new Period values,getPeriodType());
return new Period(values, getPeriodType(mallis));
return  get ( values )
 if ( values == null ) { return this ; } else if ( values ) { }
 } return new PeriodPeriod(values, getPeriodType());
 return new Period(values, millis) }
 } } else { if ( period == null ) { return null }
 return this));
 return $(values);
 return this.with(getPeriodType());
 return new Period(values, getMonthType()); }
 return new Period(values, millis)); returnnew Period(values, getPeriodType());
 return new Period(values), millis;
 return new Period(values, millis); *
 return new Period(values, getPeriodType());} else
 return new Period(values, milles);
return new Period(Values, getPeriodType());
 return this.period;
 return new BasicPeriod(values, getPeriodType());
 return new Period(values); } *
 return new StandardPeriod(values, getPeriodType());
 return new Period(millis); returnnew Period(values, getPeriodType());
 return with(values);
 return this(values);
 return new Period(values, getPiodType()); }
return new Period(values, getPeriodType(ms));
 return new Period(values, getPeriodType()); } } else { *
 if (values == null) return this
 return new Period(values, getParserType()); }
return new Period(values, getPeriodType()) + 1;
return new Period(values, getPeriodType(msis));
return new  Period(); }
 return - 1;
 new Period(values, getPeriodType());
 * return Period(values,getPeriodType());
return new Period(values, getPeriodType(...));
 return this - 1;
 return (periodImpl)new Period(values, getPeriodType());
 return values);
 return new Period(_);
return new Period(values, getPeriodType()) + millis);
 return getPeriodType ( ) #new Period(values, getPeriodType());
 return New Period(values));
 return New Period(values);
 return (period)=new Period(values, getPeriodType());
 return new Period(millis); }new Period(values, getPeriodType());
 return new Period(values); *
 return new Period(values)); }
 return (long)new Period(values, getPeriodType());
 return new Period(values); } #new Period(values, getPeriodType());
 return (int[] *)new Period(values, getPeriodType());
 } return new PeriodImpl(getPeriodType());
 return new Period(-values));
 return new Period({values));
return new Period(values,());
 return getInstance());
return new Period(values), getPeriodType());
 return ( Period(values());
 return new Period(this());
return new Period(values, getPeriodType(month));
return new Period(values, getPeriodType( )));
 return values));
 return new Period(-values());
 return new Period($values));
 return new Period(-values);
 return getThis());
 return getCopy());
return new Period(values, getPeriodType()) return null;
 } }));
 } new Period(values, getPeriodType());
 Return new Period(values, getPeriodType());
 (values));
 return this; }
 Return new Period(values);
 return new Period($values);
return new Period(values, getPeriodType()) + milliseconds;
 return $(getPeriodType());
 return milli;
return new Period(values,  isPeriodType());
return new Period(values,  getPeriodType();
 return New Period(getPeriodType());
 return create());
return new Period(values, getPeriodType()) } }
 period(values, getPeriodType());
 return this; } *
 * return this;
return new Period(values, getPeriodType(...)));
return new Period(values, getPeriodType()).days();
 return ( Period());
 return withPeriod(values, getPeriodType());
return  null;
 } Period(values, getPeriodType());
 return new Period(); }
 return createPeriod(values, getPeriodType());
 Return new Period(getPeriodType());
 new Period());
 return null);
 return nano());
 Return Period(values, getPeriodType());
return new Period(values, getPeriodType())); }
 return null; }
 return new Duration(getPeriodType());
return new  period ;
 return create(values, getPeriodType());
 } return with(getPeriodType());
(values, getPeriodType());
return new Period(values, getPeriodType()()); }
return new  period();
 return this.new Period(values, getPeriodType());
 return null; } *
 return this; *
 return this. } *
 return new Period(); *
 return this||new Period(values, getPeriodType());
 * -----------------------------------------------------------------------
 return toPeriod(values, getPeriodType());
 return getPeriod(values, getPeriodType());
 New Period(values, getPeriodType());
 return null||new Period(values, getPeriodType());
 return this|new Period(values, getPeriodType());
 add(values, getPeriodType());
 * } *
 } }
 } *
 } (getPeriodType());
return  values ;
 } } returnnew Period(values, getPeriodType());
 return it);
 return newgetPeriodType());
 }
 return clone;
 set values, getPeriodType());
 return this, getPeriodType());
 * } }
 return it;
 } } ;
 * --------------------------------------------------------------------------
 return of(values, getPeriodType());
return new Period(Values);
 return *new Period(values, getPeriodType());
 *
