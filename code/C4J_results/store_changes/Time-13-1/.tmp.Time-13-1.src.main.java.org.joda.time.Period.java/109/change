 return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(PeriodType.standard());
 return new Period(int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0}, PeriodType.standard());
 return newint[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0}, PeriodType.standard());
 return new int] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0}, PeriodType.standard());
 return new PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return PeriodType.standard());
 return new Period(int] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0}, PeriodType.standard());
 return new Period({0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({0, 0, 0, 0, 0}, PeriodType.standard());
 return Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return years());
 return new Period({0, 0, 0, 0}, PeriodType.standard());
 return new Period({0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period.standard());
 return new Period(new int[] {0,years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({}, PeriodType.standard());
 return new Period(new int {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int {0, 0, 0}, PeriodType.standard());
 return new Period(new int {0, 0, 0, 0}, PeriodType.standard());
 return new Period({0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years, PeriodType.standard());
 return new Period({0, 0, 0}, PeriodType.standard());
 return new Period(years);
 return new Period(int years);
 return new Period(new int {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period());
 return new Period(new int {0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {}, PeriodType.standard());
 return new Period(new int[] 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType());
 return new Period(int {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int {0, 0, 0}, PeriodType.standard());
 return new Period[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(years));
 return new Period(new int[] 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(years());
 return new Period(new int[] 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int {0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 0, 0, 0, 0}, PeriodType.standard());
 new int] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(years, PeriodType.standard());
 return years);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodTypeStandard());
return new Period(new int[] {years, years});
 return new Period(int years));
 return new Period(new int[] 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, PeriodType.standard());
 return years));
 return years;
 return years, PeriodType.standard());
 return {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({0, 0}, PeriodType.standard());
 return new Period[] {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[][] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[]  {0, years});
 return new Period(0, years, 0, 0, 0}, PeriodType.standard());
 return {0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodTypeStandard());
 return Period.years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({, 0}, PeriodType.standard());
 return Period(0, 0, 0}, PeriodType.standard());
 return Period(0, 0}, PeriodType.standard());
 return {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int {0}, PeriodType.standard());
 return new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, PeriodType());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}, PeriodTypeStandard());
 return new Period({, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}, PeriodType());
 return new int[] {0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, PeriodTypeStandard());
 return {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new  Period ( )
return  new Period ( years )
return new Period(new int[] {0, years, 0, 0, 0});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return {0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0});
return new Period(new int[] {years, 0, 0, 0, 0,  0}, PeriodTypeStandard());
 return new Period(new []int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int years());
 return new Period(standard());
 return new Period(Years.standard());
 return new int[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period(0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {0, years, 0, 0});
 return new Period(0, years, 0, 0}, PeriodType.standard());
 return new Period, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period, PeriodType.standard());
 return new Period({, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {, 0}, PeriodType.standard());
 return new Period[] {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0 0, 0}, PeriodType.standard());
 return new Period(int[] 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0}, PeriodTypeStandard());
 return new Period(int {0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0,  0});
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0});
 return new Period[] {0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0}, PeriodType());
return new Period(new  int[] { years });
 return new Period(new int[] {0 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, 0}, PeriodType.standard());
 return (PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0});
 return new Period(new int[] {0years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period(0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new PeriodType(standard());
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0}, PeriodType.standard()); }
 return new Period(new int[] years, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType.standard());
 return new PeriodImpl(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0});
 return new Period(new int[] 0, years, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0}, PeriodType.standard()); }
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ) ;
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodTypeStandard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType.standard());
 return new Period(int[] 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0}, PeriodType());
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodTypeStandard());
 return new Period(int[] 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new []int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int(years));
 return Period(0, 0, 0, 0, 0}, PeriodType.standard());
 return {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0 years}, PeriodType.standard());
 return (new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  int[] years);
 return new Period({0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0}, PeriodTypeStandard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ) ;
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0}, PeriodTypeStandard());
 return new Period(int[] 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({, 0, 0}, PeriodType.standard());
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); }
 return new int[] {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] {0, years, 0, 0, 0, 0}, PeriodType.standard()); }
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType ) ;
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType ) ;
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); }
 return new Period[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period(0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new int[] {0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0 years, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0}, PeriodTypeStandard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType ) ;
 return Period(0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } )
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType());
return new Period(new  int[] {0, years, years});
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); }
 return new Period(year, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}); }
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ;
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType());
return new Period(new int[]  {0, years, 0, -1});
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType());
 return new Period(new int[] {0, years, 0, 0, 0, 0, 0}, PeriodType.standard()); }
 return new Period(0, years);
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0}); }
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } )
 return new Period(new int[] {0, 0, 0, 0, 0, 0}); }
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0}, PeriodTypeStandard());
 return new Period(years(0}, PeriodType.standard());
 return - 1;
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType); }
 return new Period(new int[] {0, years, 0, 0, 0, 0}, PeriodType.standard()); }
return new Period(new int[] {years,  years, years, years, years, years});
 return new Period(new int[] {0 years, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] { years, PeriodType.standard());
return new Period(new int[] {years, years, years, years});
 return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); }
return new Period(new  int[] {0, years, 0});
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard});
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 } ) ;
 return new Period(new int[] {0, years, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0}, PeriodTypeStandard());
 return new Period({, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years, 0, 0, 0}); }
return new Period(new  int[] {0, years, -1});
 return new Period(new int[] {0, years, 0, 0, 0, 0, 0, 0}); }
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } )
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType ) ;
 return new Period(new int {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period));
 return new Period(new int[] {0, years, 0, 0, 0, 0}); }
 return new Period(new int[] {0, years, 0, 0, 0, 0}, PeriodType.yearStandard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0}, PeriodType.standard});
 return new Period(new int[] {0, years, 0, 0, 0, 0, 0}); }
 return new Period(new int[] {0 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 } PeriodType());
 return new Period(Type.standard());
 return new Period(int[] 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[0] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0 } ) ;
 return new Period(new int[] {0.0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years, 0, 0, 0, 0}, PeriodType.standard());
return  new Period ( years, years ) ;
return  new Period ( years ) ; }
 return new Period ( new int[] {0, years, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodTypestandard());
 return new Period(years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } )
 return new Period, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0}); }
 return new Period(new int[], 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 0, years, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0}, PeriodType});
return new Period(new int[] {years, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, years, years});
 return new Period(new int[] {-years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years, 0, 0}); }
 return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}); }
 return {0, 0}, PeriodType.standard());
 return new Period(new int[] { years));
 return years + 1;
 return new Period(0, years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(Year.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); } *
 return new Period(new int[], 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0 years, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0.0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType); }
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); } else
 return new Period(new int[] {0.0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}); }
 return new Period(new int[] {0 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({years}, PeriodType.standard());
 return new Period(year PeriodType.standard());
 return new Period(new int[] {0 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new  Period ;
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard });
 return new Period(new int[] {0.0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0,  0, 0, 0}, PeriodTypestandard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType}); }
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } PeriodTypeStandard());
 return new Period(new int[] {years, 0, 0, 0, 0, 0}); }
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 } )
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} years);
 return years(new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ;
 return new PeriodPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 0, 0}, PeriodType.standard());
return new Period(new  int[] {0 years});
 return new Period(new int[] {-0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0});
 return new Period(0}, PeriodType.standard());
return new Period(new int[] {years, years, years, years, years});
 return new Period({, 0, 0, 0}, PeriodType.standard());
 return new Period([]{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0}, PeriodType());
 return new Period(new int[] {0, 0, 0, 0, 0, 0}, PeriodType); }
 return new Period(0, years, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {years, 0, 0, 0, 0}, PeriodType.standard});
 return years(years);
 return new Period(new int[] {0 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, years } )
 return new Period(new int[] {years, 0, 0, 0, 0}); }
 return new PeriodType(years());
 return new Period(new int[] 0, years, 0, 0}, PeriodType.standard());
 return new Period ( new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 } ;
 return new Period(new int[] {0 years, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0}, PeriodType.standard});
 return new Period(new int[] {years, 0, 0, 0, 0, 0}, PeriodType}); }
 return new Period(new int[] {-1, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (years);
 return new PeriodImpl({0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {year}, PeriodType.standard());
 return new Period(new int[] { - 1, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 0, years, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0}, PeriodTypestandard());
 return new Period(new int[] {0 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] { - 1, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0}, PeriodType}); }
 return new Period(new int[] { - 1, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] { - 1, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0}, PeriodTypeStandard());
 return new Period(new int[] { years }, PeriodType.standard());
 return new Period(int PeriodType.standard());
 return new Period({0, years}, PeriodType.standard());
 return new Period(new int[] { PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0, 0}, PeriodType.standard()); }
 return new Period(int[] {0},PeriodType.standard());
 return new PeriodImpl({0, 0}, PeriodType.standard());
 return new Period(0, years));
 return new Period(new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0}, PeriodType.standard()); } else {
 return new Period(new int[] {0, years, 0, 0, 0, 0}, PeriodType}); }
 return new Period(new int[] {0 years, 0}, PeriodType.standard());
 return new Period(new int[] {0 years, 0, 0}, PeriodType.standard());
 return new Period ( years ) ; } return newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new PeriodImpl({0}, PeriodType.standard());
 return new Period(new int[] {0 0}, PeriodType.standard());
 return new Period(0, years PeriodType.standard());
 return new Period(new int[] {year, 0, 0, 0, 0, 0}); }
 return new Period(new int[] {0.0, 0, 0, 0}, PeriodType.standard());
 return new Period(int{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year, years);
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0}); } *
 return new Period(int[] {}, PeriodType.standard());
 return new Period(new int[] int {0, 0, 0}, PeriodType.standard());
 return new Period(0).withPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0}, PeriodType}); }
 return new Period(int years}, PeriodType.standard());
 return new Period(new int[] {0}{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(years PeriodType.standard());
 return new Period(int[] {0, years));
 return new Period(new int[] {0, years, 0}); }
 return new Period(new int[] {0 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0}, PeriodType());
 return new Period(new int[] {0,{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {0, years, 0, years});
 return new Period(new int[] 0, years, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0, 0, 0}); } *
 return new Period[] {0, 0, 0}, PeriodType.standard());
 return new Period(0, PeriodType.standard());
 return new Period(new int[] int {0, 0}, PeriodType.standard());
return new Period(new int[]  {0, years, 0, 0}());
 return new Period(0, years, years);
 return new Period(new int[] {0 years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, years}); }
 return new Period(new int[] {0, 0, 0, 0, 0}, PeriodType); }
 return new Period(0, years, int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] years, PeriodType.standard());
 return {}, PeriodType.standard());
return new Period(new int[] {years, 0, 0,  0, 0, 0}, PeriodTypestandard());
return new Period(new int[] {years, 0, 0, 0,  0, 0}, PeriodType.standard()); }
 return new Period(new int[] {0, 0, 0, 0, 0, 0}); } *
return new Period(new  int[] {0, years}());
 return new Period(int[] PeriodType.standard());
 return new Period(new int[] {, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0.0, 0}, PeriodType.standard());
 return new Period(new int[], 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, PeriodType.standard());
 return new Period(year, PeriodType.standard);
 return new Period(0, years;
return new Period(new int[] {years, 0, 0, 0,  0, 0}, PeriodType.yearStandard());
 return new Period(new int[] 0 {0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years, 0, 0});
 return new Period(int 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years, 0, 0}) }
return new Period(new int[] {years, 0, 0, 0}, PeriodType());
 return new Period(new bigint[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] { {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0 years));
 return (standard());
 return new Period(int[] { PeriodType.standard());
 return new Period(year(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years, 0, 0, 0, 0}); } *
 return 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years, 0, 0, 0});
 return new Period(int 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] int {0, 0, 0, 0}, PeriodType.standard());
 return new Period({year}, PeriodType.standard());
 return new Period(new int[] {, 0, 0}, PeriodType.standard());
 return new Period(0, years, -1);
 return (int) years;
 return new Period(new int[] {{0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0}); }
 return new Period().years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, new int] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years}); }
return new Period(0, years, 0, 0, 0);
 return new Period(new PeriodType.standard());
 return new Period(new int[] {0, years, 0, 0, 0}); } *
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0}, PeriodType.yearStandard());
 return new Period(new int[] {years, 0, 0, 0}); }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, PeriodTypestandard());
 return new Period(new int[] {0] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0}, PeriodType});
 return new Period(0, years); return newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0, 0}); } *
 return new Period(new int[] {years, 0, 0, 0, 0, 0}); } *
 return years(0}, PeriodType.standard());
 return new Period(new int[] { {0, 0}, PeriodType.standard());
 return new Period(year, years());
return new Period(new int[] {years, 0, years});
 return new Period({int years}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0}, PeriodTypestandard());
 return new Period(new int[] {0.0, 0, 0}, PeriodType.standard());
 return new Period(new int[][[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(NumberType.standard());
return new Period(new  Years());
 return new Period(new int[] {-0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0}, years);
 return new Period(int[] {0, years);
 return new Period ( ) ; return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({0, years, 0}, PeriodType.standard());
 return new Period(new int[][ {0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {0, years, 0, 0}, years);
 return new Period(new int[] {year,0}, PeriodType.standard());
 return Period(years, PeriodType.standard());
return new Period(new int[] {years, 0,  0, 0, 0}, YearTypeStandard());
 return new Period(new int[] {year));
 return new Period(0, years, new []int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years, 0, 0}, PeriodType.standard());
 return new Period(year, years PeriodType.standard());
 return new Period(new int[][ {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] { - 1, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0, 0, 0}, PeriodTypestandard());
 return new Period(new int[], PeriodType.standard());
 return new Period, 0, 0}, PeriodType.standard());
 return new Period(0, years).withPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years, 0, 0}); } *
 return new Period(new int[] PeriodType.standard());
 return new Period(new int[], 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, PeriodType.standard()); }
 return new Period(0, years}, PeriodType.standard());
return new Period(new int[] {years, 0, 0});
 return new Period(new int][]{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {>0}, PeriodType.standard());
 return new Period(0, years, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new PeriodImpl({years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}, PeriodTypestandard());
 return new Period(new int[] {0},{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( years ) ; return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return ( Period ) new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); }
 return new Period(new int[] {years, 0, 0, 0, 0}); } *
 return new Period(new int[] { {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(number PeriodType.standard());
return new Period(new  int[] {0, years, years}());
 return new Period(new int[] {0, years, 0}) }
 return new Period(0, years); new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {-1}, PeriodType.standard());
 return 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] int {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return years(PeriodType.standard());
 return new Period(int[] {, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, 0, int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(1, years, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0, 0}, PeriodType.yearStandard());
 return new Period(0, new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[][ {0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 0, years, 0}, PeriodType.standard());
 return new PeriodImpl({0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, years, 0, 0, 0});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.yearStandard());
 return new Period(new int[] int {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years(new int] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {0, years, years, years});
 return new Period(new int[] {-0, 0, 0}, PeriodType.standard());
 return new Period(int[] {0, years, 0, 0}); }
 return new Period(new int[] {years,0}, PeriodType.standard());
 return new Period({0, years, 0, 0}, PeriodType.standard());
 return new Period(new int[] 0 {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(LengthType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.standard());
return new Period(new  int[] {0, years, 0}());
 return new Period(new int[] {0));
 return new Period(new int[] 0 {0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0}, years());
 return new Period(0, years, years;
 return new Period ( years ) ; return new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, years});
 return new Period(year(0}, PeriodType.standard());
 return new Period(new int[] { -1, 0}, PeriodType.standard());
 return new Period(1, years));
 return new Period(new int[] {1}, PeriodType.standard());
 return new Period(0, years, 0,new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  int[] {0, 0, years});
 return new Period ( years ) ; return Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years)(newint[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Years(0}, PeriodType.standard());
 return new Period(new int[] {0, 0, years}); }
 return new Period(YearType.standard());
 return new Period(new int[] {, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] int[]{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0,  0, 0}, PeriodType.standard()); *
 return years, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0x{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(MonthType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0, 0}, PeriodType.yearStandard());
 return new Period(new int[] { - 1, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0,  0, 0, 0}, YearTypeStandard());
return new Period(new int[] {0, 0, 0, 0, 0});
return new Period(int[] {0, years, -1});
return new  Period(0, years, 0, 0);
 return new Period(int[] {0, PeriodType.standard());
 return new Period(new int[0], years, PeriodType.standard());
 return new Period(new int[][ {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] (new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[]){years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0.0}, PeriodType.standard());
 return new Period(year(years));
 return new Period(new int[ {0},PeriodType.standard());
 return Period(years));
return new Period(new int[] {years, 0, 0,  0, 0}, PeriodType.standard()); }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, years);
 *
return new Period(new  int[] {0, -1});
 return new Period(new int[] {0,int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0}, PeriodType});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(years));
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}, PeriodTypestandard());
 return new Period(new int[] {0{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] { years, PeriodType.standard());
return new Period(new  int[] {0, years, 1});
return new Period(new int[] {years, 0, 0, 0,  0, 0}, PeriodType.standard()); *
return new Period(new int[] {0, years, 0, 0}, Years());
 return new Period(new int[0]years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, 0;
return new Period(new int[] {years, 0, 0, 0,  0, 0}, PeriodType.yearstandard());
 return new Period(new int[] {1500}, PeriodType.standard());
 return new Period(0, years, );
 return new Period(new int[] int {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( years ). days(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ {0, years, 0});
 return new Period(new int[] {[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, 0);
 return new PeriodImpl({0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(year));
 return ( Period) years;
return  new Period ( years, years, years ) ;
return new Period(new int[] {years, 0, 0, 0, 0}());
 return new Period(new int[] {0 1}, PeriodType.standard());
return new Period(0, years, 0, -1);
 return 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {}, years));
 return 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ {0, years, 0, 0});
 return new Period(int(years));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(year));
 return new Period(new int[] {d0}, PeriodType.standard());
 return new Period(());
 return new Period(int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(1, years);
 return new Period, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {0, years, 0, 0}, years});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0}, PeriodType.standard()); }
 return new Period(new int[0],years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years PeriodType.standard());
 return new Period(int 0, years);
return new  Period(0, years, 0, years);
 return new Period(new int[] {0}}, PeriodType.standard());
 return new Period(int years, PeriodPeriodType.standard());
 return new Period(0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, 0, 0, 0});
 return (int[])new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[]  {0, years, 0, years}());
 return new Period(new int[] years, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {int] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, years, years, years, years}());
 return new Period(year, PeriodPeriodType.standard());
return new Period(int[] {0, years, years});
return new Period(new int[] {0, years, 0, 1});
 return new Period(new int[] {1,0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0} PeriodType.standard());
 return new Period(new int[0, years));
 return new Period(year).withPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, new bigint[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[0}, PeriodType.standard());
 return new Period(new int[] 0,PeriodType.standard());
 return new Period, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 0 {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] {, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(1, years, years);
 return new Period(0, years, years());
 return new Period(new int[] {, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, years});
 return new Period(year, years;
 return new Period(0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return years(years));
return new Period(new int[0], years);
 return new Period(int[] { years));
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}, years);
 return new Period(new int[] (years));
 return new Period(new int[[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( years ). with(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, years, years, years}());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, PeriodType.year(year));
 return new Period(years, 0 PeriodType.standard());
 return new Period(int[] {0, years, 0}); }
 return new Period(yearCount(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  int[] {0, years}, PeriodType());
return  new Period ( [ int ] { years } )
 return new Period(new int[] {][] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(years,0, 0}, PeriodType.standard());
 return new Period(new int[] { {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] years, 0}, PeriodType.standard());
 return { years}, PeriodType.standard());
return  new Period ( years + 1 ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0}, PeriodType.yearstandard());
 return new Period(new int[] {0,new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, years, 0, 0});
return new Period(new int[ 0, 0, 0, 0], years);
 return new Period int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new java.lang.int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, years, 0, 0}, PeriodType());
 return new Period(0, years, -1));
 return new Period(new int[], 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  int[] years());
 return new Period(new int[] {0, years});
 return new Period(1, years}, PeriodType.standard());
 return new Period(new int[] {}(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( years ) ; } return Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(long PeriodType.standard());
return  new Period ( years, years )
return  Period. standard ;
 return Period.year());
return new Period(new int[] {years, years}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0, 0}, PeriodType.standard()); *
 return new Period(int years, new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(YearType.standard);
 return new Period(new int {}, PeriodType.standard());
return new  Period ( years, PeriodType. standard ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(year)});
 return new Period(new int[] years, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}, years);
 return new Period(0, 0}, PeriodType.standard());
 return new Period(new int[0, 0, 0}, PeriodType.standard());
 return new Period(new int[0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years}) }
 return new Period(new int[] new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0});
 return new Period(new int[] year,PeriodType.standard());
 return new Period(periodType.standard());
 return 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0, 0}, PeriodType.yearStandard());
 return new Period(new int[] { years);
 return new Period(int years;
 return new Period(0, years new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year) { return newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period, 0}, PeriodType.standard());
 return new Period(year);
 return ( Period ) return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ 0, 0, 0, 0, 0]);
return  new Period ( years, 0, years ) ;
 return new Period(new int[] {1,0, 0, 0}, PeriodType.standard());
 return new Period(int years, StandardPeriodType.standard());
 return new Period(year, Year.standard());
return  new Period ( years, years, years )
return new Period(new int[] {years, years}());
return new Period(new int[ {0, years, 0, 0}]);
 return (long) years;
 return new Period(int[] {0, years}); }
 return new Period(new int[0, 0}, PeriodType.standard());
 return {, 0}, PeriodType.standard());
return new Period(new int[] {0, 0, 0, 0});
 return new Period(new int[] {1,0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, 0, 0, 0));
return new Period(new  int[] {0, * years});
 return new Period ( years ). months(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int {}, PeriodType.standard());
 return new Period ( years ) ; } new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year, years, years);
return new Period(new int[] {years, 0, years, years});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, PeriodType.year(year)});
 return new Period(int years); return newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0 PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}, PeriodType.year(year)});
 return Period({0, 0, 0, 0, 0, 0}, PeriodType.standard());
return  new Period ( 0, years )
return new Period(new int[] {years, 0, 0, 0, 0, 0}, PeriodType.year-based());
 return new Period ( years ). withYears(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[][]int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}, PeriodType.year(year));
 return new YearBasedPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {0, years}); } *
 return Period({0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0}, PeriodType.year(year));
 return new Period(StandardPeriodType.standard());
 return new Period(year) years;
return new Period(new int[] {years, 0,  0, 0}, PeriodType.standard()); }
 return new Period(0); new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}, years());
 return new Period(int years)(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[ {0,0, 0, 0, 0}, PeriodType.standard());
 return new Period(1).withPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(1, years, 0}, PeriodType.standard());
return new Period(new int[ {0, years, years});
 return new Period(new int[] {1,0, 0, 0, 0}, PeriodType.standard());
 return new PeriodType(year());
 return new Period ( ) ; } return newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new java.int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0}, years());
 return new Period(new int[] {0, years)); }
 return new Period[][ {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}, PeriodType.year-based());
 return new Period(new int int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years); } return newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return  new Period ( years, 0 ) ;
 return new Period({0, years, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {-0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[]years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] years.standard());
 return new Period(0, new []int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int []years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years) { returnnew Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, 0, 0, 0, 0));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year-based());
 return new Period(int 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year));
 return new Period ( years ) ; } return createPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {1,0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0} PeriodType.standard());
 return new Period(year), years;
 return new Period(DurationType.standard());
 return new Period(new int[] { {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( years ) { } return newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period.years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year-based());
 return new Period(new int({0}, PeriodType.standard());
 return new Period(int years, DefaultPeriodType.standard());
 return new Year, 0, 0, 0}, PeriodType.standard());
 return new Period(int years, Period.standard());
 return new Period(new int[] {1,0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 1, 0, 0, 0, 0}, PeriodType.standard());
 return new Period ( years, years, new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int(year));
return new Period(new int[] {years, years, years}());
 return (year);
 return new Period(year)(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year(year));
 return new Period(0, -1);
 return new Period(new byte[] {0,years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period({0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}, PeriodType.yearstandard());
 return new Period(0, years).with(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new Period ( years ) ; }
 return ({0}, PeriodType.standard());
 return new Period(new int[1] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return years ;
 return (int[]) Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ {0, years, 0, 0}});
return  new Period ( years, 0, years )
 return new Period(new int[] {}, years);
 return new Period(0, years, years);;
 return new Period(new long[] {0,0, 0, 0}, PeriodType.standard());
 return new Period(new int[0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, PeriodPeriodType.standard());
 return new Period(years{0}, PeriodType.standard());
 return new Period(this, new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}, years());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(year, years));
 return new Period(new int[] {1,0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0}, years});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, years());
 return new Period(years, years());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(years));
 return new Period(1, years, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0}, years);
 return new Period(new long[] {0,0, 0, 0, 0, 0}, PeriodType.standard());
 return create(years, PeriodType.standard());
return new Period(new int[] {years, years, months, days, weeks});
 return new Period(year); return newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {year, years}); }
 return new Period(new int[] 1, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {1.0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year, years, years;
 return new Period(new int[ {0,0, 0, 0}, PeriodType.standard());
return new Period(new int[ {0, years, 0, -1});
 return new Period(int years); new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] 1, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ years]);
 return new PeriodImpl({0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new IntPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] 0, 0, 0}, PeriodType.standard());
 return new Period(year.year());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(years); });
 return new Period(new int[] {1.0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, PeriodType.standard()); *
return  new Period ( ) ;
return new Period(new int[] {years, 0, 0, 0}, years);
 return new Period(array{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0} PeriodType.standard());
 return new Period(0, years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {1,0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] {0}, PeriodPeriodType.standard());
 return (int)new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new long {0, 0, 0, 0}, PeriodType.standard());
 return new Period(int) new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years, PeriodTypestandard());
 return new Period(int years).withPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (int[0])new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(1, years, 0, 0}, PeriodType.standard());
 return new Period(Years(0}, PeriodType.standard());
 return Period({0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] { years);
 return new Period(new int[] 1, 0, 0}, PeriodType.standard());
 return Period(years());
 return new Period[] {0, 0}, PeriodType.standard());
return  new Period ( [ int ] { years } ;
 return Period.years());
 return years(year);
 return new Period(new int[ 0] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years, years);
 return new Period(new long[] {0,years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(1, years, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] {year));
 return new Period(1, years, );
 return new Period(1,PeriodType.standard());
 return new Period(new int[ ][] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new long[] {0,0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0}, Years());
return new Period(new int[] {years, 0, 0, years}());
 return new Period(int[] {, 0}, PeriodType.standard());
 return new Period(int 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new byte[] {0,0, 0}, PeriodType.standard());
 return new Period(int years, 0, 0, 0}, PeriodType.standard());
 return.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}, Years());
return new Period(new int[] {years, 0, 0, -1});
 return new Period(0, years);;
 return new Period(0), Years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ 0, years]);
return new Period(new  int[] {year});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year));
 return new Period(int {0}, PeriodType.standard());
 return new Period(int[] {, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years), Years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return create(PeriodType.standard());
 return new Period(new long[] {0,0, 0, 0, 0}, PeriodType.standard());
return new Period(new  years());
 return new Year, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, []int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(years)});
return new Period(0, years, years, years);
 return new Period(year) ( PeriodType.standard());
 return new Period(0, years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new byte[] {0,0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0}());
 return new Period(null,PeriodType.standard());
return new Period(new int[ {0, years}, years]);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.standard()); }
 return new Period(year, years, PeriodType.standard());
 return new Period(null, years);
 return new Period(new int[ ][] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(1, years, 0, 0, 0}, PeriodType.standard());
 return new Period(0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] { Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {1,years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new long {0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(year); });
 return new Period(new int[] {0, years})
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new Period ( years ) ;
 return new Period(1, years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new  Period(int[] {0, years});
 return new Period(new long[] 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {years}); }
 return new Period(new int 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(years, years));
return  new Period ( years + 1 )
 return new Period(new int[] {0, years)}); *
 return new Period(new long {0, 0}, PeriodType.standard());
 return new Period(int[] {0, years}) }
 return new Period(new long {0, 0, 0, 0, 0}, PeriodType.standard());
 return new int, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, years, months, days});
 return new int[] {0, 0, 0}, PeriodType.standard());
 return new Period(year, years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new long[] {0, 0}, PeriodType.standard());
 return new Period(new long {0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0}, PeriodType.year(year));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.yearstandard());
 return new Period(0, PeriodPeriodType.standard());
 return new Period(0, years);Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ {0, years}]);
 return new Period[0, years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return period(years, PeriodType.standard());
 return new Period(new long[] 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return  new Period ( years, 0, 0 )
 return new Period(new int[0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({year, 0}, PeriodType.standard());
 return new Period(new long[] {0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(years););
 return new Period(int[] {0, -years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}, Years());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0});
 return new Period(new int[] 1, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year{0, 0}, PeriodType.standard());
 return new Period(years);;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, Years());
 return new Period[int {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new int[][] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years}());
return new Period(new int[ {0, years, years}]);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.years(year));
 return new Period(int[] years, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ 0, 0, 0], years);
 return new Period(DefaultPeriodType.standard());
 return new Period(int[]) years;
 return Period({0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  int[] {1, years});
 return new Period(new long[] {}, PeriodType.standard());
 return new Period[0, years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(BasicPeriodType.standard());
 return new Period(0, new bigint[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new long[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year, DefaultPeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return new Period ( years ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType);
 return new Period(new tinyint[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new long {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (int[] {0})new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new long[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period(years);
 return new Period(new long[] 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new long {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(years;
 return new Period(new int[];int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (int[][])new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new PeriodImpl(years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new byte[]int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] years, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(years));
 return new Period(new int 0, 0, 0, 0}, PeriodType.standard());
 return (year)new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ {0, years, years, years});
 return new Period(int years());
 return new Period(2, years, PeriodType.standard());
return new Period(int years, int years);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new Period ( years, 0 ) ;
return new Period(new int[] {years, 0, years}());
 return new Period(year, years);;
 return new Period[][ {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ 0, 0], years);
 return new Period(0, 0, 0}, PeriodType.standard());
 return new Period(year) new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({ years, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0}());
 return new Period(new long[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new Year({0}, PeriodType.standard());
 return new Period((years));
return new Period(new  int[] {0});
 return new Period(new int[] {years}) }
 return new Period(years, PeriodPeriodType.standard());
 return new Period() years;
 return new Period.Years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(year), years);
return new Period(new int[ {0, years, -1});
 return new Period(int[] {0, 0, 0, 0, 0}, PeriodType.standard());
 return years, 0, 0, 0}, PeriodType.standard());
return new Period(new int[0], years, years);
 return new Period ( years ) ; } return period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int64[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(year, years); });
 return 0, 0}, PeriodType.standard());
 return new Period(int[] {0, years});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( years ) ; }
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}, YearTypeStandard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}());
 return new int, 0, 0, 0}, PeriodType.standard());
 return years, 0, 0, 0, 0, 0}, PeriodType.standard());
 return ( Period) Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new int[] {year}) }
 return new Period[ {0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new Period ( years, years ) ;
 return (period) new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (years));
 return new Period[0, years, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType);
 return new Period[ {0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(year, years););
 return new Period(int[] {0, 0, 0, 0}, PeriodType.standard());
 return new PeriodImpl {0, 0, 0}, PeriodType.standard());
 return new Period(new int[1}, PeriodType.standard());
 return new Period(0, years) { returnnew Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}());
 return new Period {, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, 0, 0));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( years, 0 ) ;
 return new Period(BasePeriodType.standard());
 return (long)new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(*PeriodType.standard());
 return new Period 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( years, years ) ;
return new Period(new int[ {0, years, 0}, 0});
 return new Year, 0, 0}, PeriodType.standard());
 return new PeriodImpl(0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0}, years});
 return new Period(year); Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(years, years;
 return new Period(int years,new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years,new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0}());
 return new PeriodImpl {0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, years, 0});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodTypestandard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.years(year));
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0} PeriodType.standard());
 return new Period 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, Years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 new Period{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ 0, 0, 0]);
return  new Period ( years ) ; } }
return new Period(new int[ 0, -1]);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, PeriodType);
 return new Period(0, years(new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(null, years, PeriodType.standard());
 return new PeriodImpl({0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new PeriodImpl(years, PeriodType.standard());
return new Period(new int[] {years, 0});
 return new PeriodImpl {0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}, Year());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(year, years));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}, PeriodType);
 return new Period[][ {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(years, years); });
 return new Period(int years(new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0} PeriodTypeStandard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( years ) ;
 return New Period(new int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new long[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, years, years, years));
 return new Period[ {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year,0, 0}, PeriodType.standard());
 return (int[][)new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return {0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  int[] {0}());
 return new Period(int 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new PeriodImpl ( years ) ; }
return new Period(0, years, 0, years); }
 return New Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  int[] {1 years});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return this ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return new Period ( years ) ; }
 return new Period(*(years));
return new Period(new int[ 0] { years });
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { years, years });
 return (Duration)new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period[int {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period(years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new byte[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return New Period(new int[] {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Year, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.yearMonth());
 return new Period({ years, 0, 0, 0}, PeriodType.standard());
 return new Period(years}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0,  0}, Years());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(years, years););
 return new int int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years, 0)new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({1, 0}, PeriodType.standard());
 return new int, 0, 0}, PeriodType.standard());
 return new Period(new byte[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ {0, years, 0}});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.yearMonth());
 return Period(0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(year), years);
return new Period(new int[] {years, 0}());
return new Period(new int[] {years, 0, 0, 0,  0}, years});
 return new Period(int years),new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, -1});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years));
 return new Period(year(new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(1, years, -1);
 return new Period(int years)new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return null ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year( years );
 return new Period(years.standard());
 return New Period(new int[] {0, 0, 0, 0}, PeriodType.standard());
return new Period(0, years, - years);
 return new Int[] {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years, years, years, years));
 return New Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, years, months});
 return new Period(new SimplePeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years)new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period#Years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0), years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new Period ( years ) ; } }
return new Period(new int[] {years, 0, 0, 0,  0} PeriodTypeStandard());
return new Period(new int[] {years, 0, years, 0});
 return new Period(Duration.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, years, years));
 return new Period(0, years, 0,new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years)*new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0}, PeriodType.standard()); } }
 return ({0, 0}, PeriodType.standard());
 return new Period(new int[]] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return {0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  1}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.noStandard());
 return new Period(new byte[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.standard()); return new Period();
 return New Period(new int[] {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, years),new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, 0, years)});
 return (years, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years, years, years));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); } }
 return 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0}, years});
 return period(years));
 return years(year));
 return new SimplePeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int 0, years) }
 return (static Period) newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}, PeriodType);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.standard()); return this ; }
 return new Period({ years, 0, 0}, PeriodType.standard());
 return new Period(new int[] years) {
 return Period({0, 0, 0}, PeriodType.standard());
 return new Period(new DatePeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  1}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0}, years);
return new Period(new int[] {years, 0, 0, 0, 0, 0,  PeriodType.standard());
 return new Period(new int)Year(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, 0, years)) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new Period(year, years); }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, 0, 0); });
return new Period(new int[] {years, 0, 0, 0, 0,  0}, Years.standard());
 return new Period(new Int[] {0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0}, YearType());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years, 0, 0));
 return new Int[] {0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(years, 0));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(year, years)});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { years: years });
 return new Period(, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return years + 1 ; }
 return new YearMonthPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return year(new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  PeriodType.standard());
 return new Period(new int[] years); }
return new Period(new int[] {years, 0, 0, 0,  0}, YearType());
 return new Period(int[] {0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, 0, 0, 0); });
 return new Period(0, years, 0);new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period[ {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int[] years{0}, PeriodType.standard());
 return new Period(new byte[] {0, 0, 0, 0}, PeriodType.standard());
 return new Period 0, 0, 0}, PeriodType.standard());
 return new Period(new short[] {0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}, Year());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, 0, years); });
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years)});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, 0, years, years));
 return ( Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0, 0, 0, 0}, PeriodType.standard());
 return New Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period({0, 0}, PeriodType.standard());
 return new int64[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(year(years)));
 return new Period(int[] {years}) }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( years, ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years, years));
 return new Int[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  0}, YearTypestandard());
return new Period(new int[] {years,  years, -1});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new Period(year, years);
 return new Period(1,new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new static int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(an int {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({year, 0, 0, 0}, PeriodType.standard());
 return new Period(an int {0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}, Year());
 return new PeriodYear(0}, PeriodType.standard());
 return new Period(long years));
 return new Period(new byte[] {0, 0}, PeriodType.standard());
 return new Period(Years(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(, 0, 0, 0}, PeriodType.standard());
 return new Period 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(0), newPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period {, 0, 0}, PeriodType.standard());
 return new Period({1, 0, 0}, PeriodType.standard());
 return new Period(new PeriodPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(*, years);
 return new Period(an int {0, 0, 0, 0}, PeriodType.standard());
 return Period(year, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(0, years, years)) ;
 return new Period(new int)Month(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period().withPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, years)) ;
 return new Period(new short[] {0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year)});
 return new Instance(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new byte[] {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({year, 0, 0}, PeriodType.standard());
 return new Period(0, years)||new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(Length.standard());
 return new Period*(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return ( Period ) year ; }
 return new Period {, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(int) years;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(year, years)); }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return new Period ( years, 0 )
 return year(years);
 return New Period(new int[] {0, 0, 0}, PeriodType.standard());
 return new Period(long years, PeriodType.standard());
 return new Period[ {0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year);withPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return New Period(new int[] {0, 0}, PeriodType.standard());
 return new Period({1, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int 0, years) {
 return new Period(int 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return ( Period(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period[] {1, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( 0, years ) ;
 return new Period(int years) ; }
 return new Period(?int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new PeriodImpl({0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new byte[] {0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(Years());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year(year, years)));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}, PeriodType.standard);
 return new PeriodImpl(0, 0}, PeriodType.standard());
 return new Period(int years); } *
 return Years(years);
 return new Period(, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({1, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Year, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) return years ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year), years);
 return new Period(long years);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()})); return new Period ( years ) ;
 return new PeriodImpl({0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(, 0, 0}, PeriodType.standard());
 return new Period 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years) { }
 return new (PeriodType.standard());
return  ( Period ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()})); return new Period ( years ) ; }
 return new Period[](new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0, 0}());
 return create(year, PeriodType.standard());
 return new YearsBasedPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return years * months;
 return int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new short[] {0, 0, 0, 0}, PeriodType.standard());
 return (int)Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({year, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.standard()); return new Period ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years); });
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years, 0));
 return new Period({year, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new Period ( year ) ; }
 return new Period(0, years)|new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(int years) } *
 return new Int[]{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(new short[] {0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0} PeriodType());
 return new Period(long {0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0, years, years)});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return new Period ( years, ) ;
 return new long[] {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (Years));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return PeriodType. standard ( ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new PeriodImpl ( years ) ;
 return new Period.Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(0, years, years)});
 return new Period 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Years, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return new Period ( years, ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( years, 0 )
 return years * years;
 return new Period(int years) {} }
 return New Period(int years);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year(year, years);
 return new Period(year years);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, year, years)) ;
 return new Period(1, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years, years)});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years), years);
 return new PeriodType().standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(years, years));
 return new PeriodImpl {0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({year, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (int[] *)new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}"); return new Period ( years ) ; }
return  Period. years ;
 return new Period((int[]{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({1, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return period ;
 return new Period({1, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() { years, years, years });
 Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return year + years;
 return new Period{0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, years, 0, 0));
return  New Period ( years ) ;
return new Period(new int[] {years, 0, 0, 0,  -1});
 return New Period(standard());
 return new Period 0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period({1, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[ { years });
 return new Period {, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()})); return new Period ( years, 0 )
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(0, years, years)); }
 return new Period(_, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return {, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()})); return PeriodType. standard ( ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years)));
 return new PeriodImpl(new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return period(PeriodType.standard());
return new Period(new int[], years);
 return new Period(long {0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  int years);
 return years - 1;
 return new Period[][ {0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(number {0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, years, 0));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return ( Period ) new Period ;
 return new Period {, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return ( Period ) years ; } }
 return new bigint[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return years ; } } ;
 return new Year, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (year));
 return new Years, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(long {0, 0, 0, 0}, PeriodType.standard());
return new Period(0, years); }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return years + months ; }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, years, years, years));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year), years, years);
 return new Period(Years, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0}, PeriodType);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return year ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return years ; } }
 return new int, 0}, PeriodType.standard());
 return new Period(, 0}, PeriodType.standard());
 return years}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, years), 0);
 return new Period(Years));
return new Period(0, years); *
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() { years, years });
return new Period(new int[int years]);
 return new Period(new short[]{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year); });
 return this.years(new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new PeriodType(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return {, 0, 0}, PeriodType.standard());
 return new Period(new long] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period {, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { years: years + 1 });
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year, years), 0);
 return Years(standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, years), years);
 return new years, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, years, years));
 if (year == -1) {
 return new year, 0, 0}, PeriodType.standard());
 return new long[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return year(PeriodType.standard());
 return new int, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Years.standard());
 return new year, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}, PeriodType});
 return new Period(yearCount, PeriodType.standard());
 return new years, 0, 0}, PeriodType.standard());
 return new Period(uint[]{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() { years, 0, 0 });
 return new PeriodImpl {0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return "{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (year, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()})); return new Period ( years, years )
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return ( Period ) new Period ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return static Period ( years ) ;
 if ( years == 0 ) {
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return years ; }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, years, year, years));
return new Period(new int[] {years, * years});
 return new PeriodType.(standard());
 return {, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() { years, years, 0 });
 return new int][] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 if ( years!= - 1) {
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( years ) ; } }
 if ( years < 0 ) return ;
 if ( years < 0 ) {
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return years ; } } -----------------------------------------------------------------------
 return new Period[][] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return years, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return years ; } ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()} years);
 return new Period(Years);
 if ( years > 0 ) {
return new Period(new int[] {years, 0, 0, 0, 0,  -1});
 return new Period(.int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 if ( years!= 0 ) {
 return new Year, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period.0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(year, years); }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { years, years };
return new Period(new int[] {years, years}));
 return + years;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(years);});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return new Period ( year ) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { year: years });
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, years, years), years);
 return Period.0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(.standard());
 return new static Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return - 1 ;
 return new Period(new byte] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return PeriodType. standard ;
 return Period.0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return years, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return years + 1 ; } }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}});
 return New Period(years());
 return new BasicPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) { return years;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.standard()); } }
return new Period(new int[0], years); *
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.year(year, years, year, year));
 return new Period([int] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  long[] years);
 return new Period(long[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return "{0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return {year}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( years )
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() { years, years }));
 return new Period(][] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new StandardPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return ( Period) new (int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(...int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period.(standard());
 return new Period {}, PeriodType.standard());
return new Period(new int[] {years, 0 years});
 return new Period {, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}});
 return (Years);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( year ) ;
 return (+ years);
 return new Years());
 return new Period(new short] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} years());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() *);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(year) *);
return  ( Period )
return new Period(new int[] {years, 0, 1});
return new Period(new int[] {years, 0, 0, 0, 0, 0,  0}});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return years + 1 ;
 return new Period.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return ( Period ) years ; } }
 return new Period(0));
return  years ; }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return ( Period ) this ;
 return 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return new Period();
 if ( years < 0 ) { }
 return years, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return the period ;
return new Period(new int[] {years, 0, 0, 0, 0,  0}});
return new Period(new int[] {years, 0, 0, 0, 0,  years});
 return ({0, 0, 0}, PeriodType.standard());
 return new YearPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() { years, 0, years });
return new Period(new int[0]) ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return new Period ( )
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return this ; }
 return {, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period($, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) return this ;
 return "{0}, PeriodType.standard());
 return period(0, 0}, PeriodType.standard());
 return new int, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  years});
 return period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0,  years}());
 return Period.0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodTypeStandard);
 return new Bigint[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.*());
 return "{0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new  Period ( {
 return new (int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() }); return null ;
 return new Period{0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() { years, years }); }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.standard);
 return Year(0}, PeriodType.standard());
 return New Period(int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return ( Period ) years ;
 return 1, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() }); return years ;
 return period(0, 0, 0}, PeriodType.standard());
 return new Uint[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.year());
 return - years;
 #-----------------------------------------------------------------------
 years(0}, PeriodType.standard());
 return Years(new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Year, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) * ;
 return years+new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new  Year());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() }); return period ;
 return new Years, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return the period ;
 if (year == 0)
 return "{0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Period.0, 0, 0}, PeriodType.standard());
 return Year.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return Period. standard ;
 return "{0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(), years);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) ; } -----------------------------------------------------------------------
 return new Period.<years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(year[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return 1, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int() years);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  YearTypeStandard());
 return (new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 if (year!= 0)
 return ({0, 0, 0, 0}, PeriodType.standard());
 return years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years}, years);
 return period(0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new int, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return period(0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  0}");
return new  Period(year); }
return new Period(new  long years());
 return *new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(short[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 * <p> *
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return null ; }
 return Period{0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); *
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()}); return period ; }
 return Years(0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) return null ;
 return ({0, 0, 0, 0, 0}, PeriodType.standard());
 #----------------------------------------------------------------------- *
 return new Period{0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.standard);
 return years(standard());
 return period(0, 0, 0, 0}, PeriodType.standard());
 return (*PeriodType.standard());
 * <p>
 return Period.0, 0, 0, 0}, PeriodType.standard());
 if ( years == 0 )
 return years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period().years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period{0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.basic());
return new Period(0 years);
 return period(years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  0}");
 return (Years());
 return period(0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years}));
 return new Period{0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.year());
return new Period(new int[]);
 return new Year());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType.regular());
 return Period{0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) return year ;
 return "{0, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return {, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  MonthTypeStandard());
return new Period(new  int[]());
return new Period(new int[] {years, 0, 0}});
 return 1, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() });
 new Period({0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(}, PeriodType.standard());
 return new Period{0, 0, 0, 0}, PeriodType.standard());
return  null ;
 return years({0}, PeriodType.standard());
 return 1, 0, 0}, PeriodType.standard());
return new Period(yearCount);
 return new Year, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() 0);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.basic());
 return 1, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0}});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType.Standard());
return new Period(new int[] {years, 0, 0, 0, 0}});
 return 1, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return 1*new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return {, 0, 0, 0, 0, 0}, PeriodType.standard());
 return * years;
 new int, 0, 0, 0, 0}, PeriodType.standard());
 return "{0, 0, 0, 0}, PeriodType.standard());
 return "years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return  year ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodType});
return new  Period ( ;
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} Period());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) 0;
 return "{0, 0, 0}, PeriodType.standard());
 return Year(0, 0}, PeriodType.standard());
 return year, 0, 0, 0}, PeriodType.standard());
 * -----------------------------------------------------------------------
 return new year, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return New PeriodType.standard());
return new Period(new int[] {years, 0}});
 return ({years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 * *
 if ( years ) { }
 return (0, 0}, PeriodType.standard());
 return new Period{0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  Period());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return ;
 return year}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} year);
 return new Years, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (Years, PeriodType.standard());
 return periodType.standard());
 return year, 0}, PeriodType.standard());
 return new long] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return this ; } }
 return 0;
 return [] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return ({}, PeriodType.standard());
 return year));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); return years ; } }
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  1});
 return period({0, 0, 0, 0}, PeriodType.standard());
 return new Period<int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return 0);
 return ({0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return period({0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} 0);
return new Period(new int[] {years, 0, 0, 0, 0, 0,  1});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()} years); *
 #----------------------------------------------------------------------- } *
return new Period(new int[] {years, 0, 0, 0, 0}");
return new Period(new int[] {years, 0, 0, 0, 0, 0}");
 return create(years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (Year.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  1});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType});
return new Period(new int[] {years, 0, 0, 0,  1});
return new Period(new int[] {years, year});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} YearType());
return new Period(new int[] {years, 0, 0}; });
return new Period(new int[] {years, 0, 0, 0}; });
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0} PeriodType));
return new Period(new int[] {years, 0, 0,  1});
 return ({0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard() * years);
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0},  PeriodStyle());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  1});
 return "{0, 0}, PeriodType.standard());
 return 1, 0}, PeriodType.standard());
return  this ;
 return ({0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return year);
return new Period(new  years()); *
 return year, PeriodType.standard());
return new Period(new int[] {years}");
return new Period(new int[] {years, 0, 0, 0}");
 return new Period({int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0}));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  years});
return new Period(new int[] {years, 0, 0, 0, 0, 0}));
 return New Period(PeriodType.standard());
 * ----------------------------------------------------------------------- *
 return new Period({PeriodType.standard());
 return new Period(_PeriodType.standard());
return new Period(new  years);
 return ((PeriodType.standard());
 return (0, 0, 0}, PeriodType.standard());
 return {"years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 * (years) {
 return new Year(0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(0));
 return Period({years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period{0, 0}, PeriodType.standard());
 return 0));
 return create(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new byte] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard); }
 return 0, PeriodType.standard());
 * <br>
 #----------------------------------------------------------------------- } {
return new Period(new int());
 * (year) {
 * returnnew Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period{0}, PeriodType.standard());
 return new short[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return 1));
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()) * *
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  years});
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard()); } ;
 return New Period.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard(), years));
 new long[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new  Period {
 return $(standard());
 return new byte[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return 1;
 return new [] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0,  year});
 return this));
 PeriodType.standard());
 * Example:
 return year());
 return new short] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 new long] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0,  year});
 return period{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return Years());
return new Period(new int[]  year);
return new Period(new int year());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0,  year});
 return new Period((new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0,  year});
 return int] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return 1);
 return (0, 0, 0, 0}, PeriodType.standard());
 return Period[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return long[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new period{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0,  year});
 return createPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return 1, PeriodType.standard());
 return withPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return new Period(-new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 create(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return null);
return new Period(new int[]  year());
 return (0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[]  0);
 return New Period{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years,  years})
 period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 #----------------------------------------------------------------------
 return months());
 return (0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (0, 0, 0, 0, 0}, PeriodType.standard());
 Return Period.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.*());
 return new Year{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodTypeStandard);
 return &int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return (int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return asPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return fromPeriod(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 return weeks());
 return []int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 New Period{years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 returns new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 Return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
 * }
 * *new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());
