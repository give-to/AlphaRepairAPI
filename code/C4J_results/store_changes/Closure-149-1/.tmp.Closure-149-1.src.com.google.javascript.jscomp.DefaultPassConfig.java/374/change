 if (options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls) {
 } if(options.markNoSideEffectCalls) {
 if (markNoSideEffectCalls) {
 } if (markNoSideEffectCalls) {
 } else{
} else if (options) {
} else if (options.markNoSideEffectCalls) { passes.add();
} else  { passes. add ( ) ;
} else if (options.markNoSideEffectCalls) { passes.add(mark);
} else if (options.computeNoSideEffectCalls) {
 } else { passes. add(markNoSideEffectCalls); }
} else if (options.markNoSideEffectCalls) { passes.add(markCall);
 } else { passes.add(mark); }else if (options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls) { passes.add(); }
} else  { passes. add ( mark ) ;
} else if (options.markNoSideEffectCall) {
} else if (options.markNoSideEffects) {
} else if  (options.markNoSideEffectCalls)
 } else { passes. add(markNoSideEffectFunctions); }
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); } else { passes = [ ] ;
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); } else { passes = null ;
 } else { passes. add(markNoSideEffect ) ; }
 } else if (options.markNoSideEffectCalls) { passes.add(markNoSideEffectCall);
} else  { passes = [ ] ;
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); } else { passes. add ( )
} else if  (options.chain) {
 } else { passes. add(markPureFunctions); } else { passes. add(markNoSideEffectCalls);
 } else if (options.markNoSideEffects) { passes.add(markNoSideEffects);
 } else { passes. add ( markNoSideEffectCalls ) ;
 } else { passes. add(markNoSideEffect ) ;
 } else if (options.markNoSideEffectCalls) { passes.add(markPureCalls);
 } else { passes. add(markPureFunctions); } else { passes. add(markNoSideEffectFunctions);
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); } else { pass ( ) ;
 } else if (options.markNoSideEffects) { passes.add(markNoSideEffectCalls);
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); passes. add(markPure);
 } else { passes. add(markNoSideEffects); }
 } else { passes. add(markNoSideEffectFunctions);
 } else { passes. add(markPureFunctions); } else { passes. add(markNoSideEffectCalls); }
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); passes. add(markPureFunction);
 } else { passes. add(markNoSideEffectCalls);
 } else { passes. add(markNoSideEffectCalls); }
 } else if (options.markNoSideEffects) { passes.add(markNoSideEffectFunctions);
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); } else { passes. addAll();
 } else if (options.markNoSideEffects) { passes.add(markNoSideEffectMethods);
 } else { passes. add ( mark);
 } else { passes. add(markNoSideEffectMethods); }
 } else { passes. add(markNoSideEffects); }
 } else { passes. add(markPureFunctions); } else { passes. add(markNoSideEffect); }
 } else { passes. add ( markPureFunctions ) ; } else { passes. add ( mark ) ;
 } else { passes. add(markNoSideEffectFunctions); }
 } else if (options.markNoSideEffectCalls) { passes.add(markPureCall);
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); pass. add (markPure);
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); } else { return ; }
} else if  (options.computeMethodSideEffects) {
 } else { passes. add ( markPureFunctions ) ; } else { passes. add ( markNoSideEffectFunction ) ;
} else if  (options.blockCalls) {
 } else { passes. add(markPureFunctions); } else { passes. add(markNoPureFunctions);
 } else { passes. add(markNoSideEffectFunction); }
 } else if (options.markNoSideEffectCalls) { passes.add(mark);
 } else if (options.markNoSideEffectCalls) { passes.add(markCall);
 } else { passes. add(markNoSideEffect); }
} else  { passes = null ;
 } else { passes. add(markNoSideEffectFunction ) ;
 } else { passes = [ ] ;
 } else { passes. add(markNoSideEffects ) ;
} else if (options.markNoSideEffectCalls) { passes.add(markCall); }
 } else { passes. add(markPureFunctions); } else { passes. add(markNoSideEffects); }
 } else { passes. add ( mark )
} else if (options.markNoSideEffectCalls) { passes.add(markAll);
 } else { passes. add(markPureFunctions); } else { passes. add(markNoSideEffect ) ;
 } else { passes. add(markNoPureFunctions);
 } else { passes. add(markPureFunctions); } else { passes. add(markNoSideEffectFunction); }
} else if (options.computeNonFunctionSideEffects) {
 } else { passes. add(markNonPureFunctions); }
 } else { passes. add (markFunction ) ;
 } else if (options.markNoSideEffects) { passes.add(markNoEffects);
 } else { passes. add (markPureFunctions ) ; } else { passes. add (markAll ) ;
 } else if (options.markNoSideEffectCalls) { passes.add(markPureMethods);
 } else { passes. add (markPureFunctions ) ; } else { passes. add (markPass ) ;
 } else { passes. add ( markPureFunctions ) ; } else { passes. add ( markFunction ) ;
 } else if (options.markPureFunctions) { passes. add(markPureFunctions); } else { } }
 } if (options.markNoSideEffects){
 } else if (options.markNoSideEffects) { passes.add(markNoSideEffectCall);
 } else if (options.markNoSideEffects) { passes.add(markNoSideEffectsBuilder);
 } else { passes = null ;
 } else { passes. add (markFunction);
 } else { passes.add(); } if (options.markNoSideEffectCalls) {
} else if  (options.markNoSideEffect) {
 } else if (options.markNoSideEffects) { passes.add(markSideEffects);
 } if (options.chainCalls) if(options.markNoSideEffectCalls) {
} else if (options.computeNonSideEffectCalls) {
} else if (options.markNoSideEffectCalls)  { passes.add(markNoSideEffects);
} else if (options.computeNoSideEffectCalls)
 } else { passes. add (markAll ) ;
 } if (options.chainCalls && options.markNoSideEffectCalls) {
 } else { passes. add(markNoSideEffectCalls); } } else {
} else if (options.markNoSideEffectCalls) { passes.add(markNone); }
 } else if (options.chainCalls &&options.markNoSideEffectCalls) {
 } else if (options.markNoSideEffects) { passes.add(markNoneEffects);
 } else { passes = [ ] ; if(options.markNoSideEffectCalls) {
 } else { passes. add(markNoSideEffects ) ; } } else {
 } else { passes.add(mark); }if (options.markNoSideEffectCalls) {
 } else { passes. add(markNoSideEffectCalls); } } ) ;
} else if (options.markNoSideEffectCalls) { passes.add(markNone);
} else if  (options.chainPass) {
} else if (options.markNoSideEffectCalls)  { passes.add(markPureCall); }
 } else if (options.markNoSideEffectCalls) { passes.add(markAll);
} else if (options.markNoSideEffectCalls) { passes.add(markMethods);
 } else { passes. add (markAll);
 } if (options.markNoSideEffectCall) {
 } else { passes. add (markPass); }
} else if (options.markNoSideEffectCalls)  { passes.add(markEmptyCall); }
 } else { passes. add ( markNoSideEffectCalls ) ; } else {
} else if (options.markNoSideEffectCalls) { passes.add(markAll); }
 } else { passes. add(markNativeFunctions);
 } else { passes. add(markNoSideEffectFunctionBody); }
 } else if (options.chainCall && options.markNoSideEffectCalls) {
 } else { passes.add(mark); if(options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectMethods) {
 } else { passes. add(markNoSideEffectFn); }
 } else { passes. add (markNoSideEffects ) ;
 } else { passes.add(); }else if (options.markNoSideEffectCalls) {
 } else if (options.markNoSideEffectCalls) { passes.add(markNone);
 } else if (options.markNoSideEffectCalls) { passes.add(markMethods);
 } else { passes. add(markNoFunctions); }
 } else { passes = null ; }else if (options.markNoSideEffectCalls) {
 } else { passes. add ( )
 } else { passes. add(markNativeFunctions); } passes. sort ( ) ;
} else if (options.computeNon-SideEffectCalls) {
} else if (options.computeNoSideEffectsCalls) {
} else if  (options.markNoSideEffectCalls {
 } else { passes. add (markFunctionBody); }
} else if (options.markNoSideEffects) { passes.add();
 } else { passes. add (markNewNode); }
} else  { pass ( ) ;
 } if (options.chainCalls &&!markNoSideEffectCalls) {
 } else { passes. add (markPass);
} else if  (options.block) {
 } else { passes. add ( markNoSideEffectCalls ) }
 } else { passes. add(markNoSideEffects ) ; } } } else {
} else if (options.markNoSideEffectCalls) { passes.add({});
 } else { passes. add(markNativeFunctions); } passes. add ( passes )
 } else { passes. add ( mark ) }
 } else { passes. add(markNativeFunctions); } passes. add ( passes);
} else if (options.markNoSideEffectCalls) { passes.remove(); }
 } else { passes. add (markFunction ) ; }
 } else if (options.markNoSideEffects) { passes.add(markEmptyPass);
 } else { passes. add(markNoSideEffects ) ; } } ) ;
 } else { passes. add(markNoSideEffectFunctionDescriptions);
} else if (options.markNoSideEffectCallsOnly) {
} else if (options.markNoSideEffectCalls)  { passes. add(markNoEffects); }
} else  { passes. add (
 } else { passes.add(scan); }else if (options.markNoSideEffectCalls) {
 } else { passes. add(markNoSideEffect ) ; } } ) ;
 } else { passes. add ; }
 } else if (options.chainCalls){
 } else { passes. add (markAST ) ;
 } else { passes. add ( mark )
} else if (options.markNoSideEffects) { if (chainPass) {
 } else { passes. add ) ;
} else if  (options.checkNoSideEffectCalls){
} else if (options.markNoSideEffectCalls) { passes.add(mark());
 } else { passes. add(markNativeFunctions); } passes = passes ;
 } else { passes. add(markNonPureFunctions); } passes = passes ;
 } else { passes.add({}); }else if (options.markNoSideEffectCalls) {
 } else { passes.add(markNoSideEffectCalls) {
 } else { passes. add(markNoSideEffects ) ; } } }
 } else { passes. add(markNoSideEffect ) ; } } }
 } else { passes. add(markNonPureFunctions); } pass ( ) ;
 } else { passes. add(markNoSideEffectCalls); } } ;
} else if (options.computeNoSideEffectCall) {
 } else if (options.chainCalls|markNoSideEffectCalls) {
 } else { passes.add(mark; }else if (options.markNoSideEffectCalls) {
 } else { passes = [ ] ; }
 } else { passes. add(markNoSideEffectCalls); } }
 } else { passes. add (markPass ) ;
 } else { passes. add(markNativeFunctions); } pass ( ) ;
 } else { passes. add(markNoSideEffect ) ; } pass ( ) ;
 } else { passes. addAll ;
} else if (options.markNoSideEffectCalls) { passes.clear(); }
} else if (options.markNoSideEffectCalls.isEmpty) {
 } else if (options.chainCalls ||options.markNoSideEffectCalls) {
 } if (options.chainCallselse if (options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls) { passes.add({mark});
} else if  (options.computeFunctionBody) {
 } else { passes. add (markNoFunction ) ;
 } else { pass ( ) ;
} else if (options.computeNoSideEffectCallsOnly) {
 } else { passes. add(markNativeFunctions); } passes. add ( pass )
 } else if (options.chainCalls&&markNoSideEffectCalls) {
 } else { passes.add(); if (options.markNoSideEffectCalls) {
 } else { passes. add(markNonPureFunctions); } pass ( passes )
} else if  (options.markNodeSideEffects) {
 } else { passes. add(markNonPureFunctions); } pass ( passes ) ;
 } else { passes. add(markNoSideEffect ) ; } } ;
} else if (options.markNoSideEffects && options.chainCall) {
 } else { passes. add(markNoSideEffects ) ; } } ;
} else if (options.markNoSideEffectsCalls) {
 } if (options.chainCalls || options.markNoSideEffectCalls) {
 } else { passes. add(markNoSideEffects ) ; } } } }
 } else { passes. add(markNoSideEffectCalls); } } }
 } if (options.blockCalls){
 } else { passes. add(markNoSideEffect ) ; } } } ) ;
} else if (options.markNoSideEffectCalls) { passes.remove();
 } else { passes.clear(); }else if (options.markNoSideEffectCalls) {
} else if (options.computeNoSideEffects) {
 } else { passes. add(markFunctionBody);
 } else { passes = null ; if(options.markNoSideEffectCalls) {
} else  { passes. addAll (
 } else { passes. add (markFunction); }
} else if (options.computeMethodSideEffects) { if (this) {
 } else { passes. add ( pass )
} else if  (options.blockCalls)
 } else { passes. add(markDefaultFunction ) ;
 } else if (options.chainCall) if(options.markNoSideEffectCalls) {
 } else { passes. add(markNonPureFunctions); } }
} else if (options.markNoSideEffectCalls) { passes. add ( mark )
} else if  (options.clean) {
 } if (options.chainCall) if(options.markNoSideEffectCalls) {
} else if (options.computeMethodSideEffects) { if (true) {
} else if (options.markNoSideEffects) { if (chainCall) {
 } else if (options.chainCalls &&(options.markNoSideEffectCalls) {
 } if (options.markNoSideEffectMethods) {
} else if (options.markNoSideEffectCalls()) {
 } else if (options.chainChanges){
} else if (options.computeMethodSideEffects) { if (build) {
} else if (options.markNoSideEffectCalls) { passes. add (
 } else { passes. add(markNoSideEffectsCalls); } }
 } if (options.chainCalls ||!markNoSideEffectCalls) {
 } else if (options.chainCalls ||markNoSideEffectCalls) {
 } else { passes = []) ; if(options.markNoSideEffectCalls) {
 } else if (options.chainCall){
 } else { passes = []; } if(options.markNoSideEffectCalls) {
 } else { passes. add(markNoSideEffectFunctions); } }
 } if (options.chainCall && options.markNoSideEffectCalls) {
 } else { passes. add(markNoSideEffects); } }
} else if  (options.computeFunctionComments) {
 } if (options.noSideEffects) {
 } else { pass = null ; if (options.markNoSideEffectCalls) {
 } if (options.chain) if(options.markNoSideEffectCalls) {
} else  { passes. add({
} else if (options.computeNoSideEffectCalls()) {
 } else { passes. add ( function ( ){
 } else if (options.compute.markNoSideEffectCalls) {
 } else { passes.add(mark'); }if (options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectFunction) {
} else if (options.computeNoSideEffectCalls {
} else if (options.markNoSideEffectsCallsInAST) {
} else if  (options.processFunctionBody) {
 } else if (options.computeUnmarkNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls.isPresent) {
 } if (options.chainCall)else if (options.markNoSideEffectCalls) {
 } else if (options.unmarkNoSideEffectCalls) {
 } else { if (options.markNoSideEffectCalls) {
 } else if (options.computeFunctionmarkNoSideEffectCalls) {
 } else if (options.chainCalls ||(options.markNoSideEffectCalls) {
} else if (options.computeNoSideEffectCallsFirst) {
} else  { passes = [ ]
 } if (options.chainCalls|markNoSideEffectCalls) {
 } else if (options.chainCallsOptions.markNoSideEffectCalls) {
 } else { passes.add(); } }else if (options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls) { passes.push();
} else if  (options.computeFunction) {
} else if (options.markNoSideEffects) { passes.remove();
 } else if (pass).add(markNoSideEffectCalls) {
 } else if (pass.add(markNoSideEffectCalls) {
 } if (options.markNoSideEffect){
 if (options.chainCalls){
 } else { } else{
} else if  (options.computeMethods) {
 } else { passes. add ;
 } else if (options.mark){
} else  { pass ++ ;
} else if (options.markNoSideEffects && options.chainChanges) {
} else if (options.computeMethodSideEffects) { pass ; }
} else if (options.markNoSideEffects && options.chainPass) {
} else if  (options.computeComments) {
} else  { return ; }
 } else if (options.computePremarkNoSideEffectCalls) {
 } else if (options.markNonSideEffects) {
 } if (options.chainChanges){
 } else { passes.add();
 } if (options.chainPass && options.markNoSideEffectCalls) {
 } else if (options.blockCall){
 } else if (options.chainCalls.markNoSideEffectCalls) {
 } if (pass) {
 } else { passes. add(markNoSideEffect); } }
 } else if (this.options.markNoSideEffectCalls) {
 } if (options.chainCalls).if (options.markNoSideEffectCalls) {
 } else { passes = []; ; if(options.markNoSideEffectCalls) {
 } else { if (markNoSideEffectCalls) {
} else  { passes. add({ });
 if (.markNoSideEffectCalls) {
 } } else{
 } else if (options.block && options.markNoSideEffectCalls) {
} else  { continue ; }
} else if (options.markNoSideEffectCalls) { pass ; }
 } else if (options.cleanAST) {
 } if (options.chainCall || options.markNoSideEffectCalls) {
 } else if (opts.markNoSideEffectCalls) {
 } if (options.clean) {
 } else if (options.processSideEffects) {
 } else { return ; }
} else  { passes. addAll ;
 } if (options.block) {
} else if (options.computeMethodSideEffects) { pass() ;
 } if (options.chainCalls)...if (options.markNoSideEffectCalls) {
 } if (options.chainCalls){if (options.markNoSideEffectCalls) {
 } if (options.cleanAST) {
} else if (options.markNoSideEffectCalls) { pass ++ ;
 } else if (! options.markNoSideEffectCalls) {
 passes.add(mark); }else if (options.markNoSideEffectCalls) {
 } else if (options.cleanCalls) {
 } else if (markNoSideEffectCalls) {
} else if  (options.block)
 } else { passes.add; } }else if (options.markNoSideEffectCalls) {
 } else { pass.add(markNoSideEffectCalls) {
 } if (clean) {
} else if  (options.clean)
 if ($.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls) { passPass();
 } else if (!markNoSideEffectCalls) {
 } else { passes.remove(); } }else if (options.markNoSideEffectCalls) {
 } if (all) {
} else if (options.computeMethodSideEffects) { pass() }
 } else if (options.options.markNoSideEffectCalls) {
 } pass ( ) ;
 } else if (options.config.markNoSideEffectCalls) {
 } else { pass() ; }else if (options.markNoSideEffectCalls) {
 } else if (markAll){
 } finalPass = passes ;
 } else if (pass).add(options.markNoSideEffectCalls) {
} else if  (options.mark)
} else if  (block) {
 } if.markNoSideEffectCalls) {
 } else if (options.compiler.markNoSideEffectCalls) {
 if (options.chainChanges) {
 } if (build) {
 } else if (this.config.markNoSideEffectCalls) {
 } else if (markComments){
} else if  (build) {
 } if (options.chain){
 } else if (this && options.markNoSideEffectCalls) {
 } else { } }
 } if (options.chainCalls.markNoSideEffectCalls) {
 } return passes ;
 } if (pass) {
 } else if (options.skip_markNoSideEffectCalls) {
 } if (scan) {
 } if (options.cache) {
} else if (options.markNoSideEffectCalls) { pass() ;
} else if (options.markNoSideEffectCalls) { passBuilder();
 } else if (options.optimizer.markNoSideEffectCalls) {
 } if (options.chainAll&&options.markNoSideEffectCalls) {
 } } else if (options.markNoSideEffectCalls) {
} else  { pass ; }
 } if (options.compute.markNoSideEffectCalls) {
 } passes = passes ;
 } else if (this.optimizer.markNoSideEffectCalls) {
 } else if (pass){
 } if (chainPass){
 } else if (true){
 } else { return passes ;
 } else if (options.skip.markNoSideEffectCalls) {
} else if (options.processProperties) {
 if (this) {
 } if (passPass) if(options.markNoSideEffectCalls) {
 } else { pass ; }
} else if  (clean) {
 } else if (!pass).if(options.markNoSideEffectCalls) {
 if (options.chainCall)if (options.markNoSideEffectCalls) {
 } else { } else if (options.markNoSideEffectCalls) {
 if (build) {
 } else { passes.add((markNoSideEffectCalls) {
 } pass ( passes )
 } else if (this &&!options.markNoSideEffectCalls) {
} else if  (process) {
 if (all) {
 } if (!options.markNoSideEffectCalls) {
 if (clean) {
 if (options.chain) {
 } else { } } else if(options.markNoSideEffectCalls) {
 } else if (pass) if(options.markNoSideEffectCalls) {
 } if (options.unmarkNoSideEffectCalls) {
 } passes.sort();
 } } else { if (options.markNoSideEffectCalls) {
 } else { return ; }else if (options.markNoSideEffectCalls) {
} else if (options.cleanUp) {
 if (options.block) {
 passPass (pass); }else if (options.markNoSideEffectCalls) {
 } else { if (this.options.markNoSideEffectCalls) {
 } else { passes = null ; }if (options.markNoSideEffectCalls) {
 } else { } } if (options.markNoSideEffectCalls) {
} else if  ( {
 } if (!markNoSideEffectCalls) {
 if (options.clean) {
 } } } else{
 if (true) {
 if (options.chain)else if (options.markNoSideEffectCalls) {
 pass ( ) ;
} else if (options.computeNoSideEffectCalls) {}
 if (options.cache) {
} else if (options.markNoSideEffectCalls) { try {
 } else if (!){
} else if (options.properties) {
} else if  (mark {
} else if (options.switch) {
 } } ) ;
 } if (options.chain) {if (options.markNoSideEffectCalls) {
 if (!options.markNoSideEffectCalls) {
} else if  (debug){
 } else if (true==options.markNoSideEffectCalls) {
 } else { return ; } }else if (options.markNoSideEffectCalls) {
 } else { pass(); } }else if (options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls === true) {
 } else if (.){
 } else { try{
 if (options.chainCall){if (options.markNoSideEffectCalls) {
 } } if (options.markNoSideEffectCalls) {
 } else if ( ){
} else if  (clean)
 } if (options.chain) elseif (options.markNoSideEffectCalls) {
 } if (this.options.markNoSideEffectCalls) {
} else if  (switch)
 } else { pass() } }else if (options.markNoSideEffectCalls) {
 } else { if (this&&options.markNoSideEffectCalls) {
} else if  (debug)
 if (options.chainCall)...if (options.markNoSideEffectCalls) {
 } if (this.unmarkNoSideEffectCalls) {
 if (options.chain)if (options.markNoSideEffectCalls) {
}  } ) ; }
 if (options.chainCall).if (options.markNoSideEffectCalls) {
 } else { pass() ; }if (options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls === false) {
 if (options.block)if (options.markNoSideEffectCalls) {
 }
 } } } }
 } else if passes.add(options.markNoSideEffectCalls) {
 } if (not options.markNoSideEffectCalls) {
 } if (options.chainelse if (options.markNoSideEffectCalls) {
} else if (options)) {
 if (options.chainCallelse if (options.markNoSideEffectCalls) {
 } else { } if(options.markNoSideEffectCalls) {
 if (passes).add(options.markNoSideEffectCalls) {
} else if  ) {
 } }) {
} else if  else {
 } } } else if(options.markNoSideEffectCalls) {
 } else if passes.has(options.markNoSideEffectCalls) {
 if (options.clean)if (options.markNoSideEffectCalls) {
 } if (this.markNoSideEffectCalls) {
 } else { else if(options.markNoSideEffectCalls) {
 return passes ; } elseif (options.markNoSideEffectCalls) {
 if (!markNoSideEffectCalls) {
 } } if (markNoSideEffectCalls) {
}  } } ) ;
 return passes;
} else if (options.) {
 } } }
 if (options.block).if (options.markNoSideEffectCalls) {
}  } ) ;
 } else { else{
} else if (chainPass) {
 } } ;
} else  { } }
 } }
 } else { do{
 } else if (!{
} else if (chainCall) {
 } } ) ; }else if (options.markNoSideEffectCalls) {
 if (this.markNoSideEffectCalls) {
 } } } } if(options.markNoSideEffectCalls) {
} else if (markNode) {
}  } } } }
 break; }
 } } } if(options.markNoSideEffectCalls) {
}  } } } ;
 } if (.markNoSideEffectCalls) {
 } } finally{
} else if (options.markNoSideEffectCalls)) {
 return passes ; } }else if (options.markNoSideEffectCalls) {
 }, if (options.markNoSideEffectCalls) {
 } else if if(options.markNoSideEffectCalls) {
 } } } } elseif (options.markNoSideEffectCalls) {
} else if (...)
 } else if (!(options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls) { } }
} else if (options++) {
 if (*) {
}  } } }
 if () {
}  } } ;
 if (+) {
} else  { } ;
 if (!) {
}  else { }
 } } } } }else if (options.markNoSideEffectCalls) {
 return ; } }else if (options.markNoSideEffectCalls) {
 } finally{
} else if (loop) {
} else if (all) {
 while (markNoSideEffectCalls) {
}  } ;
}  } }
} else if (options.markNoSideEffectCalls...) {
 } else unless(options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls)  {{ try {
} else if (options.markNoSideEffectCalls)  {} try {
 if (_markNoSideEffectCalls) {
 } (options.markNoSideEffectCalls) {
} else if (options.markNoSideEffectCalls ) { }
 while (options.markNoSideEffectCalls) {
 }; else{
 } while(options.markNoSideEffectCalls) {
 }; elseif (options.markNoSideEffectCalls) {
}  else {{
} elif (options.markNoSideEffectCalls) {
} else  {{ }
} else  {{ "
} else if (options.markNoSideEffectCalls)  {\ }
 }; elif (options.markNoSideEffectCalls) {
