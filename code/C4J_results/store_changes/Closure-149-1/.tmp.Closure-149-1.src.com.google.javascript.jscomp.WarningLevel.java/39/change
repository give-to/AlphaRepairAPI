addDefaultWarnings(options);
 addDefaultWarnings(options;
addDefaultWarnings(options); break;
 addDefaultDefaultWarnings(options);
 addDefaultWarnings();
 addDefaultWarnings(options);
addDefaultWarnings(options); case QUIET:
addDefaultWarnings(options); break; default:
 default:
addDefaultWarnings(options); break; case QUIET:
 addDefaultDefaultWarnings(options;
 addDefaultWarnings(options); default:
 addDefaultWarningings(options);
 addDefaultWarnings(options); break; case VERBOSE:
 addDefaultWarnings(options); break; default:
addDefaultWarnings(options, QUIET);
 setDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } case DEFAULT:
 addDefaultWarnings(defaultWarnings(options);
 setDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } else { case DEFAULT:
 addDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } case DEFAULT:
 addDefaultWarning(options);
 addDefaultWarnings(options); break; case VERBOSE: silenceAll(options);
 addDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } else { case DEFAULT:
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings(options);
 addDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); case DEFAULT:
 silenceAllWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } case DEFAULT:
 setDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); case DEFAULT:
 addDefaultDefaultWarnings(options); break;
 addDefaultDefaultWarnings(options);;
 setDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } case QUIET:
 setDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } default: case DEFAULT:
 addDefaultWarning(options;
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings();
 addDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); break; case DEFAULT:
 addDefaultWarnings(options); break; case DEFAULT: VERBOSE:
 addDefaultWarnings(options); break; case DEFAULTVERBOSE:
 addDefaultWarnings(options); break; case DEFAULT:
 addDefaultWarnings(options); break; case QUIET:
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings(options); break;
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings &&
 addDefaultWarn(options);
 addDefaultWarnings(options); break; case DEBUG:
 setDefaultWarnings(options); break; case QUIET:
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings =
addDefaultWarnings(options); default: throw new RuntimeException();
 setDefaultWarnings(options); break; case DEFAULT: addDefaultWarnings(options); break; default:
 silenceAll(options);
 addDefaultWarnings(options); break; case VERBUIET:
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings(options); default:
 setDefaultWarnings(options); break; default:
 addDefaultWarnings(options); break; case DEFAULT: addDefaultWarnings(options); break; default:
addDefaultWarnings(options) break;
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings
 setDefaultWarnings(options); default:
 addDefaultWarnings(options); break; case OFF:
 addDefaultWarnings(options); break; case NEVER:
addDefaultWarnings(options, DEFAULT);
 setDefaultWarnings(options); break; case VERBOSE: QUIET:
 addDefaultWarningings(options;
 setDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } case DEFAULT_ALL:
 addDefaultWarnings(options); break; case VERBOSE: case DEFAULT:
 addDefaultWarnings(options); break; case NONE:
 setDefaultWarnings(options); break; case INSTALL:
 addDefaultWarnings(options); break; case DEFAULT: addDefaultWarnings(options); default:
 addDefaultWarnings(options); break; case ERROR:
 addDefaultWarnings(options); break; case CheckLevel:
 setDefaultWarnings(options); break; case VERBOSE: addDefaultWarnings:
 addDefaultWarnings;
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings:
 addDefaultWarnings(options); break; case VERBOSE: addDefaultWarnings(options);
addDefaultWarnings(options); break; case DEFAULT:
 addDefaultWarnings(options); break; case VERBOSITE:
 setDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } case DEFAULT : default:
 addDefaultWarnings(options); break; case VERBOSE: QUIET:
addDefaultWarnings(options) case QUIET:
 addDefaultWarnings(options); break; }
 setDefaultWarnings(options); break; case DEFAULT: VERBOSE:
 addDefault(options;
 addDefaultWarnings(options); break; case TEST:
 addDefaultWarnings(options); break; case DEFAULT_ALL:
 addDefaultWarningLevel(options);
 setDefaultWarnings(options);
 addDefaultWarnings(options); break; case INSTALL:
addDefaultWarnings(options); default: throw new RuntimeException("");
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarningings(options);
addDefaultWarnings(options) break; case QUIET:
 addDefaultWarnings(options);;
 setDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } case Default:
 setDefaultWarnings(options); break; case DEFAULTVERBOSE:
 addDefault(options);
 addDefaultDefaultDefaultWarnings(options);
 silenceAllWarnings(options); break; case DEFAULT_ALL:
 addDefaultWarnings(options); break;
 addDefaultWarnings(QUIET,options);
 addDefaultWarnings(options); break; case DEFAULT: case VERBOSE:
addDefaultWarnings(options); break; case DEFAULT: break;
addDefaultWarnings(options); default: throw new RuntimeException("Unknown");
 setDefaultWarnings(options);
 addDefaultWarnings(options); break; case DEFAULT_QUIET:
 addDefaultWarnings(options); }
addDefaultWarnings(options) break; default:
 setDefaultWarnings(options); break;
addDefaultWarnings(options); default: throw new RuntimeException;
 addDefaultWarnings(options); break; case DEFAULT_VERBOSE:
 addDefaultWarnings(options); }break;
 silenceAllWarnings(options); break; default:
 addDefaultWarnings(options); case DEFAULT:
 setDefaultWarnings(options); break;
 addDefaultWarnings(options); break;;
 silenceAllWarnings(options); break; case DEFAULT: addDefault:
 addDefaultWarnings(options, WarningLevel);
 case VERBOSE:
 addDefaultWarningLevel(options;
addDefaultWarnings(options); break; default: throw new RuntimeException();
 addDefaultWarnings(_);
addDefaultWarnings(options); default: throw RuntimeException;
 addDefaultWarnings:
 addDefaultWarnings(options); break; case DEFAULT1:
 setDefaultWarnings(options;
addDefaultWarnings(options); default: throw new RuntimeException(".");
addDefaultWarnings(options); case DEFAULT: break;
 setDefaultWarnings(options); break; case VERBOSE: if (DEFAULT)
 setDefaultWarnings(options); case INSTALL:
 setDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } case DEFAULT: void
 addDefaultWarnings(options); break; case DEFAULT_DEFAULT:
 addDefaultWarnings(options); case DEBUG:
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings() +
 silence(options);
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings() &&
 setDefaultWarnings(options); break; case DEFAULT: addDefaultWarnings(options); break; case
 setOptions(options);
 silenceAllWarnings(options); break; case DEFAULT: addDefaultWarning:
 addDefaultWarnings(options); case ERROR:
 addDefaultWarningLevel(options); break;
 addDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } case DEFAULT: return
 addDefaultWarnings(options); break; case VERBOSE: case default:
 addDefaultDefaultWarnings(options, true);
 addDefaultWarnings(options); case INSTALL:
 addDefaultWarningLevel(defaultWarnings(options);
 addDefaultWarnings(QUIET)(options);
 silenceAllWarnings(options);
 addDefaultWarnings(options); break; case DEFAULT: addDefaultWarnings(options); break; case
 return false;
addDefaultWarnings(options); default: throw new RuntimeException("Default");
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarningLevel =
 addDefaultDefaultWarnings(options); break; }
 addWarnings(options);
 addDefaultWarningWarnings(options);
 addDefaultWarningLevel(options);
 addDefaultWarningLevelWarnings(options);
 addDefaultDefaultWarnings(this.options);
addDefaultWarnings(options); case DEFAULT:
 addDefaultDefaultWarningings(options); break;
addDefaultWarnings(options) break; default: throw new RuntimeException("");
 addDefaultWarnings(options, true);
 silenceAllWarnings();
addDefaultWarnings(options); break; case ERROR:
 addDefaultDefaultWarnings(options, false);
 addAllWarnings(defaultWarnings(options);
 addDefaultDefaultWarnings(this, options);
 addDefaultWarnings(DefaultWarnings(options);
 setOptionsForWarningLevelDefaultWarnings(options);
addDefaultWarnings(options) break; case DEFAULT:
 addDefaultWarnings();
 setDefaultDefaultWarnings(options);
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings(options); }
 addDefaultWarnings(options, -1);
addDefaultWarnings(options); break; case WARNING:
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings(options)
 setDefaultWarningLevel(options);
 addDefaultDefaultWarningWarnings(options);
addDefaultWarnings(options); default: throw new RuntimeException("Warning");
addDefaultWarnings(options); case DEFAULT: default:
 addWarning(options);
 addDefaultWarnings(QUIET(options);
 addDefaultWarnings(defaultCheckLevel,options);
addDefaultWarnings(options); break; case DEFAULT: default:
 addDefaultOptions(options);
 addDeferredWarnings(options);
 addDefaultWarningsToCompilationOptions(options);
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarning:
 addDefaultWarnings():
 addDefaultWarnings(this.options);
 setDefaultOptions(options);
 addDefaultCustomWarnings(options);
 addDefaultWarnings(options); break; case
 addDefinedDefaultWarnings(options);
 addDefaultWarn(options;
 setDefaultWarnings(options); break; case
addDefaultWarnings(options); break; case OFF:
 addDefaultWarnings(options); break; default: throw new RuntimeException("Unknown warning level."); } else
 addDefaultWarningRules(options;
 addDefaultWarningings(options); break;
 addDefaultWarnings(this, options);
 clearDefaultWarnings(options);
 addWarning(options;
addDefaultWarnings(options) { } default: throw new RuntimeException("");
 addDefaultWings(options);
 addDefaultWarningsIfDefined(options);
 addDefaultWarnings(DEFAULT,options);
 warn(options);
 addDefaultWarnings(options, false);
addDefaultWarnings(options) break; default: throw new RuntimeException();
 addDefaultWarnings =
addDefaultWarnings(options) break; case DEFAULT: break;
addDefaultWarnings(options) : default: throw new RuntimeException("Unknown");
 addDefaultWarningsToCompilerOptions(options);
addDefaultWarnings(options); case DEFAULT_WARNING:
 addDefaultWarningsToOptions(options);
 silenceDefaultWarnings();
 setDefaultWarnings(options);;
 addDefaultWarningsForQUIET(options);
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings(options),
 addDefaultDefaultWarnings(options); }
 setDefaultWarnings(options); break; }
 setDefaultWarnings(options); break; default: case DEFAULT: addDefaultWarnings() &&
 addDefaultWarnings(options); break; case VERBOSE: silenceAllWarnings(); }
 addDefinedWarnings(options);
 silenceDefaultWarnings(options);
addDefaultWarnings(options) case DEFAULT: addDefault(options);
 addDefault warnings(options;
 setDefaultWarnings(options); }
 addDefaultWarningLevelDefaultWarnings(options);
addDefaultWarnings(options) case DEFAULT: setOptions(options);
 silenceDefault(options);
 addDefaultWarning(options); break;
addDefaultWarnings(options.defaultWarn);
 silenceAllWarnings;
 addDefaultWarnings
 addDefaultWarnings(defaults,options);
addDefaultWarnings(options); default: break;
 addDefaultDefaultWarnings(defaults);
 addDefaultwarnings(options);
addDefaultWarnings(options) : default: throw new RuntimeException(".");
addDefaultWarnings(options) { } default: throw new RuntimeException();
 addDefaultWarnings(deFAULT,options);
 clearDefaultWarnings(options;
addDefaultWarnings(options) break; }
addDefaultWarnings(options); default: throw new RuntimeException("";
 silenceDefaultWarnings(options);
 addDefaultWarnings(options); break; });
addDefaultWarnings(options) : default: throw new RuntimeException("Default");
 addDefaultWarningsToCompiler(options);
 addDefaultWarningOptions(options);
 setDefaultOptions(options;
 silenceAll(options;
 ignore(options);
 addDefaultWarningLevel(options); addWarningLevel(options);
 addDefaultWarnings(this); }
 addDefaultWarningsDefaults(options);
addDefaultWarnings(options) break; case DEFAULT: default:
 removeDefaultWarnings(options);
 removeDefaultWarnings(options;
 addDefaultWarnings(DEFAULT)(options);
addDefaultWarnings(options) case DEFAULT: break;
 addDefaultWarnings(dDefaultWarningLevel(options);
 addDefaultFlags(options);
addDefaultWarnings(options) break; case ERROR:
 silenceDefaultWarnings(options;
 addDefaultWarningLevel(options, true);
 addDefaultWarnings() ||
addDefaultWarnings(options); default: throw new RuntimeException);
addDefaultWarnings(options) break; default: throw new RuntimeException()
 addDefaultDefaultWarningsOptions(options);
 addDefaultOptions(options;
 addDefaultWarningsToCheckLevel(options);
 addDefaultWarningsToDefaultOptions(options);
 addDefaultWarningsToDefaultChecker(options);
 addOptions(options);
 silenceAllWarnings(options); }
 addWarnings:
 addDefaultWarnings() &&
addDefaultWarnings(options) break; case WARNING:
 addWarnings();
 options = defaults;
 addDefaultWarningLevel(options, false);
addDefaultWarnings(options); default: throw new RuntimeException(");
 addDefaultWarnings() ->
addDefaultWarnings(options) case DEFAULT: default:
 ignoreWarnings();
addDefaultWarnings(options); } else {
 clear(options);
 setDefault(options);
 addDefaults(options);
addDefaultWarnings(options); default:
 setDefault(options;
addDefaultWarnings(this.defaultWarn);
 addDefaultWarnings(options); else
 addDefaultWarnings(options); }
addDefaultWarnings(options) case DEFAULT_WARNING:
 configureDefaultWarnings(options);
 addDefaultWarnings(options)
 addDefaultWarnings);
 setOptions(options;
 addCheckLevel(options);
 return options;
 (break);
 case DEFAULT:
 setDefaultWarnings(options); }
addDefaultWarnings(options) case DEFAULT:
 addDefaultWarnings(options).
 warning(options);
 addWarnings();
addDefaultWarnings(options, options);
addDefaultWarnings(options.defaultwarnings);
 ignore warnings;
addDefaultWarnings(options, WARNINGS);
addDefaultWarnings(options) case DEFAULT: case OFF:
addDefaultWarnings(options).set(true);
 addDefaultDependentWarningLevel(options);
 add(options);
 warnings(options);
addDefaultWarnings(options); } else:
 silenceDefaultWarnings(options); }
 silence(options;
 case OFF:
 addDefaultWarning:
 break; }
addDefaultWarnings(options.options);
 default: break;
 silenceDefaultWarnings(); }
 case Default:
addDefaultWarnings((options));
 return true;
 case default:
 default: default:
addDefaultWarnings(defaultOptions);
 checkLevel(options);
 addWarningLevel();
 addDefaultWarning();
addDefaultWarnings(options, "warn);
 clear(options;
 addDefaultWarning():
addDefaultWarningsOptions();
addDefaultWarnings() }
 addDefinedWarn(options);
addDefaultWarnings options;
 clearWarningLevel;
 (false);
 default(options);
 return null;
addDefaultWarnings(warnings);
addDefaultWarnings(defaults);
addDefaultWarnings(options2);
 (true);
addDefaultWarnings(doptions);
 clear();
 return; }
 return 0;
addDefaultWarnings(options) break; });
 exit ();
 defaults(options);
addDefaultWarnings(-options);
 do not
 do nothing
addDefaultWarnings(options); break
addDefaultWarnings(this);
addDefaultWarnings(options); });
addDefaultWarnings(options) }
addDefaultWarnings(options) break();
 default():
addDefaultWarnings(option);
 }
 #
addDefaultWarnings(Options);
