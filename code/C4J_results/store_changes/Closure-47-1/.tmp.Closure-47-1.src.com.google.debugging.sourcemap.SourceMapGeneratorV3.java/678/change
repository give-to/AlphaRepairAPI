originalNameMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName,  index);
 put(symbolName, originalNameIndex);
originalNameMap.put( symbolName);
 originalNameMap.remove(originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex); }
 return index;
originalNameMap. remove ( symbolName ) ;
originalNameMap.put(symbolName, originalNameIndex, index);
 } if ( index!= null ) { originalNameIndex = index ; } else {
 originalNameMap.remove(index);
 originalNameMap.put(name, originalNameIndex);
 originalMap.put(symbolName, originalNameIndex);
 nameMap.put(symbolName, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; }
 } else { originalNameMap.put(symbolName, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ;
 } else {
 } if ( index!= null ) { originalNameIndex = index ; } } else {
 } else { originalNameIndex = 0 ;
originalNameMap.put(index);
originalNameMap.put(symbolName, originalNameIndex + 1);
originalNameMap = null ;
 map. put(symbolName, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ;
 originalNameIndex = originalNameMap.put(symbolName, originalNameIndex);
 } } else { originalNameMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex); } if ( index!= null ) {
originalNameMap.put(symbolName, originalNameIndex); } if ( index!= null )
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = - 1 ; }
originalNameMap.put(symbolName, originalIndex);
originalNameMap.put ( symbolNameIndex);
originalNameMap.put(symbolName, originalNameIndex); } return index ;
originalNameMap.put(symbolName,  originalNameIndex); } if ( index ) {
 } else { originalNameIndex =
 } if ( index!= null ) { originalNameIndex = index ; } if ( index!= null ) { originalNameIndex = index ; }
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; } } else {
 originalNameFileMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex) ; } return originalNameIndex ;
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; } if ( index ) {
 } if ( index!= null ) { originalNameIndex = - 1 ;
 } else { originalNameIndex ++ ;
 } else { originalNameIndex = originalNameMap.size(); }
 } if ( index!= null ) { originalNameIndex = index ; } if ( index!= null ) { originalNameIndex = index ;
 } if ( index!= null ) { originalNameIndex = index + 1 ;
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = - 1 ;
 } if ( index == null ) { originalNameIndex = 0 ; } else { originalNameIndex = index ; }
 originalNameIndex = symbolName;
 originalNameIndex = originalNameMap.size(); }
 originalNameIndex = symbolName);
 originalNameIndex = originalNameMap.get(originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; } }
 } if ( index!= null ) { nameMap.put(symbolName, originalNameIndex);
 originalNameMap.put (, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else { return originalNameIndex ;
 } if ( index!= null ) { originalNameIndex = index ; }
 originalNameIndex =Map.put(symbolName, originalNameIndex);
originalNameMap.add ( symbolName ) ;
 } else { originalNameIndex = originalNameMap.put(symbolName, originalNameIndex);
 } else { originalNameIndex = - 1 ; }
originalNameMap.put(symbolName, originalNameIndex++);
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; } else {
 if (index!= null) {
 originalNameIndex = originalNameMap.size();
 } if ( index!= null ) { originalNameIndex = index ; } else { index = 0 ;
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = originalNameMap.size();
 } else { originalNameIndex = 0 ; } } else {
 } if ( index == null ) { originalNameIndex = 0 ; } else { originalNameIndex = index ; } } else {
 } if ( index == null ) { originalNameIndex = 0 ; } else { index = index ;
 } else { originalNameIndex = 0 ; }
 } if ( index == null ) { originalNameIndex = 0 ; } else { originalNameIndex = index ; } if ( index ) {
 } } else {
originalNameMap.put(symbolName, originalNameIndex); } } return originalNameIndex ;
 } if ( index!= null ) { originalNameIndex = index ; } if ( index ) {
 } if ( index!= null ) { originalNameIndex =
 } if ( index == null ) { originalNameIndex = 0 ; } else {
 } if ( index == null ) { originalNameIndex = 0 ; } else { originalNameIndex = index ;
 } else { originalNameIndex = 0 ; } if ( index!= null ) {
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex ++ ;
 } else { originalNameIndex = originalNameMap.size();
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 1 ;
 originalNameMapMap.put(symbolName, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ;
 } if ( index == null ) { originalNameIndex = 0 ; } else { originalNameIndex = index + 1 ; }
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; } } } else {
 } if ( index == null ) { originalNameIndex = 0 ; } else { index =
 if (index!= null)
 } if ( index!= null ) { originalNameIndex = index - 1 ;
 } if ( index!= null ) { return originalNameIndex ;
 } else { originalNameIndex = 0 ; } if ( index!= null ) {
 } if ( index!= null ) { originalNameIndex = index ; }
 } else { originalNameIndex = 0 ; } if ( index!= null )
 } if ( index!= null ) { originalNameIndex = index ; } } else { originalNameIndex = 0 ;
 } else { originalNameIndex = 0 ; } if ( index!= null ) { originalNameIndex = index ; }
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = - 1 ; } }
 } else { originalNameIndex = originalNameMap.size(); } return index ;
 } if ( index == null ) { originalNameIndex = 0 ; } } else {
 } if ( index!= null ) { originalNameIndex = index ; } else { return - 1 ;
 if ( index!= null ) { originalNameIndex = index ; }
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0.0 ;
 } if ( index!= null ) { originalNameIndex = index ; } } } else {
 } else { originalNameIndex = 0 ; } if ( index!= null )
 originalNameIndex = map. put(symbolName, originalNameIndex);
 originalNameIndex = originalNameMap.size(););
 originalNameMap.put(index, originalNameIndex);
 } else { originalNameIndex = - 1 ;
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex =
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = - 1 ; } } else {
 } if ( index == - 1 ) { originalNameIndex = 0 ; } else {
 } if ( index == null ) { originalNameIndex = 0 ; } else { originalNameIndex = index ; } }
 } if ( index!= null ) { originalNameIndex = index ; } if ( index!= 0 ) { originalNameIndex = index ; }
 } if ( index!= null ) { originalNameIndex = index ; } if ( index!= 0 ) { originalNameIndex = - 1 ;
originalNameMap.put(symbolName + 1, originalNameIndex);
 if ( index!= null ) { originalNameIndex = index ;
originalNameMap.put(symbolName, originalNameIndex); } } return originalNameIndex ; }
 } else { originalNameIndex = 0;
 originalNameIndex = originalMap.put(symbolName, originalNameIndex);
originalNameMap. remove ( ) ;
 if ( index!= null ) { originalNameIndex = index ; } }
originalNameMap.put(symbolName, originalNameIndex) ; } else { originalNameIndex = 0 ;
 } if ( index!= null ) { originalNameIndex += index ;
 symbolNameMap. put ( symbolName, index);
 if (index!= null) { originalNameMap.put(symbolName, originalNameIndex);
 } else { originalNameIndex = originalNameMap.size(); }
 originalNameMap.add(index);
 originalNameIndex = symbolNameIndex;
originalNameMap = { } ;
originalNameMap.put(symbolName, originalNameNameIndex);
 if (index!= null) originalNameMap.put(symbolName, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } return index ;
 } } return originalNameMap.put(symbolName, originalNameIndex);
 } else { originalNameIndex = map. put(symbolName, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; } if (index)
 } if ( index == null ) { originalNameIndex = 0 ;
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; } ;
 } if ( index!= null ) { originalNameIndex ++ ;
 originalNameIndexMap.put(symbolName, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else { index = 0 ; }
 } else { originalNameIndex = originalNameMap.size();
 } if ( index!= null ) { originalNameIndex = index ; } else { if (index) {
 originalNameIndex = ( int ) index ;
 } if ( index == null ) { originalNameIndex = - 1 ;
 originalNameIndex = 0 ; } if ( index!= null )
 } if ( index == - 1 ) { originalNameIndex = 0 ; } else { index =
 } if ( index!= null ) { originalNameIndex = index ; } } finally {
originalNameMap. put ( symbolName, index ;
originalNameMap.put(symbolName, originalName);
 } else { originalNameIndex = originalNameMap.size(); } }
 originalNameIndex = nameMap.put(symbolName, originalNameIndex);
 } if ( index == null ) { originalNameIndex = - 1 ;
 if ( index!= null ) { originalNameIndex = index ; } }
originalNameMap.put(symbolName, originalNameIndex); } if ( index )
originalNameMap.put(symbolName, originalNameIndex); } return index ; }
originalNameMap.put(symbolName, originalNameMap.size(index);
 } if ( index!= null ) { originalNameIndex = index ; } else { return 0 ;
 } if ( index!= null ) { originalNameIndex = index ; } else { index = null ;
 originalNameIndex = 0 ; originalNameMap.put(symbolName, originalNameIndex);
 } if ( index!= null ) { return originalNameIndex ;
originalNameMap.put(name, index);
 if ( index!= null ) { originalNameIndex =
originalNameMap.put(symbolName, originalNameIndex); return index ;
 symbolNameMap.put( symbolName,originalNameIndex);
 originalNameIndex = 0 ; } if ( index!= null ) {
 originalNameIndex = originalNameIndex ; }
 originalNameIndex = 0;
 } else { originalNameIndex = - 1;
 } if ( index!= null ) { map.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex, originalNameIndex + 1);
 } else { originalNameIndex = originalSourceFileIndex;
originalNameMap.put(symbolName, originalNameIndex) ; index = null ;
 } else { originalNameIndex = 0 ; } else {
 } if ( index!= null ) { originalNameIndex = originalNameMap. size ;
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; } } ;
 originalNameIndex = originalNameMap.put(, originalNameIndex);
 originalNameIndex = originalNameMap.size());
originalNameMap.put(symbolName, originalNameMap.get(index);
 originalNameIndex = originalNameMap. get ( symbolName);
 originalNameIndex = 0 ; } if ( index ) {
 } if ( index!= null ) { originalNameIndex = index - 1 ; }
 } if ( index!= null ) { originalNameIndex = index + 1 ; }
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = 0 ; } } }
 originalNameIndex = originalNameMap.size(*);
 } if ( index!= null ) { originalNameIndex = index ; } }
originalNameMap.put(symbolName, originalNameIndex - 1);
 originalNameIndex = originalNameMap.size;
 } if ( index!= null ) { originalNameIndex = originalNameMap.size();
 } if ( index == null ) { originalNameIndex = 0 ; } else { originalNameIndex += index ;
originalNameMap.put(symbolName, index); }
 originalNameIndex = ( int ) symbolName ;
originalNameMap.put(symbolName, originalNameIndex, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else { return originalNameIndex ; }
 originalNameMap.put(symbol, originalNameIndex);
 } } originalNameMap.put(symbolName, originalNameIndex);
 symbolNameMap.put(name,originalNameIndex);
 originalNameMap.removeKey(originalNameIndex);
 } if ( index!= null ) { originalNameIndex += index ;
 } if ( index!= null ) { originalNameIndex = index ; index = null ;
 originalNameId = symbolName;
originalNameMap.put(symbolName, originalNameIndex); } }
 symbolNameMap. remove ( symbolName ) ;
 } } else { originalNameIndexMap.put(symbolName, originalNameIndex);
 originalNameIndex = map.get(originalNameIndex);
 originalNameIndex = 0 ; } originalNameMap.put(symbolName, originalNameIndex);
 symbolNameIndex = originalNameMap.get(originalNameIndex);
 originalNameIndex = symbolNameIndex ; }
originalNameMap.put(symbolName, originalNameIndex + -1);
 } else { originalNameIndex = originalSourceFileIndex ; }
 originalNameIndex = symbolNameMap.get(originalNameIndex);
 originalNameIndex = originalNameIndex(index);
originalNameMap.put(symbolName, originalNameIndex); } return originalIndex ;
 } if ( index!= null ) { originalNameIndex = index ; } else { break ; }
originalNameMap.put index;
 } if ( index!= null ) { originalNameIndex = index ; } else { return originalNameIndex =
originalNameMap.put(symbolName, originalNameMap.size()++);
 symbolNameIndex = symbolNameMap.get(originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex); } return originalName ;
 if (index!= null) nameMap.put(symbolName, originalNameIndex);
 symbolName, originalNameIndex);
 } else { originalNameIndex = 0 ; } if ( index )
 originalNameIndex = fileMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameMap.size-1);
 originalNameIndex = mapOriginalName(symbolName, originalNameIndex);
originalNameMap.put(index, symbolName, originalNameIndex);
 originalNameId = index;
 } else { originalNameIndex = lastSourceFileIndex;
 }
originalNameMap.put(symbolName, originalNameIndex) ; } return originalNameIndex ; }
 originalNameIndex(index);
originalNameMap.put(originalNameIndex, symbolName);
 } else { originalNameIndex = 1 ;
 originalNameIndex = 0 ; } map. put(symbolName, originalNameIndex);
 originalNameIndex = originalNameMapPut(symbolName, originalNameIndex);
 originalNameIndex = originalNameMap.get(name);
originalNameMap.put(originalNameIndex, index);
originalNameMap.put(symbolName, originalNameMap.size(), index);
 symbolNameMap.put(symbol,originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else { return null ;
originalNameMap.put(symbolName, originalNameIndex); return originalNameIndex ;
 } if ( index == null ) { originalNameIndex = 0 ; }
originalNameMap. put ( symbolName, originalNameIndex ;
 originalNameIndex = mapNameIndex(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex); } if ( index == - 1 ) {
 originalNameMap.removeElement(originalNameIndex);
 if (index) {
originalNameMap.put(symbolName, originalNameIndex); } if ( index == null ) {
 originalNameIndex = originalNameMap.get(nameName);
 originalNameId = 0;
 } if ( index!= null ) { originalNameIndex = index ; } if ( index!= null ) { return index ; } }
originalNameMap.put(symbolName); }
 originalNameIndex = originalNameMap.size(_);
 originalNameMap.remove(symbol);
originalNameMap.put(symbolName, symbolIndex);
 symbolNameMap. put ( symbolName, index ;
 originalNameMap.add(originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else { originalNameIndex = originalNameMap.size;
 } else { originalNameIndex = 0.0 ;
originalNameMap.put(symbolName, originalNameIndexIndex);
 originalNameIndex = 0 ; } if ( index )
 originalNameIndex = originalNameIndex;
 } } else { originalNameIndex = 0 ;
 } else { originalNameIndex = originalNameMap.size(); } } }
originalNameMap.put(symbolName, originalNameIndex); return index ; }
originalNameMap.put(symbolName, originalNameIndex, originalNameMap.size ( ));
 } } else { originalNameIndex = offsetValue(symbolName, originalNameIndex);
 originalNameIndex = 0 ; } return index ;
originalNameMap = [ ] ;
 } else { originalNameMap.remove(originalNameIndex);
 originalNames.add(originalNameIndex);
 originalNameIndex = 0 ; } out. append(symbolName, originalNameIndex);
 } if ( index == null ) { originalNameIndex = 0 ; } else { index +=
originalNameMap. remove ( symbolName ) ; }
 } else { originalNameIndex = offsetValue(symbolName, originalNameIndex);
 originalNameIndex = put (symbolName, originalNameIndex);
originalNameMap. remove ( symbolName )
originalNameMap.put(symbolName, originalNameIndex) ; index = - 1 ;
 originalNameNameMap.put(symbolName, originalNameIndex);
 originalNameIndex = originalNameMap.put(", originalNameIndex);
 } else { originalNameIndexMap.put(symbolName, originalNameIndex);
 originalNameIndex = (int) (index);
 symbolName = null;
originalNameMap.put(symbolName, originalNameIndex) ; } if ( index!= null ) break ;
originalNameMap.put(symbolName, originalNameIndex + 1); }
 originalNameMap.remove(mbolName);
originalNameMap.put(symbolName, index + originalNameIndex);
originalNameMap ++ ;
originalNameMap.put(symbolName, originalNameIndex + lastSourceFile);
 put(name, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex - lastSourceFile);
originalNameMap.put(symbolName,  originalNameIndex); } } return symbolIndex ;
originalNameMap.put(symbolName,  originalSourceFileIndex); } if ( index ) {
originalNameMap.put(symbolNameString, originalNameIndex);
 originalNameIndex = originalNames.put(symbolName, originalNameIndex);
 } else { originalNameIndex = symbolName;
 originalNameIndex = symbolMap.put(symbolName, originalNameIndex);
 originalNameMap.removeFirst(originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex); return - 1 ;
originalNameMap.put(symbolName + ' ', originalNameIndex);
 originalNameMap.put(mbolName, originalNameIndex);
 } if ( index!= null ) { originalNameIndex = index ; } else
originalNameMap.put(symbolName.length ( ), originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex); } if ( index == null )
 originalNameIndex = originalNameMap.size(); } }
 originalNameMap.unset(originalNameIndex);
 if (index!= null) { nameMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName,  originalNameIndex); } } return originalName ;
originalNameMap.put(symbolName, originalNameIndex) ; index = originalNameIndex ;
originalNameMap.put(symbolName, index + 1, originalNameIndex);
 originalNameIndex = sourceFileMap.put (, originalNameIndex);
originalNameMap.put(null, index);
 originalNameIndex = originalNameMap.pop(); }
 originalNameIndex = originalSourceFileIndex;
 originalNameMap.removes(originalNameIndex);
 if (index!= null) { }
 } originalNameMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbol, index);
originalNameMap = null ; }
originalNameMap.put(symbolName, originalNameIndex, originalNameMap.size(index);
originalNameMap.put(symbolName, originalNameIndex, originalNameMap.size - 1);
 } else { originalNameIndex = indexOf(symbolName, originalNameIndex);
 originalNameIndex = symbolName.get(originalNameIndex);
 } } else { originalNameIdMap.put(symbolName, originalNameIndex);
 originalNameIndex = 0 ; } index. put(symbolName, originalNameIndex);
 originalNameMap.remove(originalName);
 } else { originalNameIndex --;
 originalNameIndex = symbolNameIndex(originalNameIndex);
 } else { originalNameIndex = originalSourceFileId;
originalNameMap.put(symbolName, originalNameIndex) ; } else { originalNameIndex ++ ;
originalNameMap.clear();
 originalNameIndex = symbolName.length(originalNameIndex);
originalNameMap.put(symbolName, originalSourceFileId, originalNameIndex);
 } if ( index!= null ) { originalNameIndex += index ; } }
originalNameMap. put ( symbolName, index ; }
 } if ( index == - 1 ) { originalNameIndex = 0 ; } else
originalNameMap.put(symbolName[index], originalNameIndex);
 } } else { originalNameFileMap.put(symbolName, originalNameIndex);
originalNameMap.add ( symbolName, index);
.put(symbolName, originalNameIndex);
 } if (index!= null)
originalNameMap.put(symbolName, originalNameIndex); } } return symbolNameIndex ; }
 symbolNameMap.put(index,originalNameIndex);
 } else { originalNameNameMap.put(symbolName, originalNameIndex);
 originalMap.remove(originalNameIndex);
originalNameMap. put ( symbolName, 0 ) ;
 originalNameMap.put(null, originalNameIndex);
 if (index!= null) { map.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex); } if ( index!= null ) { }
originalNameMap.put(symbolName, originalNameIndex - 1); }
 originalNameIndex = mapName ( symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex) ; originalNameIndex = index ;
 } return originalNameMap.put(symbolName, originalNameIndex);
 map.put(name, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex + symbolIndex);
originalNameMap.put(symbolName, originalNameIndex); } } return originalNameIndex ; } ;
originalNameMap.put(symbolName + index, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex); } } }
originalNameMap.put(symbolName, -1NameIndex);
 } else { originalNameIndex = 1;
 } if (index) {
originalNameMap. put ( symbolName, index )
 } else { originalNameIndex = (int)originalNameIndex);
 } if ( index == - 1 ) { originalNameIndex = 0 ; } }
 originalNameMap.setIndex(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex); } } return originalNameIndex ; } }
originalNameMap.put(originalNameIndex, symbolNameIndex);
 originalNameIndex = symbolName - 1;
originalNameMap.put(nameName, index);
 symbolName = originalNameIndex;
originalNameMap.put(symbolNameStr, originalNameIndex);
 } else { return originalNameIndex;
 sourceFileMap.put(name,originalNameIndex);
 originalNameIndex = symbolName + 1;
 originalNameIndex ++ ; originalNameMap.put(symbolName, originalNameIndex);
 if (index!= null) map.put(symbolName, originalNameIndex);
 if (index!= null) { } }
 } if ( index == null ) { originalNameIndex = 0 ; } else { index -=
originalNameMap.put(symbolNameId, originalNameIndex);
 originalNameIndex = - 1;
 originalNameIndex = originalNameMap.replace(symbolName, originalNameIndex);
originalNameMap.remove(sourceName);
originalNameMap.put(symbolName.capitalize, originalNameIndex);
originalNameMap.put(nameNameIndex);
originalNameMap.put(symbolName[0], originalNameIndex);
 } if ( index == null ) { originalNameIndex = 0 ; } else { index &&
 if (index!= null) { return
 if (index) originalNameMap.put(symbolName, originalNameIndex);
 symbolName);
 symbolNameMap. remove ( symbolName )
 original. put(symbolName, originalNameIndex);
 originalNameMap.delete(originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex, originalNameMap.size - index);
originalNameMap.put(symbolName, originalNameIndex) } if ( index!= null )
 originalNameMapping.put(symbolName, originalNameIndex);
 originalNameIndexFileMap.put(symbolName, originalNameIndex);
 if (index!= null) originalMap.put(symbolName, originalNameIndex);
 originalNameMap.putIndex, originalNameIndex);
originalNameMap.put(symbolName, -1);
originalNameMap.put(originalName, originalNameIndex);
originalNameMap.put(symbolName, originalSourceFileIndex, originalNameIndex);
originalNameMap.removeIndex();
 originalNameIndex = (index);
originalNameMap.remove(nameName);
originalNameMap.put(originalNameIndex, originalNameIndex);
 nameMap.remove(originalNameIndex);
 originalNames.remove(originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex ++); }
 originalNameMap.remove(name);
 index = null; originalNameMap.put(symbolName, originalNameIndex);
 originalNameIndexMapMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolNameName, originalNameIndex);
 originalNameMap.delete(index);
originalNameMap.put(symbolName, originalNameIndex, originalNameIndex ++);
 } else { nameMap.put(symbolName, originalNameIndex);
originalNameMap.put(null, symbolName);
 return (index);
 nameMap.add(originalNameIndex);
 originalNameIndex = mapToIndex(symbolName, originalNameIndex);
 originalNameIdMap.put(symbolName, originalNameIndex);
originalNameMap. add ( symbolName )
 symbolMap.put(name, originalNameIndex);
originalNameMap.put(symbolName, symbolName, originalNameIndex);
 originalNameId = symbolName);
originalNameMap.put(symbolName, originalNameIndex); } } return originalIndex ;
 symbolNameMap.remove(index);
originalNameMap.put(originalNameIndex, originalNameIndex); }
 originalOriginalNameMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex, originalSourceFileIndex);
originalNameMap.put(symbolName, originalNameIndex, originalNameIndex - lastSourceFile);
 originalNameIndex = lastSourceFileIndex;
 originalNameMap.putAll(symbolName, originalNameIndex);
 map.put(index, originalNameIndex);
originalNameMap.put(symbolName + "", originalNameIndex);
 originalNameIndex = 0;
 originalNameMap.put, originalNameIndex);
 originalNameId(originalNameIndex);
 return symbolName;
originalNameMap.put(symbolName, originalNameIndex, originalNameMap[index]);
 return (originalNameIndex);
 originalNameIndex = getNameId(index, originalNameIndex);
 symbolNameMap.remove(originalNameIndex);
 this.originalNameMap.put(symbolName, originalNameIndex);
 originalNamesMap.put (, originalNameIndex);
 } } else { nameMap.put(symbolName, originalNameIndex);
 originalNameId(index);
 } } { originalNameMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex, originalNameIndex + -1);
 } else { return 0 ;
 symbolMap.put(symbolName, originalNameIndex);
originalNameMap.remove index;
 } else { originalNameMap_.put(symbolName, originalNameIndex);
 } else { originalNameIndex = - 1 ; } }
 if (index)
originalNameMap.put(symbolName, originalNameIndex, symbolName, originalNameIndex);
 return -1;
originalNameMap.putIndex();
 originalNameId = null;
 originalNameId = 1;
originalNameMap.put(symbolName.length, originalNameIndex);
originalNameMapPut ( symbolName, index);
originalNameMap.put(symbolName, 0); }
originalNameMap.put(originalNameIndex, originalSourceFileId, symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex, symbolName);
originalNameMap.put(symbolName", originalNameIndex);
 symbolName = "";
originalNameMap.put(symbolName, originalNameIndex, originalNameIndex - 1);
 } if ( index!= null ) { originalNameIndex +=
originalNameMap.put(symbolName, originalSourceFileId, symbolName, originalNameIndex);
 originalNameIndex = -1);
originalNameMap.put(symbolName, originalNameIndex) ; index ++ ;
originalNameMap.put(originalNameMap.size - 1, symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex) ; } return originalNameIndex ; } }
originalNameMap.put(symbolName, 0xFFFFFFFF);
 put(symbol, originalNameIndex);
 originalNamesMap.remove(originalNameIndex);
 originalNames.put(symbolName, originalNameIndex);
originalNameMap.put(originalNameId, originalSourceFileId, symbolName, originalNameIndex);
 originalNameIndex = -1;
 map. put ( symbol, originalNameIndex);
 names.add(originalNameIndex);
 originalNameName ++;
originalNameMap.put(originalNameIndex, originalSourceFileIndex);
 map( symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex) return originalNameIndex;
originalNameMap.put(symbolName, originalNameIndex, originalNameIndex + symbolLength);
 originalNameIndex(originalNameIndex);
 map(symbol, originalNameIndex);
originalNameMap.put(index, index);
originalNameMap.put(symbolName, originalNameIndex, index - originalNameIndex);
 originalNameMapNameIndex.put(symbolName, originalNameIndex);
originalNameMap.put(originalNameName, originalNameIndex);
 return originalNameIndex;
originalNameMap. remove ( index )
 originalNameAdd(originalNameIndex);
 originalNameAdd(index);
originalNameMap.put(symbolName, originalNameIndex, index - lastSourceFileIndex);
 index = null;
 symbolNameName ++;
originalNameMap.put(originalNameMap.size, symbolName, originalNameIndex);
originalNameMap.put(symbolName.name, originalNameIndex);
 symbolName(originalNameIndex);
 if (index) nameMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex) ; index -- ;
originalNameMap.put(symbolName, originalNameIndex, index + 1);
originalNameMap.put(symmbolName); }
originalNameMap.put(symbolName, originalNameIndex, originalNameNameIndex);
originalNameMap.put(symbolName, originalNameIndex, lastSourceFile);
 symbolName(index);
 return originalIndex;
 originalNameMapNameMap.put(symbolName, originalNameIndex);
 namesMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex, index + originalNameIndex);
originalNameMap.put(mbolName, index);
originalNameMap.put(symbolName, originalNameIndex) + 1;
 return (int) index);
originalNameMap.put(symbolName index);
 originalNameMapPut(symbolName, originalNameIndex);
originalNameMap.put(sourceName, symbolName);
originalNameMap.put(originalName, symbolName);
Map.put(symbolName, originalNameIndex);
originalNameMap = newMap ;
 maps.put(name, originalNameIndex);
 } if (index)
originalNameMap.put(originalNameMap.LOCALE, symbolName, originalNameIndex);
 originalNameIndex = 0);
 return symbolIndex;
originalNameMap.put(originalNameMap.locale, symbolName, originalNameIndex);
 put symbolName, originalNameIndex);
originalNameMap.put( (int) index, symbolName, originalNameIndex);
 newName(index);
originalNameMap.put(symbolName, originalNameIndex) - 1;
originalNameMap.put({ symbolNameIndex});
 put(index, originalNameIndex);
 } else { return index ;
originalNameMap.put(symbolName", originalNameIndex); }
originalNameMap.put ( null);
 originalNameMapIndex.put(symbolName, originalNameIndex);
 map.add(originalNameIndex);
 originalNamesMap.put(symbolName, originalNameIndex);
 store ( symbolName, originalNameIndex);
originalNameMap = null
originalNameMap.put(originalNameMap.namespace, symbolName, originalNameIndex);
 return (-1);
 index = 0;
 return (originalName);
originalNameMap.put(symbolName, originalNameIndex, originalIndex + 1);
 originalName.put(symbolName, originalNameIndex);
 index = 0;
originalNameMap.put(symbolName, originalNameIndex, -1);
 add(index);
originalNameMap.put ( name);
originalNameMap.put( (int) lastSourceFile, symbolName, originalNameIndex);
 originalNameIndex++; }
originalNameMap.put(symbolName, originalNameIndex) return index;
 index(index);
 } else { symbolMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex, originalNameId ++);
originalNameMap -- ;
 newNameMap.put(symbolName, originalNameIndex);
originalNameMap.put({ symbolName});
originalNameMap.put(sourceName, symbolName, originalNameIndex);
originalNameMap.put(symbolName,  originalSourceFileIndex); }
originalNameMap.put(originalNameMap.nameId, symbolName, originalNameIndex);
 names.put(symbolName, originalNameIndex);
originalNameMap.put(index, originalSourceFileId, symbolName, originalNameIndex);
originalNameMap.put(symbolSymbol, originalNameIndex);
originalNameMap.put(originalName);
 map(index, originalNameIndex);
 return (originalIndex);
originalNameMap.put(symbolName, originalNameIndex, lastSourceFileIndex);
 nameId(originalNameIndex);
originalNameMap.put(originalNameMap.indexOf, symbolName, originalNameIndex);
 return -(index);
originalNameMap.put(originalNameMap.class, symbolName, originalNameIndex);
originalNameMap.put(symbolName), originalNameIndex);
originalNameMap.put( (int) sourceName, symbolName, originalNameIndex);
originalNameMap.put(symbolName,  newNameIndex); }
originalNameMap.put(symbolName', originalNameIndex);
originalNameMap.put(0, index);
originalNameMap.put(null, null);
originalNameMap.put(originalNameId, symbolName, originalNameIndex);
 setName(originalNameIndex);
originalNameMap.put(originalNamespaceName, symbolName, originalNameIndex);
originalNameMap.put(originalNamespace, symbolName, originalNameIndex);
originalNameMap.pop();
originalNameMap.put(symbolName, originalNameIndex, 0xFF);
originalNameMap.remove(); }
originalNameMap.clear(); }
originalNameMap.size();
 mapName(symbolName, originalNameIndex);
originalNameMap.reset();
 mapping.put(symbolName, originalNameIndex);
originalNameMap.put(originalName, symbolName, originalNameIndex);
originalNameMap.put(originalNameIndex, symbolName, originalNameIndex);
 return index);
originalNameMap.put(originalFileMap, symbolName, originalNameIndex);
originalNameMap.put(originalNameIndex ++, symbolName, originalNameIndex);
originalNameMap.put(originalNameMap, symbolName, originalNameIndex);
originalNameMap.put(mbolName);
 } put(symbolName, originalNameIndex);
 new Integer(originalNameIndex);
 return 0;
originalNameMap.put( (int) 0, symbolName, originalNameIndex);
originalNameMap.put(this.nameId, symbolName, originalNameIndex);
 mapEntry(symbolName, originalNameIndex);
originalNameMap.put(sourceName);
 return (-originalNameIndex);
 maps.put(symbolName, originalNameIndex);
 add(originalNameIndex);
 originalNameIndex++;};
 renameName(symbolName, originalNameIndex);
 return get(originalNameIndex);
 emit(originalNameIndex);
originalNameMap.put null;
originalNameMap.put(symbolName,  originalSourceFileIndex);
 originalNameIndex++; ;
originalNameMap.put(baseName, symbolName, originalNameIndex);
originalNameMap.put(lastSourceFile, symbolName, originalNameIndex);
originalNameMap = undefined ;
originalNameMap = map ;
originalNameMap.put(namespace, symbolName, originalNameIndex);
originalNameMapIndex++;
originalNameMap.put(symbolName), index);
 } return
originalNameMap.put(symbolName, originalNameIndex, originalSourceFile);
(1);
originalNameMap.put(symbolName,  -1Index);
originalNameMap.put(symbolName, nameIndex);
originalNameMap.put(symbolName, null);
 sourceNameMap.put(symbolName, originalNameIndex);
 sourceFileMap.put(symbolName, originalNameIndex);
originalNameMap.put(symbolName,  0xFF);
originalNameMap = "" ;
 (index);
 if (null
originalNameMap.put(symbolName,);
originalNameMap.put(symbolName", index);
 addIndex, originalNameIndex);
 emitName, originalNameIndex);
 setName, originalNameIndex);
originalNameMap.put(symName, originalNameIndex);
originalNameMap.put(0, symbolName, originalNameIndex);
 renameName, originalNameIndex);
 } }
 replace(symbolName, originalNameIndex);
originalNameMap.put(symmbolName, originalNameIndex);
originalNameMap.put(SymbolName, originalNameIndex);
originalNameMap.put(word);
 if ()
originalNameMap.put(string);
 } finally {
 symbolName;
originalNameMap.put(sourceName, originalNameIndex);
 return 1;
 add(symbolName, originalNameIndex);
 -1;
originalNameMap.put(symbolName, origNameIndex);
 set(symbolName, originalNameIndex);
originalNameMap.put(unknownName);
 } else
originalNameMap.put(noName);
 this.
originalNameMap.put(symbolName, originalNameIndex, 0);
originalNameMap.put(synmbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex) ; {
originalNameMap.put(syncmbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex) break ;
originalNameMap.put(symbolName,  1);
originalNameMap.put(symbolName, originalNameIndex) { }
originalNameMap.put(symbolName, originalNameIndex; }
originalNameMap.put(1, symbolName, originalNameIndex);
originalNameMap.put(Index, symbolName, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex, 1);
originalNameMap.put(symbolName, originalNameIndex, null);
originalNameMap.put(0, originalNameIndex);
originalNameMap.put(null, symbolName, originalNameIndex);
originalNameMap.put(string, originalNameIndex);
originalNameMap.put(symbolName, originalNameIndex, false);
originalNameMap.put(in);
originalNameMap.put(0);
 return
