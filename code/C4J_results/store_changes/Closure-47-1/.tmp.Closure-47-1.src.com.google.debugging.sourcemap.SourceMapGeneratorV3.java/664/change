lastSourceFileIndex = sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size(sourceName);
 lastSourceFileIndex = sourceMap.size();
lastSourceFileIndex = sourceFileMap.size(); }
lastSourceFileIndex = sourceFileMap.size(); } else {
 lastSourceFileIndex = 0;
 lastSourceFileIndex = sourceFileMap.size);
 lastSourceFileIndex = sourceFileMap.size(););
 lastSourceFileIndex = source.size();
lastSourceFileIndex = sourceFileMap.size(sourceName); } else { lastSourceFileIndex =
lastSourceFileIndex = sourceFileMap.size(); } else { lastSourceFileIndex =
 lastSourceFileIndex = map.size();
lastSourceFileIndex = sourceFileMap.size(); } else { lastSourceFileIndex = 0 ;
 lastSourceFileIndex = size();
lastSourceFileIndex  = 0 ; } else { lastSourceFileIndex =
lastSourceFileIndex  ++ ;
 sourceFileMap. remove ( sourceName ) ;
lastSourceFileIndex = sourceFileMap.size(sourceName); } } else {
 index = map.size();
 index = size();
lastSourceFileIndex = sourceFileMap.size(); } else { lastSourceFileIndex ++ ;
lastSourceFileIndex = sourceFileMap.size(); } } else {
 sourceFileMap. put ( sourceName, lastSourceFile ) ;
 sourceFileMap. remove ( sourceName ) ; int
 sourceFileMap. put ( sourceName, lastSourceFileIndex ) ;
lastSourceFileIndex = sourceFileMap.size(sourceName); } else {
 lastSourceFileIndex = -sourceFileMap.size();
 lastSourceFileIndex = 0 ; } lastSourceFileIndex= sourceFileMap.size();
 lastSourceFileIndex = 0 ; lastSourceFileIndex= sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size(sourceName); } else { lastSourceFile =
 lastSourceFileIndex = 0 ; sourceIndex=sourceFileMap.size();
 sourceIndex = size();
 lastSourceFileIndex = sourceName;
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } } else {
 sourceFileIndex = lastSourceFileIndex;
 sourceIndex = map.size();
 sourceFileIndex = 0 ;
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } } else { int
lastSourceFileIndex  = sourceNameMap.size();
 lastSourceFileIndex = 0 ; index = map.size();
 lastSourceFileIndex = sourceFileMap.size;
 sourceFileMap. put ( sourceName, lastSourceFileIndex ) ; } else {
 lastSourceFileIndex = 0 ; } } else { lastSourceFileIndex = 0 ; } } else { if ( sourceFileMap!= null ) {
 index =sourceFileMap.size();
 sourceMap.size();
lastSourceFileIndex = sourceFileMap.size(); } else { lastSourceFile =
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; }
 lastSourceFileIndex = sourceName);
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ;
 sourceFileMap. put ( sourceName, 0 ) ;
 sourceFileMap.size(); lastSourceFile ++;
 lastSourceFileIndex = 0 ; } else { lastSourceFileIndex ++ ;
 sourceFileMap[sourceName]= sourceFileMap.size();
 lastSourceFileIndex = sourceFileMap.size(); } if ( index!= null ) { lastSourceFileIndex = index ; }
 sourceFileMap = sourceFileMap;
 sourceFileIndex = 0 ;
 lastSourceFileIndex = sourceFileMap.size(); } if ( index!= null ) { lastSourceFileIndex = index ;
 lastSourceFileIndex = 0 ; } } else { lastSourceFileIndex = 0 ; } } else { if ( sourceName!= null ) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { } else {
 lastSourceFileIndex = 0 ; } } else { if (sourceFileMap!= null) {
 lastSourceFileIndex = 0 ; } } else { if (sourceName!= null) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { if (index == null)
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { if (index!= null)
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } if ( index!= 0 ) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { index = 0 ;
lastSourceFileIndex = sourceFileMap.size(sourceName); } else { index =
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } if ( sourceName!= null ) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { if (null) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { if ( sourceFileMap!= null ) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else
lastSourceFileIndex  = 0 ; } else { lastSourceFile =
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { if (index) {
 lastSourceFileIndex *= sourceFileMap.size();
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } } } else { int
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } }
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { if ( index == 0 )
 lastSourceFileIndex = 0 ; } } else { lastSourceFileIndex = 0 ; } } else { if ( sourceFileMap ) {
 lastSourceFileIndex = 0 ; } if ( sourceFileMap!= null ) {
 sourceFileIndex = sourceName ;
 sourceFileMap = { } ;
 lastSourceFileIndex = 0 ; } sourceIndex=sourceFileMap.size();
 sourceFileIndex = 0 ; } else { sourceFileIndex =
 lastSourceFileIndex =.size();
 lastSourceFileIndex = sourceFileMap.size(); } } else { if (sourceName!= null)
lastSourceFileIndex = sourceFileMap.size(sourceName); }
 sourceFileIndex = sourceName.length;
 lastSourceFileIndex = sourceFileMap.size(); } } else { if (sourceName!= null) {
 lastSourceFileIndex = 0 ; } } else { if (sourceName!= null)
 sourceFileMap. add ( sourceName ) ; int
 lastSourceFileIndex = 0 ; } else { if (index == null) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { if ( sourceFileMap!= null ) { int
 lastSourceFileIndex = sourceMap.size;
 lastSourceFileIndex = 0 ; } } else { if (sourceFileMap!= lastSourceFile) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { if (index) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } if ( index!= 0 )
lastSourceFileIndex = sourceFileMap.size(sourceName); if (index!= null) {
 lastSourceFile = 0;
 int
 lastSourceFileIndex = -1;
lastSourceFileIndex = sourceFileMap.size(); if (index!= null)
 sourceIndex = 0;
lastSourceFileIndex = sourceFileMap.size() - 1 ; } else { lastSourceFileIndex =
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { if (null)
 lastSourceFileIndex = sourceName ; } else { lastSourceFileIndex =
lastSourceFileIndex  = sourceName. length ;
 sourceIndex= sourceFileMap.size();
lastSourceFileIndex  = sourceNameMap.size(); }
lastSourceFileIndex = sourceFileMap.size(); if (index!= null) {
 sourceFileMap. add ( sourceName ) ;
 sourceFileMap. put ( sourceName, lastSourceFileIndex ) ; } } else { int
lastSourceFileIndex = sourceFileMap.size(); } else { index =
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } } else { final int
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex += index ; }
 lastSourceFileIndex = sourceFileMap.size(); } } else { lastSourceFileIndex = 0 ;
lastSourceFileIndex = sourceFileMap.size() - 1 ; } else {
 lastSourceFileIndex = sourceFileMap.size();;
 lastSourceFileIndex = sourceFileMap.size(); } } else { if (sourceName) {
 lastSourceFileIndex = 0 ; } index = map.size();
 sourceFileMap. put ( sourceName, lastSourceFileIndex ) ; } } else { lastSourceFileIndex = 0 ;
 lastSourceFileIndex = sourceFileSize();
 lastSourceFileIndex = 0 ; } if ( index!= null ) {
 lastSourceFileIndex = sourceName + sourceFileMap.size();
 sourceFileMap[lastSourceFile] =sourceFileMap.size();
 sourceFileIndex = sourceMap.size;
lastSourceFileIndex = sourceFileMap.size(sourceName); if (index!= null)
 sourceFileIndex = sourceFileMap.size();
 lastSourceFileIndex = 0 ; } } else { if (sourceName == lastSourceFile)
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { } int
 lastSourceFileIndex = sourceFileMap.size(); } } else { lastSourceFileIndex = -1;
 lastSourceFileIndex = 0 ; } } else { if (sourceName) {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex += index ; } } else { int
 sourceFileMap. remove ( sourceName ) ; } int
 lastSourceFileIndex = 0 ; } if ( index!= null ) { sourceFileMap. remove ( ) ;
 lastSourceFileIndex = sourceName ; } else { lastSourceFile =
 lastSourceFileIndex = 0 ; } } else { if (sourceFileMap!= null)
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { if (!index)
 sourceFileMap.size(); lastSourceFile = 0;
 sourceFileMap. put ( sourceName, null ) ;
 sourceFileMap. put ( sourceName, index ) ;
 lastSourceFileIndex = 0 ; } if ( index!= null ) { if (index)
 index = sourceFile.size();
 lastSourceFileIndex = 0 ; } } else { if (sourceName == null)
 lastSourceFileIndex = - 1 ; } else { lastSourceFileIndex =
lastSourceFileIndex = sourceFileMap.size() - 1;
 lastSourceFileIndex = sourceFileMap..size();
lastSourceFileIndex  = 0 ; } else { index =
 lastSourceFileIndex = 0 ; } if ( index!= - 1 ) {
lastSourceFileIndex  = 0 ; } } else {
 sourceIndex = source.size();
 sourceFileMap. put ( sourceName, lastSourceFileIndex ) ; } } else { lastSourceFileIndex = 0 ; } int
 lastSourceFileIndex = sourceFile.size();
 sourceFileMap = {}; int
 lastSourceFileIndex = sourceFileMap.map.size();
 lastSourceFileIndex = sourceName ; } else { sourceName =
 lastSourceFileIndex = 0 ; } } else { if (source!= null) {
 sourceFileIndex = sourceName);
lastSourceFileIndex = sourceFileMap.size; } else { lastSourceFileIndex = 0 ;
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } {
lastSourceFileIndex = sourceFileMap.size; } else { lastSourceFileIndex =
 sourceFileMap. put ( sourceName, lastSourceFileIndex ) ; } } else { lastSourceFileIndex = 0 ; int
 lastSourceFileIndex = 0 ; } if ( index == null ) {
 sourceFileIndex = sourceName ; } } else {
 lastSourceFileIndex = 0 ; } else { lastSourceFileIndex -- ;
 sourceFileIndex = 0 ; } else { sourceFile =
 lastSourceFileIndex = -1);
 lastSourceFileIndex = sourceFileMap.size(); } } else { lastSourceFileIndex = 0 ; int
 index = sourceMap.size();
lastSourceFileIndex  = 0 ; } else {
 lastSourceFileIndex = sourceFileMap.size(); } else { if (index == null)
 if (sourceFileMap!= null) {
 lastSourceFileIndex = 1 + sourceMap.size();
 sourceFileMap. put ( sourceName, lastSourceFile ) ; int
 lastSourceFileIndex = - 1 ; index = map.size();
 sourceFileMap. put ( sourceName, - 1 ) ;
 lastSourceFileIndex = sourceName ; } } else {
 lastSourceFileIndex = 0);
 lastSourceFileIndex = 0 ; } } else { lastSourceFileIndex = 0 ; } if ( sourceName ) {
lastSourceFileIndex = sourceFileMap.size(); if (index!= null) { }
 lastSourceFileIndex = - 1 ; } else { lastSourceFile =
 lastSourceFileIndex = 0 ; } else { if (index == null)
lastSourceFileIndex = sourceFileMap. size ; } else {
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } else { int
 lastSourceFileIndex = 0 ; } index=sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size() ; if (index!= null) { index =
 index = 0;
lastSourceFileIndex = sourceFileMap.size() - 1 ; }
 lastSourceFileIndex = lastSourceFile + sourceMap.size();
 sourceFileIndex = sourceNameMap.size();
 sourceFileIndex = 0 ; } else {
 lastSourceFileIndex = 0 ; } } else { int
 lastSourceFileIndex = 0 ; index = sourceMap.size();
lastSourceFileIndex = sourceFileMap.size() - 1 ; } } else {
 sourceFileMap. put ( sourceName, lastSourceFileIndex ) ; int
 lastSourceFileIndex = sourceFileMap.revision();
lastSourceFileIndex = sourceFileMapSize();
 lastSourceFileIndex = 0 ; index= sourceFileMap.size();
 sourceFileMap. put ( sourceName, lastSourceFileIndex ) ; }
 sourceFileIndex = 0 ; } } else {
 sourceFileIndex = sourceName ; } else {
 sourceFileIndex = - 1 ; }
 sourceFileMap. put ( sourceName, lastSourceFileIndex ) ; } } else { final int
lastSourceFileIndex  = - 1 ; }
lastSourceFileIndex = sourceFileMap.size() + 1 ; } else { lastSourceFileIndex =
 lastSourceFileIndex = sourceMap.size);
 lastSourceFileIndex = index=sourceFileMap.size();
 sourceFileMap. clear ( ) ;
 lastSourceFileIndex = - 1 ; lastSourceFileIndex= sourceFileMap.size();
 lastSourceFileIndex = lastSourceFileFileMap.size();
 sourceFileIndex = -1;
 lastSourceFileIndex = 0 ; } else { sourceName =
 sourceFileMap. remove ( sourceName )
 lastSourceFileIndex = sourceFileMap.size());
 lastSourceFileIndex = size(source);
 sourceFileIndex = lastSourceFileId;
 lastSourceFileIndex = sourceFileIndex;
 lastSourceFileIndex = 0 ; } if ( index!= null ) { lastSourceFileIndex = index ; } } else { } int
lastSourceFileIndex  = sourceName.length();
lastSourceFileIndex = sourceFileMap.size; } else { lastSourceFileIndex ++ ;
 lastSourceFileIndex = sourceFileMapping.size();
 lastSourceFileIndex = 0 ; } } else { lastSourceFileIndex = 0 ; } } else { } else {
 lastSourceFileIndex = - 1 ; sourceIndex=sourceFileMap.size();
 sourceFileIndex = sourceMap.size();
 lastSourceFileIndex = sourceFileMap.get.size();
 lastSourceFileIndex = sourceName ; } else { index =
lastSourceFileIndex = sourceFileMap.size(); } else { lastSourceFileIndex -- ;
lastSourceFileIndex  = - 1 ; } } else {
 lastSourceFileIndex = 0 ; } if ( index == null )
lastSourceFileIndex = sourceFileMap.size(); } else { } else {
 sourceFileMap = {}; lastSourceFileIndex= sourceFileMap.size();
 lastSourceFileIndex = originalSourceFileMap.size();
 if (index == null)
 sourceFileMap.get(sourceName)= sourceFileMap.size();
 lastSourceFileIndex = 0();
 sourceFileMap.size(); return 0;
 sourceFileMap. put ( sourceName, lastSourceFileIndex); } }
 sourceFileMap.size(); sourceIndex = 0;
 lastSourceFileIndex = sourceName ; sourceIndex=sourceFileMap.size();
 sourceFileIndex = 0 ; } else { index =
lastSourceFileIndex = sourceFileMap.size(); } } else { lastSourceFileIndex ++ ;
 return 0;
 lastSourceFileIndex = sourceFileMap.size(); } } else { if (!index)
 lastSourceFileIndex = index+sourceFileMap.size();
lastSourceFileIndex = sourceFileMap. size ; } } else {
 if (sourceFileMap!= sourceFileMap)
 lastSourceFileIndex = lastSourceFileMap.size();
 lastSourceFileIndex = sourceFileMap.resize();
 lastSourceFileIndex = 0 ; } else { if (!index)
lastSourceFileIndex  = 1 ; } else { lastSourceFileIndex =
 sourceFileIndex = size();
 lastSourceFileIndex = -1();
 lastSourceFileIndex = 0 ; index = Map.size();
 lastSourceFileIndex = sourceFileMap.size();();
lastSourceFileIndex = sourceFileMap.size(source);
 lastSourceFileIndex = (int) 0);
 lastSourceFileIndex = -1; index=sourceFileMap.size();
 sourceFileMap = sourceFileMap.size;
 sourceFileIndex = sourceName ; } }
 sourceFileMap.get(sourceName); index= sourceFileMap.size();
 sourceIndex = sourceFileSize();
 lastSourceFileIndex + 1= sourceFileMap.size();
 sourceFileMap = sourceName ;
 sourceFileMap.size(); lastSourceFile = null;
lastSourceFileIndex = sourceFileMap.size(); if (index) {
 if (index) {
 lastSourceFileIndex = 0 ; } index += map.size();
lastSourceFileIndex = sourceFileMap.size(sourceName); if (index) {
 lastSourceFileIndex = (int)sourceFileMap.size();
 lastSourceFileIndex = 0 ; } } else { lastSourceFileIndex = 0 ; int
 lastSourceFileIndex = source.size;
 lastSourceFileIndex = -1 + sourceMap.size();
 sourceFileMap.size(); index = 0;
 sourceFileIndex = sourceName ;
lastSourceFileIndex = sourceFileMap.size(); } else { lastSourceFileIndex ;
 sourceFileMap. put ( sourceName, lastSourceFile ; int
 lastSourceFileIndex = sourceFileMap.size(\);
lastSourceFileIndex  = sourceName ; } else {
 sourceFileMap = sourceFileMap();
 sourceIndex = sourceMap.size();
 lastSourceFileIndex = 0 ; } } else { final int
lastSourceFileIndex = sourceFileMap.size(sourceName); } else { lastSourceFileIndex ;
 lastSourceFileIndex = sourceName-sourceFileMap.size();
 lastSourceFileIndex = 1+sourceFileMap.size();
 lastSourceFileIndex = Integer (sourceName);
lastSourceFileIndex = sourceFileMap.size() - 1 ; } else { lastSourceFile =
 sourceFileIndex = 0 ; } }
lastSourceFileIndex  = 0.0 ;
 index = source.size();
 sourceFileMap = sourceMap;
 if (!index)
 lastSourceFileIndex = sourceNameMap.size(); } }
 lastSourceFileIndex = sourceFilesMap.size);
lastSourceFileIndex = sourceFileMap.size(); } else { } }
 sourceFileIndex = source.size();
 sourceFileMap. remove ( sourceName ) ; }
 lastSourceFileIndex = index *= sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size(sourceName); } else { index ++ ;
lastSourceFileIndex = sourceFileMap.size(sourceName); } } else { index =
 lastSourceFileIndex = sourceMap.size(););
 lastSourceFileIndex =Map.size();
lastSourceFileIndex  = - 1 ; } else {
 lastSourceFileIndex = Number (sourceName);
 sourceFileMap lastSourceFileIndex=sourceFileMap.size();
 lastSourceFileIndex = map.size);
 sourceIndex = sourceName);
 sourceIndex = -1);
lastSourceFileIndex = sourceFileMap.size(); } else { sourceName =
 newSourceFileIndex = sourceFileMap.size);
 sourceSourceFileIndex = sourceFileMap.size();
 sourceFileIndex = lastSourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size(sourceName) - 1;
 sourceFileMap.get(sourceName) *= sourceFileMap.size();
 sourceFileIndex = -1);
 sourceFileMap [ lastSourceFile ] *= sourceFileMap.size();
 lastSourceFileIndex = size(file);
 lastSourceFileIndex = sourceFileNameMap.size();
lastSourceFileIndex = sourceFileMap.size(sourceName); } else { sourceIndex =
 lastSourceFileIndex = 0xFFFF ;
lastSourceFileIndex = sourceFileMap.size() + 1 ; } else {
 sourceFileIndex = map.size();
 lastSourceFileIndex = file.size();
 lastSourceFileIndex = index %= sourceFileMap.size();
 lastSourceFileIndex = 0 ;
lastSourceFileIndex = sourceFileMap. get ( sourceName ) ;
lastSourceFileIndex = sourceFileMap.size() + 1 ; } } else {
 lastSourceFileIndex = sourceFileMappings.size();
 lastSourceFileIndex = sourceFileCount;
 } else { lastSourceFileIndex =sourceFileMap.size();
 sourceName.size();
 index = 0();
 firstSourceFileIndex = sourceFileMap.size();
 sourceFileIndex = 0xFFFF ;
 index = -1);
 sourceFileMap.remove sourceName;
lastSourceFileIndex = sourceFileMap.size; } else { index =
 lastSourceFileIndex = (lastSourceFile);
lastSourceFileIndex = sourceFileMap.size() - 1 ; } else { index =
lastSourceFileIndex = sourceFileMap.size(lastSourceFile); }
 lastSourceFileIndex = 0 ; index *= sourceFileMap.size();
 sourceFileIndex = size(source);
 lastSourceFile =sourceFileMap.size();
 lastSourceFileIndex = (0);
lastSourceFileIndex = sourceFileMap.size(); if (index)
lastSourceFileIndex = sourceFileMap.size(sourceName); } if (index)
 if (null) {
lastSourceFileIndex  = 0 ; }
 sourceName = null;
lastSourceFileIndex = sourceFileMap.size(); } }
lastSourceFileIndex  = sourceName.size();
 sourceIndex = 0();
 sourceIndex =Map.size();
lastSourceFileIndex = sourceFileMap.size(); lastSourceFileIndex ++ ;
 } else { sourceIndex=sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size(sourceName); } }
lastSourceFileIndex = sourceFileMap.size(sourceName); if (index)
 lastSourceFileIndex = ++sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size(); } else { sourceId =
lastSourceFileIndex = sourceFileMap.size(sourceName) - 1 ; }
 sourceFileIndex = index ;
 sourceFileIndex = 1 ;
 sourceFileMap.size(); return sourceName);
lastSourceFileIndex = sourceFileMap.size(sourceName; } } else {
 lastSourceFileIndex = 1 + sourceFile.size();
 lastSourceFileIndex == sourceFileMap.size();
lastSourceFileIndex  = 0 ; } }
 lastSourceFileIndex = 1;
 newSourceFileIndex ++ ;
lastSourceFileIndex = sourceFileMap.size() + 1 ; } else { index =
lastSourceFileIndex = sourceFileMap.size(lastSourceFile) ;
 lastSourceFileIndex %= sourceFileMap.size();
lastSourceFileIndex  = sourceName ; }
lastSourceFileIndex = sourceFileMap.size(sourceName) + 1;
lastSourceFileIndex = sourceFileMapSize ;
 sourceSourceFileIndex = sourceMap.size();
 lastSourceFileIndex = index ||= sourceFileMap.size();
 firstSourceFileIndex = sourceMap.size();
lastSourceFileIndex = sourceFileMap.size() + 1;
 lastSourceFileIndex ++>= sourceFileMap.size();
 lastSourceFileIndex =!sourceFileMap.size();
 lastSourceFile = map.size();
 lastSourceFileIndex = index += sourceFileMap.size();
 sourceFile.size();
 lastSourceFile = null ;
lastSourceFileIndex = sourceFileMap.size() + 1; }
 newSourceFileIndex = sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size(lastSourceFile); } else {
 lastSourceFile = null;
lastSourceFileIndex  = sourceNameMap.size(); } return
lastSourceFileIndex = sourceFileMap. size - 1 ;
 sourceFileIndex = 0();
 lastSourceFileIndex ++<= sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size(sourceName); } else { index ;
lastSourceFileIndex = sourceFileMap.size() - 1 ; } }
 lastSourceFileIndex = --sourceFileMap.size();
 index =Map.size();
lastSourceFileIndex = sourceFileMap.size(); } else { index ;
lastSourceFileIndex = sourceFileMap.size(); break ; default :
lastSourceFileIndex = sourceFileMap.size() - 1.0;
 lastSourceFileIndex = 1();
 sourceIndex = -1;
 sourceIndex = (0);
 lastSourceFile = 0();
 lastSourceFileIndex |= sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size(); } else { }
 if (null)
 sourceIndex = (1);
 index = file.size();
lastSourceFileIndex = sourceFileMap.size() + lastSourceFileIndex;
lastSourceFileIndex = sourceFileMap.size(); } return
 return -1;
lastSourceFileIndex  = 0 ; } else { index +=
lastSourceFileIndex = sourceFileMap.size(sourceName + 1);
 lastSourceFile = 1;
 return -1);
 return size();
 return 0();
 sourceIndex = 1;
 index = size(););
 lastIndex = map.size();
 index = 0 ;
 lastSourceFileIndex = sourceFiles.size();
lastSourceFileIndex = sourceFileMap.size; }
 sourceIndex = sourceName;
 } else {
 return sourceName;
 } lastSourceFileIndex=sourceFileMap.size();
 index = 0);
 sourceFile = 0();
 lastSourceFileIndex += sourceFileMap.size();
 sourceName = 0();
 index = sourceName.size();
 index = (-1);
 index = sourceName);
lastSourceFileIndex = sourceFileMap. size ; } }
 return (-1);
lastSourceFileIndex = sourceFileMap.size(lastSourceFile); } }
 index = null ;
lastSourceFileIndex = sourceFileMap.size(); break ; }
 index = 1;
 lastSourceFile ++;
 index = 1();
lastSourceFileIndex = sourceFileMap.size(currentSourceFile); }
lastSourceFileIndex = sourceFileMap.size() ; } else { index++;
 sourceName =size();
 index(0);
lastSourceFileIndex = sourceFileMap.size(); this.
lastSourceFileIndex = sourceFileMap.size(); index =
lastSourceFileIndex = sourceFileMap.size(0);
lastSourceFileIndex = sourceFileMap.size(index);
lastSourceFileIndex = sourceFileMapsize();
 return 0);
 final int
lastSourceFileIndex = sourceFileMap.size(); } else
 return (int);
lastSourceFileIndex = sourceFileMap.size()); }
 fileIndex=sourceFileMap.size();
 return 1;
 ++index;
lastSourceFileIndex = sourceFileMap.size(file);
lastSourceFileIndex = sourceFileMapsize ;
 } int
 if not found
 lastIndex= sourceFileMap.size();
lastSourceFileIndex  --;
 if not {
 return 1();
 if null {
 if (! {
 index *= sourceFileMap.size();
 return index();
 index = length();
 -1;
 } else
 index = capacity();
 ++ size();
lastSourceFileIndex  = 0
 ++index);
 initialize ();
 ++Map.size();
lastSourceFileIndex = sourceFileMap.size(fileName);
 return -);
 size=size();
 sourceName
 index +=size();
lastSourceFileIndex = sourceFileMap.size(sourceFile);
 fileMap.size();
 return null);
 index.size();
 sourceId
 sourceNameIndex= sourceFileMap.size();
lastSourceFileIndex = sourceFileMap.size() ++;
lastSourceFileIndex = sourceFileMap.size() break;
lastSourceFileIndex = sourceFileMap.size() break }
 sourceIndex *= sourceFileMap.size();
 index +=sourceFileMap.size();
 {
 index++sourceFileMap.size();
 Integer
lastSourceFileIndex := sourceFileMap.size();
lastSourceFileIndex ++ sourceFileMap.size();
