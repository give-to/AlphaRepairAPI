 return "null;
 return null;
return null ; } else { return implicitPrototype ;
 return null
 return "prototype";
return null ; } else { return implicitPrototype ; }
 return implicitPrototype;
return null ; } return null ;
 return "prototype;
return null ; } else { return "prototype";
 return this.implicitPrototypeFallback;
return null ; } else { return null ;
 return this.implicitPrototypeFallback=null;
return null ; } else { return "" ;
 return this.implicitPrototype;
 return "null" ; } else { return "null;
return null ; } return implicitPrototype ;
return null ; } } else { return implicitPrototype ;
 return implicitPrototypeFallback;
 return this.implicitPrototype + ".prototype;
 return this.implicitPrototype=null;
return null ; } else { return this. referenceName ;
return null ; } } else { return null ;
 if (ownerFunction == null) {
return null ; } default : return implicitPrototype ;
 return implicitPrototypeFallback + ".prototype;
 return this. getReferenceName ( ) + ".prototype" ; } } else {
 return this.implicitPrototypeFallback;
return null ; } return implicitPrototypeFallback ;
 return this. getReferenceName();
 return this. getReferenceName ( ) + ".prototype" ; } else {
return null ; } else { return null ; }
 return this.implicitPrototypeFallback = implicitPrototype; }
return null ; } } return this ;
 if (null == that) {
 return this. getReferenceName ( ) + ".prototype";
 return this.implicitPrototypeFallback = implicitPrototype; } else {
 return this.implicitPrototypeFallback = implicitPrototype ; } } else {
return null ; } else { return "null";
 return "null" + "null;
 return null ; } else { return "null;
 return this.implicitPrototypeFallback.getReferenceName() + ".prototype"; }
return null ; } return "" ;
 return this. getReferenceName ( ) ;
 return this. getReferenceName ( ) + ".prototype" ; } if ( isPrettyPrint ) {
 return this.implicitPrototypeFallback + "prototype" ; } } else {
 return implicitPrototype + ".prototype;
 return "null" ; } return "null;
 return this.implicitPrototypeFallback + "prototype" ; } else {
 return this. implicitPrototypeFallback ; } else {
 return this. getReferenceName ( ) + ".prototype"; }
 return this. getReferenceName ( ) + ".prototype" ; } if ( hasCachedValues ) {
 return this.implicitPrototype = _null;
 return this.implicitPrototypeFallback + "prototype" ; }
 return "prototype" ;
 return this.implicitPrototypeDefault;
 return this. implicitPrototypeFallback. prototype;
 return this.referenceName;
 return this. getReferenceName ( ) + ".prototype"; } if ( return null ) {
 return this. getReferenceName ( this. toMaybeObjectType ( ), this. toMaybeFunctionType ( ) ) ; } else {
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint() ) {
 return implicitPrototype.null;
 return this.implicitPrototype = "null;
 return this.implicitPrototypeFallback = implicitPrototype ; } }
 return this. getReferenceName ( ) + ".prototype"; } if ( null == that ) {
 return this. getReferenceName ( this. toMaybeClassType ( ), this. toMaybeFunctionType ( ) ) ; } else {
 return this. getReferenceName ( ) + ".prototype" ; } if (! isPrettyPrint ) {
 return "null" ;
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint == false ) {
return null ; } else { return undefined ;
 return this. getReferenceName ( this. toMaybeClassType ( ), this. toMaybeMethodType ( ) ) ; } else {
 return this. getReferenceName ( ) + ".prototype" ; } } } else {
return null ; } else { return this ;
 return null ; } else { return "prototype;
 return this. getReferenceName ( ) + ".prototype"; } if ( ignore ) {
 return this. getReferenceName ( ) + ".prototype" ; } if (! prettyPrint ) {
 return this. getReferenceName ( ) + "prototype";
 return implicitPrototypeFallback.prototype;
return null ; } } return true ;
 return this. getReferenceName ( this. toMaybeClassType ( this. toMaybeClassType ( this. type ) ) ) ;
 return className=null;
 return "prototype.null;
return  "prototype" + implicitPrototype ;
 return this. getReferenceName ( this. toMaybeClassType ( this. toMaybeFunctionType ( this. constructor ) ) ) ;
 return this. getReferenceName ( ) + ".prototype" ; } if ( isPrettyPrint!= null ) {
return null ; } } return false ;
 return null ; } else { return "this.null;
return null ; } else { return this ; }
return null ; } return this ;
 return implicitPrototype ; }
 return this. getReferenceName ( ) + ".prototype"; } }
 return this. implicitPrototypeFallback = "null;
 return this. getReferenceName ( ) + ".prototype" ; } if ( isPrettyPrint == true ) {
 if (ownerFunction!= null) {
 return this. getReferenceName ( ) + ".prototype" ; } if ( ignoreNull ) {
 return this. getReferenceName ( this. toMaybeClassType ( this. toMaybeClassType ( that ) ) ) ; }
 return this.implicitPrototypeFallback.getReferenceName(); } }
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint ) { return prettyPrint ;
 return this.implicitPrototypeFallback.null;
 return this. getReferenceName ( ) + ".prototype" ; } if ( ignoreReferences ) {
 return implicitPrototypeFallback=null;
 return this.implicitPrototype; }
return  this. implicitPrototypeFallback ; }
 return this. getReferenceName ( this. toMaybeClassType ( ), this. toMaybeFunctionType ( ), false ) ;
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint ) { if ( prettyPrint ) {
 return this. getReferenceName ( this. toMaybeObjectType ( ), this. toMaybeFunctionType ( ), "prototype" )
 return this.getReferenceName().null;
 return this. getReferenceName ( ) + "prototype" ; } if ( isPrettyPrint == false ) {
 return null ; } else { return this.null;
 return implicitPrototype=null;
 if (null === that) {
 return this. getReferenceName ( this. toMaybeClassType ( ), this. toMaybeFunctionType ( ) ) ; }
 if (return null) {
 return this. getReferenceName ( this. toMaybeClassType ( this. toMaybeFunctionType ( this ) ) ) ; }
return null ; } else { return implicitPrototypeDefault ;
return null ; } } return null ;
 return implicitPrototypeFallback;
 return this. getReferenceName ( this. toMaybeClassType ( this. toMaybeObjectType ( this ) ) ) ; }
 return this. getReferenceName ( ) + ".prototype" ; } if ( isPrettyPrint ) { return prettyPrint ; }
 return getReferenceName ( ) + ".prototype";
 return this.implicitPrototype_null;
 return this.null;
 return this. getReferenceName ( this. toMaybeClassType ( this. toMaybeClassType ( this. type ) ) )
 return "prototype" + "null;
 return "" ;
 return getReferenceName ( ) + "prototype";
 return this. getReferenceName ( this. toMaybeClassType ( ), this. toMaybeFunctionType ( ) ) ; } }
 return this.implicitPrototypeFallback();
 return typeName + "prototype" + "null;
 return this. getReferenceName ( this. toMaybeObjectType ( ), this. toMaybeFunctionType ( ), "prototype"); }
 return "prototype:null;
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint ) { if ( pretty )
 return this.getReferenceName;
 return this. getReferenceName ( ) + ".prototype" ; } if ( isPrettyPrint ) { if ( prettyPrint )
 return this.implicitPrototypeUnknown;
 return this. getReferenceName ( ) + ".prototype" ; } } else { if (className == null) {
 return this.getReferenceName()null;
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint ) { boolean prettyPrint ;
 return this. getReferenceName ( this. toMaybeClassType ( this. toMaybeClassType ( that ) ) ) ; } }
return  this. getReferenceName ( )
 return this.implicitPrototype:null;
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint ) { if ( return null ) {
 return typeName + "prototype" ; } else {
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint ) { if ( pretty ) {
 return this. getReferenceName ( ) + ".prototype()"; }
 return null ; } if ( isPrettyPrint ) {
 return this.prototype.prototype;
 return this. getReferenceName ( ) + ".prototype"; } else
 return implicitPrototypeFallback.null;
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint ) { boolean prettyPrint() {
 if (null == this) {
return null ; return null ;
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint ) { if ( debug ) {
 return typeName + "prototype" ; } } else {
 return this. getReferenceName ( ) + prototype;
return null ; } return undefined ;
 return null ; } else { return defaultValue;
 return this. getReferenceName ( ) + "prototype" ; }
 return implicitPrototype:null;
 return this. getReferenceName ( ) + ".prototype"; } if ( isPrettyPrint ) { return prettyPrint ; } }
 return implicitPrototypeDefault ;
return  implicitPrototypeFallback ; }
 return this.referenceName=null;
return null ; return "" ;
 if (null) {
 if (noReferenceName)
 return implicitPrototype; }
 if (isPrettyPrint)
 return null;
 return this.prototypeFallback;
return  implicitPrototype. referenceName ;
 return referenceName;
 return "prototype=null;
 return implicitPrototype + "null;
 return this. getReferenceName ( ) + ".prototype" ; } } else { {
 return this. implicitPrototypeFallback ; } }
 return typeName + ".prototype".null;
 return implicitPrototypeFallback ; }
 return this. getReferenceName ( ) + ".prototype;" ;
 return this. getReferenceName ( ) + ".prototype" ; } if ( isPrettyPrint ) { }
return null ; }
 return null ; }
 return typeName + ":null;
 return "this.null;
 return implicitPrototype_null;
 return "unknown type";
 return implicitPrototype + "prototype;
 return this.prototypeName;
 return this. getReferenceName ( ) + ".prototype" ; } if ( hasCachedValues ) { {
 return "" ;
 return implicitPrototype|null;
return null ; } }
 return typeName + "." + "prototype" ; } }
return null ; } return null ; }
 return ;
return null ; } } ;
 return this. getReferenceName ( ) + ".prototype"; else
 return typeName + ".prototype" ; }
 return defaultReferenceName;
return null ; } return ;
 return typeName ;
 return implicitPrototypeUnknown;
 return prototype.null;
 return ":null;
 return "unknown type;
 return "unknown";
 return "" ; }
 return "prototype"; }
 return "prototype"
 if (!debug)
 return "()null;
 return type.null;
 return defaultValue;
 return null ; } }
 if (!hasReference())
 return ""
 return defaultName;
 return undefined;
return null.prototype;
 return undefined ;
 return _null;
return null ; break ;
 return {
 return 'null;
return null + prototype ;
 return undefined
 return name;
 default:
 return this;
 return ",null;
 return {
 return
 return null
 throw "null;
 default {
return null;" }
return null. *
return null;" ;
 {
