if (info == null) {
if (info == null && parent!= null) {
if (info  == null)
 if (null) {
if (info ) {
 } else{
if  (!info)
 if (!info){
if (info == null && origParent!= null) {
 if (info!== null) {
if (info  == null) { allowDupe =
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("duplicate"); }
 if (info == null) { info = n.getJSDocInfo(); }
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("duplicate"); } else
 if (info!= null) { info = n.getJSDocInfo(); }
 } else { JSDocInfo
if (info == null || info == null) {
 if (info!= null) { allowDupe = info. getSuppressions().contains("catch"); }
 if (info!= null) { info = n.getJSDocInfo(); } else
 if (== null) {
 if (info == null) { info = n.getJSDocInfo(parent); }
 if (info == null) { info = n.getJSDocInfo(); } else
 if (info == null) { allowDupe = true;
 if (info!= null) { allowDupe = true;
 if (info == null) { info = parent.getJSDocInfo(); }
if (info == null)  { allowDupe = true ; } else {
 if (info!= null) { allowDupe = info. getSuppressions().contains(); }
 if (info!= null) { allowDupe = info. getSuppressions().contains("dupe"); }
 if (info!= null) { allowDupe = info. getSuppressions().contains(""; }
 if (info == null) { info = parent.getJSDocInfo(); } else
 if (parent.getJSDocInfo!== null) {
 if (info == null) { info = origVar.info(); }
 if (info == null) { info = parent. getJSDocInfo(); } else { allowDupe = true ; }
 if (info == null) { info = origVar.info; }
 if (info == null) { info = parent.getJSDocInfo(); } else { allowDupe =
 if (info == null) { info = n.getJSDocInfo() } else
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("duplicate") ; } else {
 if (info == null) { return; }
 if (info!= null) { allowDupe = info. getSuppressions().contains("ignore"); }
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("duplicate") ; } } else
 if (info == null || origVar.info == null) {
 if (info == null) { info = parent.getJSDocInfo(); } } else {
if (info == -1) {
 if (!allowDupe) { if (info == null) {
 if (info == null || origVar == null) {
 if (info == null) { } else{
 if (info!= null) { info = n.getJSDocInfo();
 if (info!= null) { allowDupe = info. getSuppressions().contains("catch");
 if(!null) {
if (info  == null) { allowDupe = true ;
 if (info!= null) { info = n.getJSDocInfo() } else
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("ignore"); } else
 if (info == null) { info = parent.getJSDocInfo(); } else { allowDupe = true;
 if (info == null) { info = parent.getJSDocInfo(); } allowDupe =
 if (info == null) { info = parent.getJSDocInfo(); } } else
 if (info!= null) { allowDupe = info. getSuppressions().contains(""); }
 if (info == null) { info = parent.getJSDocInfo();
 if (info!= null) { info = n.getJSDocInfo(info); }
 if (info!= null) { allowDupe } else
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("");
 if (info!= null) { info = n.getJSDocInfo(true); }
 if (info == null) { info = origVar.info();
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("catch"); } else
if (parent) {
 if (info == null) { allowDupe } else
 if (origParent!== null) {
 if (info == null || origParent!= null) {
 if (info == null) { info = n.getJsDocInfo(); }
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("duplicate" ; } else
 if (!allowDupe) if (info == null) {
 if (parent.getJSDocInfo()== null) {
 if (info == null) return;{
 if (parent!== null) {
 if (info!= null) { allowDupe = true; }
 if ( info!= null ) { allowDupe = info. getSuppressions ( ) ; }
 if (info == null) return; else{
 if (!) {
if (info == null || info == null || origVar == null) {
if (info == null ||!info) {
if (info ==  null) { if (parent!= null) {
 if (info!= null) { info = info.getInfo(); }
if (info == null && parent) {
 if (info == null) { info = origVar.info};
 if (info == null) { return; } else
if (info == null || info == null || info == undefined) {
if (info == null || info == this) {
 if (info == null) { allowDupe ; }
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("duplicate" ; } } else
 if (info!= null) { info = n.getJsDocInfo(); }
 if (info == null || allowDupe==null) {
 if (info == null || origParent == null) {
 if (info == null) { info = origVar.getInfo(); }
if (info  == null) { if (parent!= null)
 if (info == null) { info = parent.getJsDocInfo(); }
 if (info == null) { info = parent.getInfo(); }
 if (!allowDupe) { if (null) {
 if (info == null) { info = n.getJSDocInfo(parent); } else
 if (info == null) { allowDupe = true }
 if (info == null) { allowDupe = true; }
 if (info!= null) { info = n.getJSDocInfo(); } } else
 if (info!= null) { if(info == null) {
if (info == null || info == parent) {
 if (info.getParentNode()!== null) {
 if (info == null) { info = parent. getJSDocInfo(); } else { allowDupe = true ; } else
if (info == null || info == null || origParent == null) {
 if (info == null) { info = parent.getJSDocInfo(); } } } else
 if (info == null) { info = n.getInfo(); }
 if (info == null) { info = n.getCommentsInfo(); }
 if (!allowDupe && info==null) {
if (info == null && parent.getType() == Token.CATCH) {
 if (info == null || info.parent==null) {
if (info == null || info == null ) { allowDupe =
 if (info!= null) { return; }
 if (info == null) return; } else{
if (info == null && parent!= null && origParent!= null) {
 if ( info!= null ) { allowDupe = info. getSuppressions().contains("duplicate") ; } } }
 if (info == null) { allowDupe = true};
 if (info!= null) if(info == null) {
if (parent)
 if (info == null) { info = n.getParentInfo(); }
if (info == null && parent instanceof JSDocInfo) {
if (info == null || info == undefined) {
 if (info!= null) { allowDupe; }
if (info == null || info. isEmpty ( )) {
if (info == null || info == null || info == null) {
 if (info == null) return; if(info == null) {
 if (info == null || info instanceof Error) {
if  (info == null) { allowDupe
if  (info == null) { JSDocInfo
 if (info == null || info.input==null) {
 } else { if (parent!= null) {
 if (info) { allowDupe = true;
 if (!allowDupe) { if(!null) {
if (info == null || info == null && parent!= null) {
 if (info == null ||!origVar.info == null) {
if (info == null || info == null || info == "") {
 if (info!= null) { allowDupe }
 if (info == null) { } } else{
if  (info == null) { AllowDupeInfo
 } else { if (parent!== null) {
if (info == null || info == null || info. name!= name) {
 if (info!= null) { info = info. getInfo ( ) }
 if (ignoreDupe) { if (info == null) {
if (info == null) { if (parent) {
 if (!allowDupe)
 if (ignoreDupe) {
if (info == null || info.length == 0) {
if (info == null)  { allowDupe = false ; } else {
if (info == null && parent.isDeclared(name) {
 if (info.getParent()!== null) {
if (info == null) { allowDupe = true
 if (info!= null) { info = info. getInfo ( ) ;
 if (info!= null) { allowDupe;
 if (!info) { allowDupe = true;
if (info == null && origVar!= null) {
 if (info!= null && parent!=null) {
if (info == null && parent.getJSDocInfo()) {
 if (info == null || origParent.info == null) {
 } else if (parent!== null) {
if (info == null && parent!= null && origVar!= null) {
 if (info!= null && origVar.info == null) {
 if (isGlobal){
 if (ignoreDupe)
if (info == null ||!info.hasSuppressions(...)) {
 } else { JSDoc
if  (info == null) { JSDoc
if (info!= null && parent) {
 if (info!=null) {
 if (info == null) { info = parent.getJSDocInfo(); } else { else
 if (info.getName()!== null) {
if (info == null || info == null || info. name == name) {
if (info == null || info == null || origParent!= null) {
if (info == null || info. getName ( ) == name) {
 } else { if (info ==null) {
 if (!allowDupe) {
 if (info!= null && parent.input!== null) {
if (info == null || info == null || origVar!= null) {
if (info == null || info == null || info == this) {
 if (info!= null)
if (info == null) { allowDupe = true ; } else
 if (info.getJSDocInfo()== null) {
 } else { if (parent!= null)
 if (!allowDupe) return; if(info == null) {
 if (!info.isEmpty())) {
if (info == null ||!info.hasSuppressions(?)) {
 if (allowDupe) { if(info == null) {
 if (info!= null) {
if (info  == null) { AllowDuplicate
 if (info == null) return; else
 if (info == null) { return } if(info == null) {
 if (ignoreDupe) if (info == null) {
if (info == null) { allowDupe = true ; else {
if (info == null && parent.getType()!= Token.CATCH) {
 if (info == null) { } else
 if (info == null) return;
 if (info.getComments( )!== null) {
if (info == null || info == null || info. parent == null) {
 boolean report = false; if(info == null) {
 boolean report = true; if(info == null) {
 if (allowDupe) {
if (info == null || origVar!= null) {
if (info == null || info == null || info. name == "?") {
 if (info == null) return; else if(info == null) {
if (info == null ||!info.isDeclared(name, false) {
 if (parent.info!== null) {
 if (parent.getJsDoc()!== null) {
if (info == null && parent.isDefined) {
 if (info == null ||!origParent.info == null) {
if  (! info == null ) {
if (info == null &&!info.hasSuppressions(...)) {
 if (parent.getJsDocInfo!== null) {
 else { JSDocInfo
 if (!info!= null){
if (info ==  null) { allowDupe = true; else
 if (info == null) { return }; if(info == null) {
 if (info) {
 if (info && origParent==null) {
if  (info == null) { this.
 if (!info.isEmpty(?)) {
 } else if (info==null) {
 if (info!= null) { } else
if (info == null || info == null || info. name!= origVar) {
if  (info == null) { default:
 if (info == null) {
 if (parent!= null && info.info == null) {
 if ((info == null)){
 } else { if (parent) {
 if (parent.getParent()!== null) {
if (info == null && parent!= null && info. parent!= null) {
if (info == null || info == null ||! info) {
 if (null info){
if (info == null)  { if (parent instanceof Scope) {
if (info == null && parent.isDefined(name) {
 if (!allowDupe && (info == null) {
 } if (parent!== null) {
 if (info == null || parent!= null.info == null) {
 if (info.parent!== null) {
 if (parent.getType()!== null) {
 if (info == null)
if  (!info == null)
 if (info && parent!=null) {
 if (info == null{
if (info == null)  { return; } else { allowDupe =
if (info == null &&!info.hasSuppressions(?)) {
 if (info && origParent!== null) {
 if (!info && origParent==null) {
if (info == null ||!debug) {
 if (!info && origParent!=null) {
if (info == null ||!info.isDeclared(name, true) {
if (info == null && parent!= null && info. parent == parent) {
 if (info!= null) return; else
if (info == null && isGlobal) {
if (info == null && parent instanceof Node) {
 if (info) { if(info == null) {
 if (info == null) if(info == null) {
 } else { if (parent!= null) { var
 if (info == null) return else{
 if (!allowDupe || (info == null) {
if (info.parent!= null) {
 } else { if (isGlobal()) {
 boolean reporter = false; if(info == null) {
if (info == null &&! info. hasSuppressions (parent))) {
 if (allowDupe&&info == null) {
if (info == null || info == null || info. name!= "?") {
if (info == null || info.isEmpty (?)) {
 } else if (origParent!== null) {
if (info == null) { allowDupe = false
 if (parent!= null) if (info == null) {
if (info == null && parent!= null && origParent!= n) {
 if (info!= null) return; else if(info == null) {
 if (info == -null){
 if (debug) {
if  (info == null) { try {
if (info == null &&! info. hasSuppressions (name)) {
if (info == null && parent.isDeclared) {
 } else { JSSDocInfo
if (info == null || info == null && parent) {
 if (!info.isDefined) {
 if (!allowDupe if (info == null) {
 if ((info == null))){
if (info  == null) { allowDupe = false ;
if (info == null ||!ignore) {
 if (parentInfo!== null) {
if  (! {
if (info instanceof Error) {
if (info  == null || info == null) { info =
 } else { if (isGlobal) {
if (info  == null) { JSDocInfoImpl
 if (info == "?")){
if (info == null && origParent instanceof Node) {
 if (parent!= null{
 } if (info ==null) {
if (info == null && parent!= null && origParent!= parent) {
 boolean reporter = true; if(info == null) {
if (info == null && parent.isDefined(...)) {
if (info == null && parent.isDefined()) {
if  (!)
 if (info == null) { }
if (info == null && parent.getType() == Token) {
 if (!ignore) {
 if (!info.isDirective) {
if (info  == null || allowDupe)
if (info == null || info == "unknown") {
if (info ==  null) { allowDupe = true; }
 if (!info && info==null) {
if (info  == null) { JSDocInfo[]
if (info == null && parent instanceof JSDoc) {
if (info == null && parent instanceof Scope) {
if (info == null && origVar == null) {
if (info == null)  { break ; } } else {
 if (!info instanceof Scope) {
if  (info == null) { AllowDepInfo
 allowDupe ; if(info == null) {
if (info == null && parent.isGlobal(...)) {
if (info == null && parent.isModule ( )) {
 if (!info instanceof Node) {
 if (info == null || strict) {
if (info == null || info == null ||! debug) {
 else {
if (info == null)  { return; } else {
 if (parent.getDocInfo()== null) {
 if () {
if (info == null && parent instanceof ClassNode) {
 } } else{
 while (info!== null) {
 } else if (info=null) {
 while (info == null) {
 if (null || origVar.info == null) {
if (info == null && parent.isDeclaration) {
 } else { JSDocInfoImpl
if (info == null || parent) {
 if (!info) if(info == null) {
 allowDupe = if(info == null) {
 if (== info) {
if (info == null && parent.isGlobal( )) {
if (info == null || info.depth > 1) {
 if (info == null) { else
if (info == null || info == scope) {
if (info == null || info.depth > 2) {
if (info == null) return; else
 if (origVar.info == null) {
 if (!parent) if(info == null) {
 if (!== null) {
if (info == "?") {
 if (info!= null) { else
 } else { final Info
 if (info=null) {
 else { JSDoc
 } else { if (null) {
 } else { JSDocInfo *
if (info instanceof Scope) {
 allowDupe = true
 } else { JSDocInfo[]
if (Info == null) {
 if (debug){
if  (info == null) { try { }
if (null)
if  (info == null) { var
if  null {
if (info == null)  { AllowDuplication
if (info  == null || allowDupe){
 if (!info)
if (info == null && origParent) {
 if ($==null) {
 if (debug)
 if (!origVar.info == null) {
 } } else if (info == null) {
 } else { final Node
 if (static) {
if  empty {
if (info )) {
 if (!debug)
if  (null
if (info  === null) {
 } else { String
 } else { var
 if (*) {
if (info  == null).
 if (+) {
if (info)
if (none)
if (debug)
if (info  == nil) {
if (info == null &&! implicit) {
 else if (info == null) {
if (info != null)
if (info == null &&! strict) {
if (info == null &&! ignore) {
if (info == null ||!child) {
if (info == null) return;
if (info == null)  { AllowMultipleInfo
 } else
if (info != null) { var
if (info == null && child!= null) {
 } } if (info == null) {
if (info == null && parent == null) {
 if (!.){
 } else
 } else {
if (info == null && node!= null) {
 } } } else
 if (null{
if (info == null && child == null) {
 { } if (info == null) {
 } } else
 if ((== null) {
 } } } if(info == null) {
if (info  null)
if (info  ==)
 else { var
 } else,
 { if(info == null) {
 } { var
 } } }
 } else, if(info == null) {
 } if (!info == null) {
if (info ==  null);
 }; else{
if (info ==  null)) { var
 } Node
 } var
 while (null) {
if (info == null) return();
 } }
 if ($info == null) {
if (info == null) return,
 { var
 if.(null) {
 } else:
if (info == null!) {
if (info == null)) {
 } elseIf(info == null) {
 else
 }
 } while(info == null) {
if (info is null) {
