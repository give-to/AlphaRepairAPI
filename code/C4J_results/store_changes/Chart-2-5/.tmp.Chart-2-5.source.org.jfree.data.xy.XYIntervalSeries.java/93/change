super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow,  y));
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  yHigh));
super.add(new XYIntervalDataItem(x, xLow, xHigh,  y));
super.add(new XYIntervalDataItem(x,  y));
super.add();
super.add(new XYIntervalDataItem(x, y), true);
super ( ) ;
super.add(x, y);
 add(x, xLow, xHigh, y, yLow, yHigh), true);
 add(x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yLow, yHigh), true);
 add(true);
 super(add(y, yLow, yHigh), true);
super.add(new  XYIntervalSeries(x, xLow, xHigh, y, yLow, yHigh), true);
 add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, y, yLow, yHigh), true);
 super(x, y, true);
 add(x, y, yLow, yHigh), true);
 super(add(x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, y, xHigh, y, yLow, yHigh), true);
 super(x, y);
super.add(x);
super.add(x, y); }
 return
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; }
 super(x, y,yHigh), true);
 super(add(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, yLow, y, yLow, yHigh), true);
 super(add(xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); }
 super(x, add(y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh), true);
super ( x, y, y ) ; }
 super(add(x), true);
 super(x, y,yLow, yHigh), true);
super ( x, y ) ; }
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yLow, yHigh ) ) ;
 super(add(x, y, yHigh), true);
super.add(x, y, y); }
super.add(new XYIntervalDataItem(x, y)); }
 super(x, yLow,yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, yHigh)); }
 super(add(x, yLow, yHigh), true);
super ( x ) ;
super ( x, y, y ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, yHigh)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, y, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, yLow, yHigh ) ) ;
 super().add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh)); }
super.add(new  Double(x, y));
 super(x, add(xHigh, y, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, true ) ) ;
super.add(new XYIntervalDataItem()); }
 super(x, yHigh);
super.add(x); }
super.add(x, x, y, y);
super.add(x, x, y, yHigh);
super.add(x, x, y, y); }
super.add(x, x, y, yHigh); }
super.add(new XYIntervalDataItem(x, y, x, xLow, xHigh, y, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh ) ) ;
super.add(new  Double(x, y)); }
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, true ) ) ;
super.add(new XYIntervalDataItem(x, x, y, yLow, y), true);
 super(add(x, x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow)); }
super.add(new XYIntervalDataItem(x, xLow, y, x, xHigh, y, yLow, yHigh), true);
 super(add(yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, false ) ) ;
super.add(new XYIntervalDataItem(x, x, y, yLow, yHigh), true);
 super(add(xLow, xHigh, y, yLow, yHigh), true);
 super(x, y, yHigh);
super.add(new  DataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yHigh ) ) ;
 add(x, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y ) ) ; } public boolean add() {
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, false ) ) ;
 super(x, y, low(yHigh), true);
super.add(new XYIntervalDataItem(x, y, x, y), true);
 super(add(x, xLow, yLow, yHigh), true);
super.add(new  XYIntervalSeriesDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yLow, yHigh ) )
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, yLow, true ) ) ;
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y ) ) ;
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, true ) )
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, yLow, yHigh, true ) ) ;
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y ) ) ; } else {
super.add(new XYIntervalDataItem(x, y, yHigh), true);
 super(yLow,yHigh), true);
super.add(new XYIntervalDataItem(x y), true);
super.add(new XYIntervalDataItem(x, x, yLow, y, yHigh), true);
 super(add(x, y), true);
 super(x, x, y, yLow, yHigh), true);
 return true;
super.add(new XYIntervalDataItem(x, x, y, yHigh)); }
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, yLow, yHigh, false ) ) ;
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, yHigh, true ) ) ;
 super. add ( new XYIntervalDataItem ( x, xLow, y ) ) ;
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yHigh, true ) ) ;
 super(add(x, yHigh), true);
super.add(new  Double(x, y, yHigh)); }
 super. add ( new XYIntervalDataItem ( x, xLow, yHigh ) ) ;
super.add(new  XYDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yLow, yHigh)); }
 super(x, xLow, yLow,yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, yLow, yHigh ) ) ;
 super(x, yHigh, true);
super.add(x, y, y);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; return this ;
super.add(new XYIntervalDataItem(x, x, y, xHigh, y, yLow, yHigh), true);
 super(add(x, xLow, y, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yLow, true ) )
super.add(new XYIntervalDataItem(x, yLow, y), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, false ) )
super.add(new XYIntervalDataItem(x, xLow, y, yHigh));
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yHigh, true ) )
 super(x, xLow, y,yHigh), true);
super.add(x, x, y); }
 add(y, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y ), true ) ;
 setAdded(true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  yHigh)); }
 super(add(x, y, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh)); }
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y ), false ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. clear ( ) ;
super.add(new XYIntervalDataItem(x, y, xLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, yLow, yHigh ) ) ;
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, true ) )
 return addXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, y, low, yHigh), true);
 super. add ( x, xLow, xHigh, y, yLow, yHigh ) ;
super.add(new XYIntervalDataItem(x, xLow, y)); }
 super(x, y, yHigh,true);
super.add(new XYIntervalDataItem(x, x, y, x, y, yLow, yHigh), true);
 super(x, x, add(y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x,  x, y, yLow, yHigh));
super.add(new XYIntervalDataItem(x, y, x, y, x, y, x, y), true);
super.add(new XYIntervalDataItem(x, xLow, yLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; return this ; }
super.add(x, x, y, yLow); }
 add((xHigh, y, yLow, yHigh), true);
 super(x, add(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, y, yHigh)); }
super.add(new XYIntervalDataItem(x, x, y, y)); }
 super(x, y, false, true);
super.add(new XYIntervalDataItem(x, y, x, y, x, y, x, y, y), true);
 super. add ( new XYIntervalDataItem ( x, yLow, yHigh, true ) ) ;
super ( x, yLow, y ) ; }
super ( x, xLow, y ) ; }
 super(x, y, add(yLow, yHigh), true);
super.add(new  Double(x)); }
super.add(new XYIntervalDataItem(x)); }
super ( x, y, y, y ) ;
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yLow, yHigh ) ;
super.add(new XYIntervalDataItem(x, x, y, x, y, y, x, y, y), true);
 add(x), true);
super.add(new XYIntervalDataItem(x, x, y, x, y, yLow, y), true);
 super(x, x, y, (yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y)); }
 super(x, x, y, add(yLow, yHigh), true);
 super(x, xLow, y);
 super(x, xLow, y, true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, false ) )
super.add(new XYIntervalDataItem(x, x, y, x, y, yLow, yHigh)), true);
super.add(new XYIntervalDataItem(x, x, y, x, y, x, y, y), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, false), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y ) ) ; }
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yHigh, true ) ;
super.add(new XYIntervalDataItem(x, y, x, y, x, y, yLow, y), true);
super.add(new  Double(x, y), y); }
super.add(new XYIntervalDataItem(x, y, yHigh, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(x, x, yLow, yHigh);
super.add(new XYIntervalDataItem(x, y, x, y, x, y, x, y, x, y), true);
 super(x, (y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, y, x, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y ) ) ; } else
super.add(new XYIntervalDataItem(x, x, x, y, yLow, y), true);
 super(x, y, (yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, y, x, y, x, y, x, y), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yLow, true ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, x, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, x, y, x, y, x, y, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, y), true);
super.add(new XYIntervalDataItem(x, xLow, y, yLow, yHigh)); }
super.add(x, y, yHigh);
 super(x, y, x, y,true);
 super(x, y, y, yHigh);
 super(add(x, x, xHigh, y, yLow, yHigh), true);
super.add(x, y, z);
super.add(new XYIntervalDataItem(x, x, y, x, y, x, y, yLow, y), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yHigh));
super.add(new XYIntervalDataItem(x, xLow, y, yLow, yHigh));
super.add(x, y, this);
super.add(new XYIntervalDataItem(x, x, x, y, yLow, yHigh), true);
super ( x, y, x, y ) ;
super.add(new XYIntervalDataItem(x, x, y, x, y, x, y, x, y, y), true);
super.add(new XYIntervalDataItem(x, x, y, xLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, y, yLow, yHigh, false), true);
super.add(x, y, yHigh); }
 super(x, y, yLow);
super.add(new XYIntervalDataItem(x, x, y, x, y, y, x, y, x, y), true);
super.add(new XYIntervalDataItem(x, y, xLow, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, x, y, x, y, yLow, y), true);
 super. add ( new XYIntervalDataItem ( x, y, true ) ) ;
 super(x, x, y, xLow, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, y, x, y, x, y, x, y), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, yLow, yHigh ) ) }
 super(xLow,yHigh), true);
super.add(x, y, y, yHigh);
 super(x, y, y, );
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh); }
super.add(new XYIntervalDataItem(x, y, x, y, x, y, yHigh), true);
super.add(new XYIntervalDataItem(x, x, yLow, y, y), true);
super.add(new XYIntervalDataItem(x, x, x, y, x, y, y, x, y, y), true);
 this.addDataItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, y, true, true);
super.add(new XYIntervalDataItem(x, y, z)); }
super.add(new XYIntervalDataItem(x, x, y, yHigh), true);
 super(x, y, );
super.add(new XYIntervalDataItem(x, y, x, yLow, yHigh, y), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, true ) ;
super.add(new XYIntervalDataItem(x, x, y, x, y, x, y, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, yHigh ) )
super.add(new XYIntervalDataItem(x, y, xLow, yHigh, yLow), true);
super.add(new XYIntervalDataItem(x, y, y)); }
super.add(new XYIntervalDataItem(x, x, y, yLow, yHigh)), true);
super.add(x, y, yLow, yHigh);
super.add(x, y, y, x);
 super(x, (yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, yLow, y), true);
 super(add(y, yHigh), true);
 if ( x == null ) return null ; if ( y == null ) return null ;
super ( x, y )
 super(x, y, this);
super.add(new  Double(x, y, y)); }
 super. add ( new XYIntervalDataItem ( x, x, true ) ) ;
 add(x, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh,  y, yLow, yHigh)); } }
 super(x, new Point(yLow, yHigh), true);
 super(add(x, y, x, yLow, yHigh), true);
 this.addItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(add=true);
super.add(new XYIntervalDataItem(x, xLow, y, y), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y, true ) ;
 super. add ( new XYIntervalDataItem ( x, xHigh, y ) ) ;
 super. add ( new XYIntervalDataItem ( x, y ) ) ;
 super. add ( new XYIntervalDataItem ( x, yLow, y ) ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yLow), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh,  y, yLow, yHigh))); }
 super(add(x, x, y, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, x, y, x, y, x, yHigh), true);
super.add(new XYIntervalDataItem(x, x, y, 0, 0), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  y));
super.add(new XYIntervalDataItem(x, x, x, y, x, y, yLow, yHigh)), true);
super.add(new XYIntervalDataItem(x, x, y, x, y, y, x, y, y, y), true);
super.add(new  Double(x, x, y)); }
super ( x ) ; }
super.add(new XYIntervalDataItem(x, x, y, yLow, yHigh, yHigh), true);
 super(add(x, y, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, y, y)) ;
 add(x, true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh)); return this ;
super.add(x, y, x, y); }
 super(x, x, y, false, true);
super.add(new XYIntervalDataItem(x, x, y, yLow, yHigh, yLow), true);
super.add(new XYIntervalDataItem(x, x, y, yLow, 0), true);
super.add(new XYIntervalDataItem(x, x, y, x, y, y, yLow, yHigh)), true);
 super. add ( new XYIntervalDataItem ( x, x, y ) ) ;
 super(x, xLow, yHigh);
super.add(new XYIntervalDataItem(x, x, y, yLow, yHigh, true), true);
super ( )
super.add(new XYIntervalDataItem(x, xLow, yHigh, y)); }
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, y ), true ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh, yLow, yHigh));
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, 0, 0), true);
 super(x, x, add(xHigh, y, yLow, yHigh), true);
super.add(new  Double(x, y, z)); }
 super.add((x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, xHigh,y, yLow, yHigh), true);
 super(x, yLow, y, true);
super.add(new XYIntervalDataItem(x, x, y, y, x, y, y, y), true);
 super(add(x, y, 0, yHigh), true);
super.add(new XYIntervalDataItem(x, y, x, y, x, y, yLow, yHigh)), true);
super.add(x, y, yLow); }
super.add(new XYIntervalDataItem(x, y, x, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh, yLow, yHigh)); }
super.add(new XYIntervalDataItem(x, y, x, yLow, yHigh, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow, yHigh, yHigh)); }
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, false ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; return true ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow, yHigh, yHigh));
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  y));
 add(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, yHigh, y), y); }
 super(x, x, (y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, y)); }
super.add(new XYIntervalDataItem(x, y, x, y)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, yLow, yHigh));
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh)); return true ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, 0, yHigh), true);
 super(x, xLow, y, false, true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)), true);
 add(x, x, y, yLow, yHigh), true);
 if ( x == null ) return null ; if ( y == null ) { return
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); super. add ( this ) ;
 this.add(x, x, y,yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  yLow, yHigh, yHigh));
 super(x, x, y, y, yLow, yHigh), true);
 super(x, yLow, true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow)); }
 this.dataItems.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, x, y, y, yLow, yHigh), true);
super ( x, y, y, z ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), y); }
super.add(new XYIntervalDataItem(x, x, yLow, yHigh)); }
 super(x, y, null);
 series.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, yHigh, y ) ;
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, yHigh, yLow ) ;
 super(x, yLow, yHigh);
super.add(new XYIntervalDataItem(x, xHigh, y, xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, xLow, y, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, y, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, y, xLow, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, yLow, yHigh ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  yHigh, yHigh, yLow)); }
super.add(new XYIntervalDataItem(x, y, x, yHigh)); }
super.add(new XYIntervalDataItem(x, xLow, yLow, yHigh)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, y, x, yHigh), true);
 super(x, yLow);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  yHigh, yLow, yHigh)); }
 super(x, new Point(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, x, y, yLow, yHigh, false), true);
 super(x, y, yLow,true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, yLow, yHigh ) ;
 super(add(x, xLow, y), true);
 super(x, y, x, yLow, yHigh), true);
super.add(x, y, y, y); }
 super(x, xLow, y, y);
super.add(new XYIntervalDataItem(x, x, y, x, y, x, y, y, y), true);
super.add(new XYIntervalDataItem(x, xLow, yHigh, y, yHigh)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, 0, 0), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh)); } }
super.add(new XYIntervalDataItem(x, x, xLow, y, y), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. add ( this ) ; }
 super(add(x, x, y, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, x, y, y)); }
 super(x, x, y, max(yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, yLow), true);
super.add(new XYIntervalDataItem(x,  x, y, y, yHigh)); }
super.add(new XYIntervalDataItem(x, y, x, y, y)) ;
 super(x, new Point(xHigh, y, yLow, yHigh), true);
 super(x, xLow, y, true, true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, yHigh ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); super. add ( x, y ) ;
super.add(new XYIntervalDataItem(x, x, y, y, y), true);
super.add(new XYIntervalDataItem(x, x, y, yHigh)) ;
 super.add(x, x, y, yLow, yHigh), true);
 super(x, y, x, low(yHigh), true);
super.add(new XYIntervalDataItem(x, y, y, x)); }
super.add(new XYIntervalDataItem(x, y, true), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, x, y ) ;
 super. add ( x, xLow, xHigh, y ) ; } else {
 super(x, xLow, y,yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, xLow, yHigh, false), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, yHigh, yLow ) ; }
super.add(x, x, y);
 this.add(x, xLow,xHigh, y, yLow, yHigh), true);
super.add(new  Double(x, y), y);
super.add(new XYIntervalDataItem(x,  y, x, y, yHigh)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } return this ; }
super.add(new XYIntervalDataItem(x, y, false), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, x, yLow, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  yHigh, yHigh, yHigh)); }
super.add(new XYIntervalDataItem(x, x, y, yLow, null), true);
 super(add(x, y, xLow, yLow, yHigh), true);
super.add(x, y, x);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y y, yLow, yHigh), true);
 super(x, xLow,xHigh, y, yLow, yHigh), true);
 super(x, y, low, yHigh), true);
 super(x, x, yLow, y, true);
 super.add(x, y, xLow, xHigh, y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; return this. getY ( ) ;
 super(x, x, y, 0, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, xHigh, true ) ) }
super.add(new XYIntervalDataItem(x, y, x, y)) ;
 this. add ( x, x, y, yLow, yHigh, y ) ; this. add ( x, x, y ) ;
super.add(new  Double(x)) ;
super.add(new XYIntervalDataItem(x, y, yHigh)) ;
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( y, x, yHigh, y ) ;
 super(x, y, x, y,yLow, yHigh), true);
 super(x, xHigh, add(y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, x, yLow, y, x), true);
 this.add(index,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. remove ( ) ; }
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( y, x, yHigh, yLow ) ;
 this. add ( x, x, y ) ; } else { this. add ( x, x, y ) ; } return this ; } ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, x, y), true);
super.add(new XYIntervalDataItem(x, x, y, y), true);
super.add(new XYIntervalDataItem(x, x, y, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, x, yLow, y, 0), true);
 super(x, xLow, y), true);
 this. add ( x, x, y, yLow, yHigh ) ; return this. getX ( ) ;
 super.add(x, y, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, x, xLow, y, yLow, yHigh), true);
 super(x, y, xLow, (yHigh), true);
 if (super!= null) return
super ( x, x, y ) ; }
 super(x, x, y, );
 super(add(x, y, 0, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( y, x, y, y ) ;
super.add(new XYIntervalDataItem(x, xLow, yHigh, y)) ;
 super(x, y, add(y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, x, yHigh, y ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, yHigh, y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, x, yHigh ) ;
 this. add ( x, x, y, yLow, yHigh ) ; return this. add ( x, y, yLow, yHigh ) ;
 super(add(x, y, false), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( y, x, y, yHigh ) ; }
super.add(new  Double(x, y);); }
super.add(); }
 this.add(x, y, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 add(yLow, yHigh), true);
 super(x, xLow, y, (yHigh), true);
 super(add(x, y, true), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. remove ( ) ;
 if (super!= null) { return
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh), yLow, yHigh); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), y, yHigh); }
 this. add ( x, x, y, y, yLow, yHigh ) ; } return this ; }
super.add(new  Double(x, y), yHigh); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, x, y, yLow, yLow, yHigh), true);
 super(add(x, y, x, xLow, xHigh, y, yLow, yHigh), true);
super ( add ( x, y ) ;
super.add(new XYIntervalDataItem(x, y, y)) ;
 this.add(newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, xLow, y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, y, y ) ;
super ( add ( x, y ) ) ;
 super. add ( new XYIntervalDataItem ( x, y, true ) )
super.add(new XYIntervalDataItem(x, xLow, y, yHigh), true);
super.add(new XYIntervalDataItem(x, y)), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( y, x, y, yHigh, y ) ;
super.add(new XYIntervalDataItem(x, y), y); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh), yLow, yHigh);
super.add(new XYIntervalDataItem(x, y), y));
 this.add(x, y,yLow, yHigh), true);
 super(x, xLow, y, y), true);
 this. add ( x, x, y, yLow, yHigh ) ; return this. getY ( ) ; }
 super(add(x, xLow, xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, x, xLow, xHigh, y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; this. add ( x, y, x, yHigh ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. add ( y, x ) ;
super.add(new  Double(x, y, y)) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh)); super. clear ( ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh,  y, yLow, yHigh)); return ;
 super(add(x, 0, xHigh, y, yLow, yHigh), true);
 this. add ( x, x, y ) ; } else { this. add ( x, x, y ) ; } } return this ; }
 this.add(x, x, xLow, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  x, yLow, yHigh); }
super.add(new  Double(x, x, y);); }
super.add(new XYIntervalDataItem(x, y, xLow, yHigh, true), true);
 super.add(x, xLow, yHigh); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; return true ;
 if (x == null) return null; if (y == null) return;
super.add(new XYIntervalDataItem(x,  y, xLow, yHigh)) ; }
 this. add ( x, x, y, yLow, yHigh, y ) ; this. add ( x, x ) ; }
 super(addSeries(x, y, yLow, yHigh), true);
 this.add(x, y, true);
 super(x, y, 0,yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)));
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); return this ;
 super.add(x, x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, y, xLow,yHigh), true);
 super(y,yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh, yLow));
 super. add ( new XYIntervalDataItem(x, xLow, xHigh)); } else
 super.add(x, x, xLow, y, yLow, yHigh), true);
 super(x, x, y, y);
 this. add ( x, x, y, yLow, yHigh, y ) ; this. add ( x, y ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), y), y); }
 super.add(x, xLow, xHigh, true); }
 super(x, xLow, y, 0, yHigh), true);
 super(x, y, 0);
 this.add(x,xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true)); super. add ( x, y ) ;
 super().add(x, new Point(xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, xLow,xHigh, y, yLow, yHigh), true);
 super(x, x, y, yLow, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh))); }
 super.add(x, xLow, y, xHigh, y, yLow, yHigh), true);
 super(add(x, x, x, y, yLow, yHigh), true);
 this.add(x, new Point(xLow, xHigh, y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; return this. getX ( ) ; }
 this. add ( x, x, y, yLow, yHigh, yHigh ) ; } return this ; }
super.add(new XYIntervalDataItem(x, xLow, yHigh, y, y)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, x, y, xHigh, y, yLow, yHigh), true);
 this.series.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; return this ; } return this ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow, yHigh, yHigh); }
 super(x, x, y, add(y, yLow, yHigh), true);
 super.add(x, xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, y, false);
 this.add(x, xLow, y, true);
 this. add ( x, x, y, y, yLow, yHigh ) ; return this ; } }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  yHigh, yHigh), yHigh); }
 super(x, x, y); super(y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh, yHigh ) ; } return this ; } ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, true), true);
 add(x, y, xLow, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. add ( y ) ; }
super.add(new XYIntervalDataItem(x, xLow,  y, yLow, yHigh))); }
super.add(new XYIntervalDataItem(x, xLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), yLow, yHigh); }
 this.add(x, x, y,y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh, yLow); }
 super(x, x, y, true, true);
 super(y(yHigh), true);
 this. add ( x, x, y, yLow, yHigh, y ) ; return this. getY ( ) ;
 super(x, y, y);;
super.add(new XYIntervalDataItem(x, y);); }
 super(addSeries(x, xHigh, y, yLow, yHigh), true);
super ( x, x, y ) ;
 super(x, x, y, y), true);
 if (super!= null) {
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. clear ( ) ;
 this.add(x, y, false, true);
 super(x, y, y, yLow);
 super().add(x, y, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 add(x, xLow, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. add ( dataItem ) ;
 super(x, y, (low,yHigh), true);
 super(add(x, y, yLow), true);
 this.add(x, x, xHigh, y, yLow, yHigh), true);
 this.add(x, x, (yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. add ( x ) ; }
 super(x, x, new Point(yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, yLow, 0), true);
 super(add(x y), true);
 super(x, y, false), true);
 this.add(x, y,y, yLow, yHigh), true);
 super. add ( new XYIntervalDataItem ( x, xLow, y)); }
 super(x, new Double(xLow, xHigh, y, yLow, yHigh), true);
 super(add(yHigh), true);
 this.add(x, y, x, yLow, yHigh), true);
 super.add(x, yHigh,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh), yLow);
 this. add ( x, x, y, yLow, yHigh, yHigh ) ; return this ; } }
 this. add ( x, x, y, yLow, yHigh, yHigh ) ; return this ; } } ;
super.add(new XYIntervalDataItem(x, y, yLow)); }
super.add(new XYIntervalDataItem(x, xLow, x, y, yLow, yHigh), true);
 super.add(x, xLow, xHigh, false); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } super. add ( ) ;
super.add(new XYIntervalDataItem(x, xLow, y), yHigh); }
super.add(new XYIntervalDataItem(x, xLow, yHigh, y, y)) ;
 this.add(x, xLow,y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), yHigh); }
super.add(new XYIntervalDataItem(x, yHigh, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); } return super. add ( ) ;
 this. add ( x, x, y, yLow, yHigh, y ) ; return this. getY ( ) ; }
 super(x, new Double(xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, this), true);
super.add(new XYIntervalDataItem(x, xLow, yHigh));
super.add(new XYIntervalDataItem(x, y, yLow), true);
super.add(new XYIntervalDataItem(x, y, z)) ;
 this.add(x, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 addItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh, y ) ; return this. getX ( ) ;
super.add(new XYIntervalDataItem(x, xLow, yHigh, y), y));
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh, yLow, yHigh); }
 if ( x == null ) return null ; if ( y == null ) return
 super.add(x, xLow, xHigh); }
super.add(new  Double(x, y), this);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh, yLow)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow, yHigh), yHigh);
 super.add(x, new Point(xLow, xHigh, y, yLow, yHigh), true);
 super(addSeries(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, 0, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, y)); }
 this. add ( x, x, y, yLow, yHigh ) ; return this. getX ( ) ; } return this ;
 super(x, y, y, y);;
 super.add(x, xLow, yHigh);
 this. add ( x, x, y, yLow, yHigh, y ) ; this. add ( x, x, y )
super.add(new  Double(x, y), new Double(x, xLow, xHigh, y, yLow, yHigh), true);
 add((xLow, xHigh, y, yLow, yHigh), true);
 super(x, y, 0(yHigh), true);
 this. add ( x, x, y, y, yLow, yHigh, yHigh ) ; return this ; } } ;
super.add(new XYIntervalDataItem(x, y, null), true);
 this.add(x, xLow, y), true);
 super(add(xLow, yHigh), true);
 super(x, xLow, y, this);
super.add(new XYIntervalDataItem(x, xHigh, y, x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); return super. add ( ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yHigh, yLow)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yHigh)); } }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } super. add ( this ) ;
 super(x, xLow, y,xHigh, y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; return this ; } return series ;
 this. add ( x, x, y, yLow, yHigh ) ; return this. getX ( x, y ) ;
 this. add ( x, x, y, y, yLow, yHigh, yHigh ) ; } return this ; } ;
super.add(new XYIntervalDataItem(x, yHigh, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow,  y, yLow, yHigh)); } }
 super(x, new Double(yLow, yHigh), true);
 super.add(x, x, y,y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } super. add ( dataItem ) ;
 super(x, x, y, yLow, true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); return true ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, x, yHigh, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); return this ; }
 super(x, xLow, yHigh, true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, y, y, yLow, yHigh), true);
 super(add(x, y, xLow, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  XYIntervalDataItemImpl(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); super. add ( ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yHigh, yLow));
 super(add(x, x, 0, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y)); return this;
 super(x, y, y, true);
super.add(new XYIntervalDataItem(x, y), this));
super.add(new  Double(x, y););
 this.data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow, yHigh); }
 this. add ( x, x, y, yLow, yHigh ) ; } return this ; } return series ;
 this.add(x, x, (y, yLow, yHigh), true);
 super.add(x, x, y, xHigh, y, yLow, yHigh), true);
 super(x, y, null,true);
 super(x, y, true), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh), y); }
 this. add ( x, x, y, yLow, yHigh ) ; return this. getX ( ) ; } }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh), yLow); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), y));
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yHigh))); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  yLow, yHigh)); return true ;
 this. add ( x, x, y, yLow, yHigh ) ; return this. getX ( ) ; } } ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. add ( this ) ; } }
 super(x, y, y, true,true);
 this. add ( x, x, y, yLow, yHigh, yHigh ) ; return this ; } return this ;
 super. add ( x, xLow, xHigh, true ) ;
 super.add(x, xLow, xHigh, y); }
super.add(new  Double(x, y)); } }
 super(x, x, y, y);;
super.add(new XYIntervalDataItem(x));
 super(x, xLow, add(y, yLow, yHigh), true);
 this. add ( x, x, y, yLow, yHigh ) ; } return this ; } } ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh)); return ;
 this.add(x, xLow, yLow, yHigh), true);
(x, y, yLow, yHigh), true);
 super.add(x, xLow, yHigh); return
 superAdd(x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, y););
 super(x,yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh)); super. add ( ) ;
 super(x, y, lower(yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } super. add ( this ) ; }
 this. add ( x, x, y, yLow, yHigh, yHigh ) ; return this ; } return series ;
 super(addSeries(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true)); super. add ( this ) ;
 super(x, x, yHigh);
 super.add(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, 0), true);
 super(x, x, y, y,true);
 this.add(x, x, y(y, yLow, yHigh), true);
 super.add(true);
 this.add(new XYIntervalSeries(x, xLow, xHigh, y, yLow, yHigh), true);
 setY(yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yHigh, yHigh));
 if ( x == null ) return null ; if ( y == null ) return null ; return
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, xLow, y, 0, yHigh), true);
 super().add(x, yHigh,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, y, xLow, xHigh, y, yLow, yHigh), true);
 super(x, x, y, false), true);
 super.add(x, xLow, xHigh); } else
 super.add(x, y, (x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, xLow, xHigh, false);
super.add(new XYIntervalDataItem(x, y))); }
 this. add ( x, x, y, y, yLow, yHigh, yHigh ) ; return this ; } return this ;
super.add(new  DataItem(x, y));
 super(x, y, y, yHigh;
 super(x, y, y, 0);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y)); return true;
 this.add(x, y, xLow, xHigh, y, yLow, yHigh), true);
super ( add ( ) ) ;
 super(addXY(xHigh, y, yLow, yHigh), true);
 this.add(x, y, low(yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow, yHigh));
 super(x, y, y, x,true);
 this.add(x, yHigh,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), y, yHigh)); }
super.add(new  XYIntervalDataItemSeries(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, y, y, yHigh), true);
 add(x, xLow, y), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. add ( this ) ;
 super(x, x, y, mix(yLow, yHigh), true);
 this.add(x, y, );
 this.add(new DataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this. add ( x, x, y, y, yLow, yHigh ) ; } return this ; } } ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true)); super. clear ( ) ;
super.add(new XYIntervalDataItem(x, xLow, y), y); }
super.add(x, y); *
 super(x, x, (yLow, yHigh), true);
 super(x, xLow, x, (xHigh, y, yLow, yHigh), true);
 super.add(x, y, true,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return x + y;
 super.add(x, xLow, xHigh) ; return
 this.add(x, yHigh);
 this.add(XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, (low,yHigh), true);
 super.add((xLow, xHigh, y, yLow, yHigh), true);
 this.add(new XYDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, y, low, yHigh), true);
 this.add(x, (y, yLow, yHigh), true);
 super(x, y, yLow), true);
 super(add(x, yLow), true);
super.add(new  Double(x), y);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow, yHigh)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } return this ;
 super. add ( new XYIntervalDataItem ( x, y, true ) ;
super.add(new XYIntervalDataItem(x, yLow, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, xLow, xHigh); } return
super.add(new XYIntervalDataItem(x, xLow, xHigh, x, x, y, yLow, yHigh), true);
 super.add(x, x, xHigh, y, yLow, yHigh), true);
super ( add ( x ) ; }
 add(x, x, xLow, y, yLow, yHigh), true);
 super().add(x, new Double(xLow, xHigh, y, yLow, yHigh), true);
super.add({ x, y });
 super(addSeries(xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x), true);
super.add(new XYIntervalDataItem(x, x, xHigh, x, xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, x, 0, xHigh, y, yLow, yHigh), true);
 super.add(x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, x, y), true);
 superAdd(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, xLow, y); }
super.add(new XYIntervalDataItem(x, xLow, x, x, xHigh, y, yLow, yHigh), true);
 super(add(x, 0, y, yLow, yHigh), true);
 super().add(x, x, y, xHigh, y, yLow, yHigh), true);
 this.add(x,true);
 this.add(x, yLow, yHigh), true);
 this.add(x, y), true);
 super(x, x, yLow,true);
super.add(new XYIntervalDataItem(x, x, xLow, y, xHigh, y, yLow, yHigh), true);
 super(add(x, y, 0), true);
super.add(new XYIntervalDataItem(x, x, y, y)); } }
 super.add(x, xLow, xHigh, true); return
 super.add(x, xHigh, y, yLow, yHigh), true);
super.add(new  XYIntervalSeries.DataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.addSeries((x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); } return this ;
 super().add(x, x, max(xHigh, y, yLow, yHigh), true);
 super.add(x, y, false,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, 0, x, xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, yLow, xLow, xHigh, y, yLow, yHigh), true);
 super(x, y(yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y)); } }
super.add(new XYIntervalDataItem(x, xLow, x, x, y, yLow, yHigh), true);
 super().add((x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, y, true,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, y, yHigh)); } }
super.add(new  DataItem(x, y), new Point(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, xLow, y, (xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, false), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } return super ( ) ;
 super.add(x, y, y,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, y,xHigh, y, yLow, yHigh), true);
 super(x, x, new Point(xHigh, y, yLow, yHigh), true);
 superAdd(x, xHigh, y, yLow, yHigh), true);
 super(add(xx, yHigh), true);
 this.add(x, new Double(xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, x, y, xLow, xHigh, y, yLow, yHigh), true);
 add(x, y, x, yLow, yHigh), true);
 if (x == null) { return null; } return
 super.add(x, y, x, xLow, xHigh, y, yLow, yHigh), true);
 return - 1;
 super.addItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); super. add ( x ) ;
super.add(new  Double(x, y), new DataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 if (x == null) { return false; }
 if (x == null) { return false; } return
 this.add(x, y, false,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, x, y, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super. clear ( ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh)); return this ; }
 this.add(new Double(x, xLow, xHigh, y, yLow, yHigh), true);
 thisSeries. add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  Double(x), y));
 super. add ( x, xLow, xHigh, y ) ; } else
 super.add(x, x, max(xHigh, y, yLow, yHigh), true);
 super().add(x, y); return newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, yHigh, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, y, false), true);
 if (x < y) { return null; } return
 this.add(x, yHigh, true);
 this.getSeries(key).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super().add(x, y);
 super(add(x, y), newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
(x, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, 0), true);
 super(x, xHigh(y, yLow, yHigh), true);
 this.add(new Point(xLow, xHigh, y, yLow, yHigh), true);
 super(addSeries(x, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; super ( ) ; }
 this.add(new Point(x, xHigh, y, yLow, yHigh), true);
 this.add(new Point(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, y, yLow, yLow, yHigh), true);
 super.add(index,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 if (x == null) return false; return
 super.add(x, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, yHigh)); return this ;
 add(x, y, low, yHigh), true);
 super.add(x, x, y); }
 super().add(true);
 super(addXY(xLow, xHigh, y, yLow, yHigh), true);
 super(addData(x, y, yLow, yHigh), true);
 super().add(x, x, add(xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xHigh, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. add ( x, y ) ;
 this.add(new Double(x, xHigh, y, yLow, yHigh), true);
 super(addSeries(y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); } return this ; }
 super(add(x, y, 0, xLow, xHigh, y, yLow, yHigh), true);
 super(x, y, null), true);
super.add(new  XYIntervalSeries<Double>(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, y, 0, true);
 this.add(x); this.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } return super ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, yLow)); } }
 super(addItem(x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, false, false), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  y, yHigh)); }
super.add(new XYIntervalDataItem(x, x, xLow, xLow, xHigh, y, yLow, yHigh), true);
 add(x, xLow, y, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, x, xHigh, y, yLow, yHigh), true);
 add(x, y,yHigh), true);
 this.add(x, y;
 super. add ( new XYIntervalDataItem ( x, y ) ) ; }
 super().add(x, y, create(xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, yHigh, xLow, xHigh, y, yLow, yHigh), true);
 if(super!= null)
 super.add(x, yLow,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super ( y ) ;
 super.add(x, y, create(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, y, x), true);
 super().add(x, y, (x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true)); super. add ( ) ;
 super(add(x, y, y, yLow, yHigh), true);
 add(x, y, yHigh,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, x, yHigh)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, 0, 0), true);
 super.add((xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, y, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, null), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, yHigh)); } }
 super(x, y, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, xLow, y, y, yHigh), true);
 if (x == null) return null; return
 this.series.addDataItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, x, y); return
 super(add(index), true);
 super(y,yLow, yHigh), true);
super ( add ( ) ;
 super(add(double x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  DataItem(x)); }
 super.add(x, y, new SimpleXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y);); }
 super.add(x, y); setSeries(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, x, yHigh,true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh, yLow)); } }
 super(x, y, x, );
 this.setAdded(true);
 this.add(x, y(y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xHigh, yLow, xHigh, y, yLow, yHigh), true);
 super.add(x, y, new DoubleXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, y) return newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, y, xLow, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. add ( this ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. add ( dataItem ) ;
 return x + y + z;
 boolean added = false;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow, yHigh)); } }
super ( ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh) ) ; super. remove ( ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. remove ( ) ;
 superadd(x, y, yLow, yHigh), true);
 if (x < y) { return 0; }
 this.addSeries((x, xLow, xHigh, y, yLow, yHigh), true);
 if ( x == null ) return null ; if ( y == null ) {
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh, yLow);
 super(x, xHigh);
 super(x, y, add(xLow, xHigh, y, yLow, yHigh), true);
 if (super.isEmpty()) return;
 this.dataItems.addAll(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(addItem(xHigh, y, yLow, yHigh), true);
 super(add(x, x, yLow, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, y); setSeries(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, (y,yHigh), true);
 if (super == null) return;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  y, yHigh); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh) ) ; } return super. add ( ) ;
 this.add(x, y, create(xLow, xHigh, y, yLow, yHigh), true);
 super.addSeries(x, y, yLow, yHigh), true);
 if (x == null) return null; else return
super.add(new  DataItem(x, y, new Point(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, xLow, yLow, yHigh), true);
super. add ( this ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } }
 super(addData(y, yLow, yHigh), true);
super.add(new  XYIntervalDataItemData(x, xLow, xHigh, y, yLow, yHigh), true);
 super(add(low, yHigh), true);
 add(x, new Point(xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, y, make(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, 0, 0, 0), true);
 super().addXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); super. add ( this, true ) ;
 this.add(x, y, new SimpleXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y););
 superadd(x, xHigh, y, yLow, yHigh), true);
 super(add(xy, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh) ) ; super. add ( y ) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, 0.0), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y););
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, 0, yLow, yLow, yHigh), true);
 add(yHigh), true);
 add({), true);
super.add(new  Double(y));
 super(add(true);
 this.dataItems.addLast(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(addData(x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, 0, 0, yLow, yHigh), true);
 super.add(x, y, make(xLow, xHigh, y, yLow, yHigh), true);
 this.add(x) this.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, x, y, yHigh), true);
(x, xHigh, y, yLow, yHigh), true);
(x, xLow, xHigh, y, yLow, yHigh), true);
 super(key), true);
super.add(new  XYIntervalDataItemDouble(x, xLow, xHigh, y, yLow, yHigh), true);
 add((yLow, yHigh), true);
 if(super == null) return
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; return this ; } }
 super().add(index,new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(addItem(x, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. add ( x ) ; }
 super(addItem(x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); return super. add ( ) ;
 super(x, y, y), this;
 super(addXY(x, yLow, yHigh), true);
 this.series.addItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, (y), true);
 super().add(new XYDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super().add(x); }
 super(x, y);;
 this.add(x, new SimpleXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(new Double(xLow, xHigh, y, yLow, yHigh), true);
 super(add(x, y, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 addSeries(x, xHigh, y, yLow, yHigh), true);
 this.add(x, y, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true, false); }
 add(xHigh, y, yLow, yHigh), true);
 setY((yHigh), true);
super.add(new XYIntervalDataItem(x, y)));
 super(add(xy, yHigh), true);
 super(addX(x), true);
 super.add(x, new SimpleXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(addData(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, y).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return this.addDataItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, y, x, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, y, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } return super ;
 add((yHigh), true);
super.add(new XYIntervalDataItem(x), y));
super.add(new  XYIntervalSeriesDatumItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, y,!true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  y), y); }
 this.add(New XYDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. add ( ) ;
 this.add(create(x, xLow, xHigh, y, yLow, yHigh), true);
 this.dataItems.addFirst(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 if (x == null) return false;
 if (super.isEmpty()) { return
 if (dataItem!= null) dataItem.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, y); setData(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, (xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. add ( x ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super. add ( item ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yHigh, true), true);
 super(add,true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  yLow))); }
 super(addXY(y, yLow, yHigh), true);
super.add(new  XYIntervalDataItem.DataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow, yHigh); } }
 this.add(x, x,xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, 0, y, yLow, yHigh), true);
 super.add(x, y); setXY(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(new SimpleXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 addSeries(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(int x, xLow, xHigh, y, yLow, yHigh), true);
 superadd(x, xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, y); setSeries(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.dataItems.addDataItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(y(yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yYHigh), true);
 super.add(x, y); addSeries(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.addSeries(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  XYIntervalDataItem2D(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  XYIntervalData(x, xLow, xHigh, y, yLow, yHigh), true);
 this.data.addDataItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super ( key ) ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; return false ; }
 super(addXY(x, yHigh), true);
 super(add(x), newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, y, x, xLow, xHigh, y, yLow, yHigh), true);
 super(addItem(x, yHigh), true);
super.add(new  XYIntervalDataItemBounds(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(new XYIntervalData(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, y, _true);
super.add(new XYIntervalDataItem(x, y, x, xHigh, y, yLow, yHigh), true);
 return this. getSeries ( ).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, new SimpleXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  DataItem(x, y), new Double(x, xLow, xHigh, y, yLow, yHigh), true);
 if (data.isEmpty()) return; data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, y, yLow, yHigh), true);
 super(key, true);
 this.add(new BasicXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return false;
 super(add(double x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; return true ; } }
 super().addItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, add(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), y);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, x, yHigh), true);
 super.add(x), true);
 super(addItem(xLow, xHigh, y, yLow, yHigh), true);
 super(new Point(yLow, yHigh), true);
 super(key, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, y); add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(add(, y), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; } } ;
super.add(new XYIntervalDataItem(x, xHigh, y, x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x, new BasicXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  Double(x, y)); setXY(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, x, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, x, x, xLow, xHigh, y, yLow, yHigh), true);
 superAdd(x), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yLow, false), true);
 setNew(true);
 this.addSeries((xLow, xHigh, y, yLow, yHigh), true);
 super(x, y,!true);
 super().add(x, y); setXY(x, xLow, xHigh, y, yLow, yHigh), true);
 setXY(yLow, yHigh), true);
 this. dataItems. get ( index ).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, new DoubleXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(add(y), true);
 return x + yLow;
 super().add(xLow, xHigh, y, yLow, yHigh), true);
 this.addData(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 if (x == null) return null;
 super(y, x,yHigh), true);
 super(x, y;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow)) ;
 super(add(x, y) super(x, xLow, xHigh, y, yLow, yHigh), true);
 this.dataItemList.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.addSeries(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xHigh, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, yHigh)); } }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); super. clear ( )
 this.getDataItem(index).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yLow, yHigh)), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, this), true);
 super.add(x, y); setSeries(x, xLow, xHigh, y, yLow, yHigh), true);
 if (data!= null) { data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yHigh, yLow, yHigh), true);
super.add(x); *
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  y, x); }
 super.add(x, y, add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, 0.0, y, yLow, yHigh), true);
 super(x, xHigh, true);
 super().add(new DataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return this. getSeries ( key ).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, y); return series(x, xLow, xHigh, y, yLow, yHigh), true);
 this.series.addSeries(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(y, (yLow, yHigh), true);
 this.addSeries(xLow, xHigh, y, yLow, yHigh), true);
 add((y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, * yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yLow, 0), true);
 this.getDataItems(index).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.dataItems.addOrUpdate(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, yLow), true);
 super.addXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 if(super == null)
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), this);
 super(add(x, y); add(x, xLow, xHigh, y, yLow, yHigh), true);
 super(addItem(index), true);
 super(addX(y, yLow, yHigh), true);
 this. x = x;
super.add(new XYIntervalDataItem(x, xLow, y)); } }
super.add(new  DataItem(x, y), new Color(x, xLow, xHigh, y, yLow, yHigh), true);
 if (series!= null) { series.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(add);
 if (super!= null) return super();
 this.seriesData.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  y); }
 this.add(new XYIntervalItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  Double(y)); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  this);
 return add(newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, yHigh)); *
super.add(new XYIntervalDataItem(x, xLow, xHigh, x, y, 0, yLow, yHigh), true);
 superAdd(x, yLow, yHigh), true);
super.add(new  DataItem(x, y), create(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; return this ; } } ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh) ) ; } super. add ( this ) ;
 super.add(y, yLow, yHigh), true);
 this.addXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(key, y, true);
 return add(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh), y));
super.add(new  Double()); }
 super(addXY(yLow, yHigh), true);
 add(y, yHigh), true);
 if(data!= null) data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 setY(yLow, yHigh), true);
 super(add(x, yHigh,x, xLow, xHigh, y, yLow, yHigh), true);
 super(y, x);
 super(y, x,true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  y)); return this;
 super(add(key), true);
 super(key, autoSort). add(x, xLow, xHigh, y, yLow, yHigh), true);
 return x + y + yLow;
 if (super!= null) return;
super.add(new XYIntervalDataItem(this)); }
 addSeries(x, y, yLow, yHigh), true);
 super((x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, 0, 0, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, x, y, yLow), true);
 super().add((xHigh, y, yLow, yHigh), true);
super.add(new  Double(x););
 super(key, add(xHigh, y, yLow, yHigh), true);
 this.add(new(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, double yLow, yHigh), true);
 super(xy, (yLow, yHigh), true);
super.add(new XYIntervalDataItem(index, x, y, xLow, xHigh, y, yLow, yHigh), true);
 return add(x, yLow, yHigh), true);
 super(key, add);
 add(x, x,xHigh, y, yLow, yHigh), true);
super.add(new  Double(x, y)); return add(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(New DataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super().add((xLow, xHigh, y, yLow, yHigh), true);
super.add(new  XYIntervalItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh));
 super(xy, y,yHigh), true);
 return this. getSeries ( key ). _add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return this.dataItems.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, xLow, y, yLow, yHigh), true);
 this.addSeries((xHigh, y, yLow, yHigh), true);
 super(xy, yHigh);
 superadd(x), true);
 if (super.isEmpty()) {
 super(key, add,true);
 super.addItem(true);
 setSeries(x, xHigh, y, yLow, yHigh), true);
super ( this ) ;
 this.data_items.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 setSeries(x, xLow, xHigh, y, yLow, yHigh), true);
 add(x, y, xLow, xHigh, y, yLow, yHigh), true);
 boolean result = false;
super.add(new XYIntervalDataItem(x, x, y)), true);
 this.series.data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, x, y, y, yLow, yHigh), true);
 setSeries(x, y, yLow, yHigh), true);
 super(x y), true);
super.add(new XYIntervalDataItem(x, y, 0, xLow, xHigh, y, yLow, yHigh), true);
 super().add(x, xHigh, y, yLow, yHigh), true);
 this.add(x).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, xLow, xHigh, y, yLow, yHigh), true);
 this. dataItems ( ).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, -yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y, yLow, x, xLow, xHigh, y, yLow, yHigh), true);
 this.series.addSeries((x, xLow, xHigh, y, yLow, yHigh), true);
 super((yLow,yHigh), true);
 super(series.add(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(new DoubleXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh)); } }
 add(xLow,yHigh), true);
 this.getDataItems(...).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, yY, yLow, yHigh), true);
 this.add(add(xLow, xHigh, y, yLow, yHigh), true);
 return add(x, yHigh), true);
 super(key, add(x, xLow, xHigh, y, yLow, yHigh), true);
 super(key, add=true);
super.add({ x); }
 this.dataItemsInSeries.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 superAdd(x, yHigh), true);
 if (data!= null) { this.data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yLow); }
 this.addXY(x, true);
 super(x, (yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, x, y, false), true);
 this.dataItem(newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, x, yHigh), true);
 return add(x, true);
 this.getDataItems().add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super.add(XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  DataItem());
 this.data.items.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(key, addDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 setSeries(xLow, xHigh, y, yLow, yHigh), true);
 return x + y - 1;
 return add(y, yLow, yHigh), true);
 if (x!= null) { this.data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.setAdd(true);
 add(x, y,y, yLow, yHigh), true);
 this.getDataItems(index)().add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add($x, y);
 super.add(x); setSeries(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); return ;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh); } }
 super(x, y(yHigh), true);
super.add(new XYIntervalDataItem(x, y, y, x, xLow, xHigh, y, yLow, yHigh), true);
 if (data!= null) this.data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow), y));
 super(index);
 this.add(add(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, yLow, xHigh, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, yHigh, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow), yHigh));
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  this); }
 superAdd(y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yMid, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); super.clear(); }
 setData(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(y,yLow, yHigh), true);
 super(add(x,, y, yLow, yHigh), true);
super.add(xxx);
 return add(x);
 super(x, true);
super.add(new  Double()); } }
 super(x y);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh) ) ; super. clear ( )
 super(addItem(y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, x, y, true), true);
 this.dataItems.data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); *
super.add(new  Point(x, xLow, xHigh, y, yLow, yHigh), true);
 this. y = y;
 super.add(x, true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, "yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) ; return false ;
 setSeries(x, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xHigh, y, xHigh, y, yLow, yHigh), true);
 superAdd(x, true);
 this.series.addData(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.add(x); setSeries(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, x, xLow, xHigh, y, yLow, yHigh), true);
 super(index, newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, x, x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, y,), true);
super.add(new  XYIntervalSeriesItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh) + 1); }
super.add(new  DataItem()); }
super.add(new XYIntervalDataItem(x, xLow, yHigh, x, y, yLow, yHigh), true);
super.add(new ) ;
 boolean added = true;
 super((x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow)); } }
 super((x, xLow, xHigh, y, yLow, yHigh), true);
 add(index), true);
 setSeries(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(x, -true);
 setY(y, yHigh), true);
 if (x!= null) { this.series.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.dataItems(index).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return add(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(this));
 super((x, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) return true;
 return this. getSeries ( key ) + ".add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super((x, y, xHigh, y, yLow, yHigh), true);
super.add(new ); }
 return add(x), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh);
 super.add(dataItem);
super.add(new XYIntervalDataItem(x, yLow, x, xLow, xHigh, y, yLow, yHigh), true);
 boolean addedFlag =
 super((x, y, xLow, xHigh, y, yLow, yHigh), true);
 add((x, y, yLow, yHigh), true);
 this.addData(add(x, xLow, xHigh, y, yLow, yHigh), true);
 return this.add(create(x, xLow, xHigh, y, yLow, yHigh), true);
 super("add(x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(y)); }
 return add(yLow, yHigh), true);
 super(new Double(x, xLow, xHigh, y, yLow, yHigh), true);
 this.addItem(x, true);
 boolean add = false;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); return this ; } }
 addSeries(xLow, xHigh, y, yLow, yHigh), true);
 if (data!= null) data.data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 if (useDataItem)
 super("add()",true);
 add(index, true);
 super().add(y, yLow, yHigh), true);
 this.getData ( ).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return new Double(add(x, xLow, xHigh, y, yLow, yHigh), true);
 return y + x;
 this.dataItem.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 dataItems.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(dataItem);
super.add(new XYIntervalDataItem(x, y...), true);
 super().add(XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) return this;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh)); return true ; } }
 return this.series.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 mSeries.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.dataItems[index].add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 if (super.isEmpty()) return ; return
 thisSeries. addItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 add(y, true);
super.add(new XYIntervalDataItem(x), y);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), yLow, yLow, yHigh), true);
 super(xy(yHigh), true);
super.add(new XYIntervalDataItem(this, key, x, xLow, xHigh, y, yLow, yHigh), true);
 return this.addSeries((x, xLow, xHigh, y, yLow, yHigh), true);
 return add((xHigh, y, yLow, yHigh), true);
 super(x), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  yHigh); *
super.add(new XYIntervalDataItem(x, xLow, xHigh), xHigh, y, yLow, yHigh), true);
 boolean added =
 super().add(xHigh, y, yLow, yHigh), true);
 this.add(new XYItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(y);
 if (useSeries) return
 return 0.0;
super.add(new XYIntervalDataItem(x, x, 0, xHigh, y, yLow, yHigh), true);
 _series.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return this.data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(1.0, x, xLow, xHigh, y, yLow, yHigh), true);
 super((key), true);
 setXY((yLow, yHigh), true);
 return this.addItem(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.dataList.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 setSeries(xHigh, y, yLow, yHigh), true);
 super(x y, true);
super.add(new XYIntervalDataItem(key, x, xLow, xHigh, y, yLow, yHigh), true);
 if (data!= null) data.items.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(new Point(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(this); }
 add(xx, yHigh), true);
 return add((xLow, xHigh, y, yLow, yHigh), true);
 this.getDataItems(*).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.dataElements.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(0, -1, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(y));
 setSeries((xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  index); }
 this.dataHeights.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 this.getSeries ( ).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(addXY(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, yLow, x, xHigh, y, yLow, yHigh), true);
super.add(new  Double(x, xLow, xHigh, y, yLow, yHigh), true);
 doAdd(xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  y););
 return newXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  this));
 this.getSeries(...).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yMax), true);
super.add(new  XYIntervalSeriesData(x, xLow, xHigh, y, yLow, yHigh), true);
 return add((y, yLow, yHigh), true);
 setSeries(y, yLow, yHigh), true);
super.add(new XYIntervalDataItem()); } }
 setSeries(x, yHigh), true);
 super((y, yHigh), true);
 this.dataItems (...).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(0, 0, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(xy, xLow, xLow, xHigh, y, yLow, yHigh), true);
 m_series.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 setXY(y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh)); } }
 this. dataItems. add ( x ).add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), yHigh), true);
super.add(new XYIntervalDataItem(x, 0, 0, xHigh, y, yLow, yHigh), true);
super.add(); *
super.add(index);
 this.series.add((x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  XYSeriesItem(x, xLow, xHigh, y, yLow, yHigh), true);
 add((x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yValue), true);
 return add(xHigh, y, yLow, yHigh), true);
 add((x, xLow, xHigh, y, yLow, yHigh), true);
 if (series!= null) { } series.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 add(), true);
 super.add((y, yLow, yHigh), true);
 add(y), true);
 return true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, y, low, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh)) ;
 add((low, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), y, yLow, yHigh), true);
 doAdd(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, y), true);
 boolean returnValue =
 super(int index);
 addData(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 * return -1;
 setX(yHigh), true);
 setAdd(true);
super.add(new  XIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return false, true);
 add({ x, y, yLow, yHigh), true);
 setXY((xHigh, y, yLow, yHigh), true);
super.add(new  double()); }
super.add(new  XYIntervalPoint(x, xLow, xHigh, y, yLow, yHigh), true);
 add((), true);
 add((x, yLow, yHigh), true);
super.add(new  DoubleDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 boolean result; return
super.add(new XYIntervalDataItem(x, x, xHigh, y, yLow, yHigh), true);
 boolean addedX =
 x += y;
 boolean newValue =
 x = - 1;
super.add(new XYIntervalDataItem(y, x));
 setY(y, true);
super.add(new XYIntervalDataItem(x, xLow, xHigh), y, yLow, yHigh), true);
(y, yLow, yHigh), true);
 ((x, y, yLow, yHigh), true);
 this.items.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 super(yHigh), true);
 setY({yHigh), true);
 setSeries(yLow, yHigh), true);
 super.add(yLow, yHigh), true);
 return false);
 y += x;
 mData.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  XYSeriesData(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(index, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, x, yY, yLow, yHigh), true);
super.add(new  data); }
 add({yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  this));
 doAdd(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x,, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh,), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  null));
 add({yLow, yHigh), true);
 (xx, yHigh), true);
super.add(new  XYInterval(x, xLow, xHigh, y, yLow, yHigh), true);
 return add(yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, x + 1, y, yLow, yHigh), true);
 setSeries(true, true);
 add(*), true);
super.add(X, y);
super.add(xy, y);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true)) ; }
super.add(new XYIntervalDataItem(x, xLow, xHigh,, y, yLow, yHigh), true);
 (add, true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHi)), true);
 this.series().add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 return null, true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow)); return ;
super.add(new Item);
super.add() *
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  null));
 ((x, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(this, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  XYIntervalXY(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  ));
 x = y;
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, y, x), true);
super.add(new XYIntervalDataItem(x, xLow)) ;
super.add(new XYIntervalDataItem(xxx));
super.add()();
super.add(new XYIntervalDataItem(xyx, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(xX, xLow, xHigh, y, yLow, yHigh), true);
 super.add(x, (new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 add({y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y), yHigh, yLow, yHigh), true);
super.add(new XYIntervalDataItem(seriesKey, x, xLow, xHigh, y, yLow, yHigh), true);
 "(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x0, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  false));
 add({xHigh, y, yLow, yHigh), true);
 "(x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, 0), true);
(x, yHigh), true);
 ((low, yHigh), true);
super.add(new Data());
 add({ x, xHigh, y, yLow, yHigh), true);
 (x), true);
 add({xLow, xHigh, y, yLow, yHigh), true);
 super("add(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow)));
 _dataItems.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x1, xLow, xHigh, y, yLow, yHigh), true);
 add((, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(y, x), true);
 add((, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh),  true));
 return add(true);
 updateSeries(true);
 add({x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, * y, yLow, yHigh), true);
super.add(new XYIntervalDataItem()); *
 * return
 boolean result =
 ((x, yLow, yHigh), true);
 add(-x, xHigh, y, yLow, yHigh), true);
 set(yHigh), true);
 add(XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, y, y, yLow, yHigh), true);
 add(*, true);
super.add(new XYIntervalDataItem(x, xLow), y);
 data.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
 (this, true);
super.add(index); }
super.add(new XYIntervalDataItem(x, xLow, xHigh, y,  null));
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  0));
 add(-x, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh))); } }
 return yLow;
super.add(new XYIntervalDataItem(x, xLow, xHigh)); *
 return this);
 setXY(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  ));
super.add(new Item());
super.add(new XYIntervalDataItem(xy, y), true);
 boolean add =
super ( x )
 added(true);
super.add(new  XYSeries(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new  XYItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem());
 return false;
 setx, xHigh, y, yLow, yHigh), true);
 add({, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow y)); }
super ( this )
super.add(new XYIntervalDataItem(x, xLow)); *
 dataList.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(xx, y), true);
super.add(new XYIntervalDataItem(thisSeries, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(););
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true); *
 return 1;
super.add(new XYIntervalDataItem(dataItem, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow)); *
super.add(new XYIntervalDataItem(, y), true);
 return this;
super.add(new XYIntervalDataItem(index, y), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, null), true);
super.add(new  DoubleData(x, xLow, xHigh, y, yLow, yHigh), true);
 return x);
super.add(new XYIntervalDataItem(x))();
 return 0;
 return createXYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(xx y), true);
 super((xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow););
super.add(new XYIntervalDataItem(item));
super.add(new XYIntervalDataItem(x)));
 setData(x, xLow, xHigh, y, yLow, yHigh), true);
 return 0);
super.add(new XYIntervalDataItem(xySeries), true);
 super(true);
super ( ;
super.add(new XYIntervalDataItem(x, xLow, 0, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(xyVal), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  yHi));
 chart.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  yHigh)))
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  yHigh))
super.add(new XYIntervalDataItem(x, 0, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y0, yLow, yHigh), true);
super.add(new  XYData(x, xLow, xHigh, y, yLow, yHigh), true);
 return true;
 add([xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh););
super.add(new XYIntervalDataItem(y), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, true), true);
 add([xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(seriesId, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, y, yHigh), true);
super.add(new XYIntervalDataItem(seriesName, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow,  yMax));
 add([y, yLow, yHigh), true);
 add(-xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(index), true);
super.add(new XYIntervalDataItem(this), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, false), true);
 set(true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) return ;
 add(-x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh, yMid), true);
 return(true);
super.Add();
super.add;
 sub(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(series, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xHigh, xHigh, y, yLow, yHigh), true);
 this(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHi), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true) return this
super.add(new XYIntervalDataItem(x, xLow, xHigh,  y))
super.ADD();
super.add(new  Data(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(y, x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow,  y))
super.add(new XYIntervalDataItem(x, xLow, xHigh,  y)))
super.add(new XYIntervalDataItem(x, xLow, xHigh,  ));
super.add(new XYIntervalDataItem(x, xLow, xHi, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x,  y))
super.add(new XYIntervalDataItem(x, yLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow,  y)))
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, x, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, xx, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yMax), true);
super.add(new XYIntervalDataItem(x,  y)))
super.add(new XYIntervalDataItem(x, xLow, yHigh, y, yLow, yHigh), true);
 this.new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, 1, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow,  Y));
super.add(new XYIntervalDataItem(xxx), true);
super.add(new XYIntervalDataItem(x, xLow, xMax, y, yLow, yHigh), true);
super.add(new  Scale(x, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, low, yHigh), true);
super.add(new  Number(x, xLow, xHigh, y, yLow, yHigh), true);
 * *
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yMid), true);
super.add(new XYIntervalDataItem(x, xLower, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLower, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLo, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yHigh, yHigh), true);
super.add(new XYIntervalDataItem(X, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(xx, xLow, xHigh, y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(xy, xLow, xHigh, y, yLow, yHigh), true);
 *
...
super.add(new XYIntervalDataItem(x, xLow, xHigh, Y, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, x, yLow, yHigh), true);
super.add(new XYIntervalDataItem(x, xLow, xHigh, dy, yLow, yHigh), true);
