super(key, autoSort, allowDuplicateXValues);
super(key,  autoSort);
super(key);
 return
 this(key, allowDuplicateXValues);
super(key, autoSort, allowDuplicateValues);
 this(key, autoSort, allowDuplicateXValues);
super(key, autoSort,  allowDuplicate);
 this(autoSort, allowDuplicateXValues);
super(key, autoSort,  allowDuplicateXValues); }
 this(key);
 return this(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues
 this(allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, true);
super(key, autoSort, true);
 return this(autoSort, allowDuplicateXValues);
super(key, false, autoSort);
 this(key, autoSort);
 return this(key, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, false, true);
super(key, autoSort,  allowDuplicateXValues, false); }
super(XYIntervalSeries, key, autoSort, allowDuplicateXValues);
 super. add ( new XYIntervalDataItem(key, autoSort, allowDuplicateXValues);
super(key, autoSort,  allowDuplicateXValues, true); }
super(key, autoSort, allowDuplicateXValues, false);
super. add ( key ) ;
 super.add(new XYIntervalSeries, autoSort, allowDuplicateXValues);
 return this;
 super.add(key, autoSort,allowDuplicateXValues);
 super. add ( new XYIntervalSeries(key, autoSort, allowDuplicateXValues);
super ( )
 this ( key, autoSort, allowDuplicateXValues ) ; }
super(key, false, true);
super(key, autoSort, allowDuplicateXValues, false, false);
super(key, autoSort, allowDuplicates);
super(key, autoSort, false, allowDuplicateXValues);
super(XYIntervalSeries.class, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, true, true);
 super.series(key, autoSort, allowDuplicateXValues);
 this ( key, autoSort, allowDuplicateXValues )
super(key, autoSort, allowDuplicateXValues, true, false);
super. add ( key, false ) ;
 super. add ( new XYIntervalSeries ( key, autoSort ) ) ;
super(key, autoSort, allowDuplicateX);
super(key, autoSort, allowDupl);
 super.add(new XYIntervalSeries(autoSort, allowDuplicateXValues);
 super.add(new XYIntervalSeries key, allowDuplicateXValues);
 this ( key, autoSort, allowDuplicateXValues ) ; return this ;
 this ( key, autoSort, allowDuplicateXValues, true ) ;
super(key, true);
super(key, true, autoSort);
 return XYIntervalSeries(key, autoSort, allowDuplicateXValues);
 this(key, autoSort, true);
 super. add ( new XYIntervalDataItem ( key, autoSort ) ) ;
 this ( key, autoSort, allowDuplicateXValues, false ) ;
super. add ( key, false, false ) ;
 super(key, autoSort, allowDuplicateXValues); } return
 this. add ( new XYIntervalDataItem ( key, autoSort, allowDuplicateXValues ) ) ;
 this ( key, autoSort, allowDuplicateXValues, false ) ; }
super(key, false);
super(key, autoSort, allowDu);
super(key, autoSort, allowDuplicateXValues) ; return this ;
 super.add(key, autoSort, true);
 super.add(new XYIntervalSeriesKey, autoSort, allowDuplicateXValues);
super. add ( key, autoSort ) ;
 super.createSeries(key, autoSort, allowDuplicateXValues);
 this(key, false, allowDuplicateXValues);
super(key, autoSort, false, false, allowDuplicateXValues);
super. add ( key ) ; }
 super. add ( new XYIntervalSeries ( key, autoSort ) )
super(key, false, autoSort, allowDuplicateXValues);
 super(key, autoSort, allowDuplicateXValues); return
 super. add ( new XYIntervalDataItem ( key, autoSort, allowDuplicateXValues ) ) ;
 super. add ( new XYIntervalSeries ( key ) ) ;
 super.add(new XYIntervalSeriesKey, allowDuplicateXValues);
 this(key, true);
super(key, autoSort, allowDuplicates
super(key, autoSort, false, false, false, allowDuplicateXValues);
 super. add ( new XYIntervalSeries ( key ) )
super(key, autoSort, false, true, allowDuplicateXValues);
 super.add(key, false,autoSort, allowDuplicateXValues);
 super. add ( new XYIntervalSeries ( key, autoSort, true ) )
 this ( key, autoSort, allowDuplicateXValues
 super.add(autoSort,allowDuplicateXValues);
super(XYIntervalSeries(null), key, autoSort, allowDuplicateXValues);
 super.add(new XYIntervalSeries key, autoSort, allowDuplicateXValues);
 this ( key, false, autoSort, allowDuplicateXValues ) ; }
 this(key, false);
super(key, false, false, false);
 this ( key, false, autoSort, allowDuplicateXValues ) ;
(key, allowDuplicateXValues);
 super(key, autoSort, allowDuplicateXValues); } else {
 super.add(key, false, false,allowDuplicateXValues);
 super(key, autoSort, allowDuplicateXValues);
 this(key, false, autoSort);
 super.add(key,allowDuplicateXValues);
 this(key, autoSort, allowDuplicateXValues); return
super(key, autoSort, false);
 this ( key, autoSort, allowDuplicateXValues ) ; } }
super(key, false, false, true);
super(key, true, false);
 super. add ( new XYIntervalSeries ( ) )
super(key, allowDuplicateXValues);
 this(key, false, false, autoSort);
 super.add(key, autoSort, allowDuplicateXValues); return
super(key, autoSort, false, true);
 super.createXYIntervalSeries(key, autoSort, allowDuplicateXValues);
 this(key, autoSort, allowDuplicateXValues); } return
 super.autoSort(allowDuplicateXValues);
 this. add ( new XYIntervalDataItem ( key, autoSort, allowDuplicateXValues ) ) ; return
super(key, autoSort, true, allowDuplicateXValues);
 super.add(key, autoSort, allowDuplicateXValues); } return
 super.add(key, false,allowDuplicateXValues);
super. add ( key, false, true ) ;
 super.add(new XYInterval(key, autoSort, allowDuplicateXValues);
 this ( key, autoSort, allowDuplicate )
 this(key, false, true);
 super.XYIntervalSeries(key, autoSort, allowDuplicateXValues);
 super.add(key, autoSort, allowDuplicateXValues);
 this(key, autoSort, allowDuplicateXValues);
super ( key )
 this(key, false, false, allowDuplicateXValues);
 this(key, autoSort, false, allowDuplicateXValues);
 super. add ( new XYIntervalSeries ( key, false ) )
super ( ) ;
 this(key, true, autoSort);
 super.add(new XYIntervalSeries, allowDuplicateXValues);
super(key); }
super. add ( new XYIntervalSeries ( )
super(key, autoSort, allowDu)
 this(key, true, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues++);
 return this(key);
 super. add ( new XYIntervalSeries ( key, false ) ) ;
 super.add(allowDuplicateXValues);
 super.add(key, autoSort, allowDuplicateXValues); } else {
super(key, autoSort, allowDuplicateXValues..);
super(XYIntervalSeries(null)), key, autoSort, allowDuplicateXValues);
super(new XYIntervalSeries(null, null, key, autoSort, allowDuplicateXValues);
 super.add(key, true,autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, false, false); }
 super. add ( new XYIntervalDataItem ( key ) ) ;
 super. add ( new XYIntervalSeries ( key, true ) )
super(key, autoSort, allowDuplicateXValues, false, true); }
super. add ( key, true ) ;
super(key, autoSort, false, false, false, false, allowDuplicateXValues);
super(key, false, false);
 super.add(key, false, true;
 this(key, false, true;
 super. add ( new XYIntervalDataItem ( key, autoSort, allowDuplicateXValues ) )
 this. add ( new XYIntervalDataItem ( key, autoSort, allowDuplicateXValues))) ;
 super.add(key, true,allowDuplicateXValues);
 this(key, false, false, false);
 super(key, autoSort, allowDuplicateXValues); } else { return
 this. add ( new XYIntervalDataItem ( key, autoSort, allowDuplicateXValues ))
super(key, autoSort, allowDuplicateXValues) ; return this ; }
 super. add ( new XYIntervalDataItem ( key, autoSort, allowDuplicateXValues))) ;
 this(key, false, allowDuplicates);
 this(key, false, false);
 super.add(key, autoSort, false);
 super ( key, autoSort, allowDuplicateXValues ) ; } public XYIntervalSeries(Key) {
 this (key, autoSort, allowDuplicateXValues); } else {
 this. add ( new XYIntervalDataItem ( key, autoSort, allowDuplicateXValues ) ) ; }
 this(key, false, false); return this;
 super.add(key, false autoSort,allowDuplicateXValues);
 this(key, autoSort, true, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, -1);
 super.add(key, false, true,allowDuplicateXValues);
super(key, autoSort, allowDuplicate
 super. add ( new XYIntervalDataItem ( key, false ) )
super. create ( ) ;
super(XYIntervalSeries(), key, autoSort, allowDuplicateXValues);
 this(key, false, false, false, autoSort);
 super. add ( new XYIntervalSeries ( key ) ) ; }
 super ( key, autoSort, allowDuplicateXValues ) ; } public XYIntervalSeries(key) {
super(key, autoSort, allowDuplicateXValues, noData);
 this(key, autoSort, false);
 super.add(key, autoSort,!allowDuplicateXValues);
super(key, true, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDupl)
super(null, key, autoSort, allowDuplicateXValues);
 this(key, true, false);
super(key, autoSort, autoSort, allowDuplicateXValues);
 this(key, false, false, true);
 super. add ( new XYIntervalDataItem ( key, autoSort, false ) ) ; } return
 this(key, false, true, allowDuplicateXValues);
super(XYIntervalSeries(key)), autoSort, allowDuplicateXValues);
 super.add(key, autoSort, true;
super. create ( key ) ;
 super. add ( XYIntervalDataItem.key, autoSort, allowDuplicateXValues);
super(XYIntervalSeries(Comparable) key, autoSort, allowDuplicateXValues);
super(key, autoSort, true, true);
super(key, autoSort, true, false, allowDuplicateXValues);
 this(key, false, false, false, false);
super(key, autoSort, allowDuplicateXValues) ; super ( key, false, false ) ;
 super. add ( new XYIntervalDataItem ( key, autoSort, false, false ) ) ;
super(key, autoSort, false, false, true, allowDuplicateXValues);
 super. add ( key, autoSort, allowDuplicateXValues ) ; } else { return
 return new XYIntervalSeries(key, autoSort, allowDuplicateXValues);
 this(key,!allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, false, false, false);
super(key, autoSort, true, false);
super. create ( key, autoSort ) ;
super. add ( key, true, false ) ;
 this(key, false, false, false, false, false);
 this ( key, autoSort, allowDupl )
 super ( key, autoSort, allowDuplicateXValues ) ; } public XYIntervalSeries(Component key) {
 super.add(new XYIntervalSeries(), allowDuplicateXValues);
 super. add ( new XYIntervalSeries ( ) ) ;
 this ( key, autoSort, allowDuplicateXValues, true )
 this(key, autoSort, allowDuplicateXValues); }
 super. add ( new XYIntervalDataItem ( key, autoSort, false, true ) ) ;
 super.add(key, true, false,allowDuplicateXValues);
 super. add ( new XYIntervalDataItem ( key, autoSort, true ) ) ; } return
super(key, false, false, allowDuplicateXValues);
super(new XYIntervalSeries(null), key, autoSort, allowDuplicateXValues);
super(new XYIntervalSeries(null), null, key, autoSort, allowDuplicateXValues);
 this (key, autoSort, allowDuplicateXValues); } else { return
super(key, autoSort, allowDuplicateXValues) return this;
 super().add(key, autoSort,allowDuplicateXValues);
 this(key, false, allowDuplicate);
 this(key, autoSort, allowDuplicateValues);
 this(key, false, false;
 super. add ( XYIntervalSeries.key, autoSort, allowDuplicateXValues);
 super.add(key, true;
super(key, autoSort) ; super(key, allowDuplicateValues);
super(key, autoSort, allowDuplicateXValues, false, false, true);
super(key, autoSort, allowDuplicateXValues) ; super ( key, false, true ) ;
 this(key, false, false, true;
 super ( key, autoSort, allowDuplicateXValues ) ; } public XYIntervalSeries(Comparable) {
super(key, false, allowDuplicates);
 super.create(key, autoSort, allowDuplicateXValues);
super(Key, autoSort, allowDuplicateXValues, true);
 super().add(key, autoSort, true);
super(new XYIntervalSeries(key), true, autoSort, allowDuplicateXValues);
super(new XYIntervalSeries(key), false, autoSort, allowDuplicateXValues);
super. add ( key, false, false )
 super.add(key, noData,autoSort, allowDuplicateXValues);
 super. add ( new XYIntervalDataItem ( key, autoSort, false ) ) ; return
super(key, autoSort, allowDuplicateXValues, false, false, false); }
super(key, autoSort, allowDuplicateXValues), true);
super(key, autoSort, allowDuplicateXValues, true, false); }
super(Key, autoSort, allowDuplicateXValues);
 return this(allowDuplicateXValues);
 this.add(new XYIntervalDataItem(key, autoSort, allowDuplicateXValues);
 this(key, autoSort, false, false, allowDuplicateXValues);
(key, autoSort, allowDuplicateXValues);
 this(key, false, false, false, true);
 this(key, true;
super(key, autoSort, allowDuplicateXValues, false, false, false, false);
 super. add ( new XYIntervalDataItem ( key ) )
 super(key, autoSort, allowDuplicateXValues); }
 super.add(key, autoSort, false, allowDuplicateXValues);
 super. add ( new XYIntervalDataItem ( key, autoSort, true ) ) ;
 this(key, false, false, false, false); }
 super.key = key;
 super.add(new XYInterval(autoSort, allowDuplicateXValues);
 super. add ( new XYIntervalDataItem ( key, autoSort, false ) ) ;
 this.add(new XYIntervalSeries(key, autoSort, allowDuplicateXValues);
 this(key, false, false, false;
 this.XYIntervalSeries(key, autoSort, allowDuplicateXValues);
 super.sort(allowDuplicateXValues);
super. add ( ) ;
super(key, autoSort, allowDuplicateXValues) ; super ( key, false ) ;
 this(key, true, false, allowDuplicateXValues);
 super.add(new XYInterval, autoSort, allowDuplicateXValues);
super. set ( key, false, false ) ;
super(key, autoSort, allowDuplicateXValues, allowDuplicateXValues);
super(key, autoSort, true, false, false, allowDuplicateXValues);
super. add ( key, false, true )
 super(key, autoSort, allowDuplicateXValues); } else
 super. add ( new XYIntervalDataItem ( key, autoSort, true ) ) ; return
super(key), autoSort, allowDuplicateXValues, true);
super(key, autoSort, allowDuplicateXVals);
super. create ( key, false ) ;
super(key, true, false, false);
 super(key, autoSort, allowDuplicateXValues); if (! autoSort ) { return null ; } return
 super.add(key, autoSort, allowDuplicateXValues); }
super. set ( key, autoSort ) ;
super(key, false, true, false);
super. create ( key ) ; }
super(key, false, autoSort); }
 super.add(new XYIntervalSeries(),autoSort, allowDuplicateXValues);
 this(key, false, false, false, autoSort, allowDuplicateXValues);
 this(key, false, true); return this ;
 super.add(key, autoSort, false); } return
 this(key, false, false, autoSort, allowDuplicateXValues);
 super(key, autoSort, allowDuplicateXValues); } } else {
 this(key, true, false;
 super.add(key, false, false;
super(key, autoSort, allowDuplicateXValues) ; super ( key, true, false ) ;
 super (key, autoSort, allowDuplicateXValues); } } else { return
 this(key, false, false, false, false, true);
super(key, false, false, autoSort);
 return this.series(key, autoSort, allowDuplicateXValues);
 this(key, true, true);
super(key, autoSort, allowDuplicateXValues, defaultValues);
 this(key, false, true); return this ; }
super(new XYIntervalDataSeries(null, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, noCopy);
 return new XYIntervalDataSeries(key, autoSort, allowDuplicateXValues);
 super.add(new XYSeries(key, autoSort, allowDuplicateXValues);
 super. add ( XYIntervalDataItem)key, autoSort, allowDuplicateXValues);
 super. add ( new XYIntervalDataItem ( key, autoSort, allowDuplicateXValues ) ) ||
 super. add ( new XYIntervalSeries ( key, autoSort, false ) ) ; return
 super.add(key, autoSort, allowDuplicateXValues); } else if (autoSort!= null) { return
 super (key, autoSort, allowDuplicateXValues); } public void init ( ) {
super(XYIntervalSeries(key), true, autoSort, allowDuplicateXValues);
 super().add(new XYIntervalSeries, autoSort, allowDuplicateXValues);
super(Key, autoSort, allowDuplicateValues);
super(XYIntervalSeries) key, autoSort, allowDuplicateXValues);
 super.add(key, autoSort, allowDuplicateXValues); } else { if (autoSort!= null) {
super(key, autoSort, allowDuplicateXValues, false, false, true); }
super(key, autoSort, false, true, false, allowDuplicateXValues);
 this(key, true,autoSort, allowDuplicateXValues);
super(key, autoSort, true, true, allowDuplicateXValues);
 super.add(key, false, false,autoSort, allowDuplicateXValues);
 super.create(key, false, autoSort, allowDuplicateXValues);
 super.add(key, autoSort, allowDuplicateXValues); } else if (autoSort!= null) { super =
 super. add ( new XYIntervalDataSeries(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super ( key, false, true )
 super.addSeries(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, true); super(key, autoSort, false);
 super.add(key, autoSort, allowDuplicateXValues); } else { if (autoSort!= null) { return
super(XYIntervalDataSeries) key, autoSort, allowDuplicateXValues);
super(XYIntervalSeries(key), false, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, false, false, false, false, false);
 super.add(key, autoSort, allowDuplicateXValues); } else { super. add ( key ) ; } return
super. set ( key, false ) ;
 super.add(key, autoSort, allowDuplicateXValues); } else { if (autoSort!= null) return
 super.add(key, autoSort, allowDuplicateXValues); } else if (autoSort!= -1) {
super(key, autoSort, allowDuplicateXValues) ; super ( key, false, false )
 return new XYSeries(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, defaultValue);
super(key, autoSort, false, false, false, true, allowDuplicateXValues);
 return new XYIntervalSeriesImpl(key, autoSort, allowDuplicateXValues);
 super.add(key, autoSort, true); } return
super(key, autoSort, allowDuplicateXValues) ; super. add ( key ) ;
super(XYIntervalDataSeries, key, autoSort, allowDuplicateXValues);
 super.add(key, autoSort, allowDuplicateXValues); } else { super. add ( key, false ) ; }
super(key, true, true);
super(key, autoSort, allowDuplicateXValues, false); super(key, autoSort, true);
 super. add ( new XYIntervalSeries ( key, autoSort, true ) ) ; return
 super.add(key, autoSort, allowDuplicateXValues); } else { super. add ( key ) ; }
 super.add(key), true;
super(key), autoSort, allowDuplicateXValues);
 super.add(key, -1,autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super ( key, false ) ; }
 super. add ( key, autoSort, allowDuplicateXValues ) ; } else { super.
super(XYIntervalSeries), key, autoSort, allowDuplicateXValues);
 super(key, autoSort, allowDuplicate) ;
 return new XYIntervalSeries(this,key, autoSort, allowDuplicateXValues);
 this (key, autoSort, allowDuplicateXValues)
 super.add(key, autoSort, false;
super(new XYIntervalSeries(null, null), key, autoSort, allowDuplicateXValues);
super(XYIntervalSeries(Comparable key), true, autoSort, allowDuplicateXValues);
 super.add(new Series(key, autoSort, allowDuplicateXValues);
super(new XYIntervalSeries(key, false, autoSort, allowDuplicateXValues);
super(key, false, true, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues), false);
super(XYIntervalDataItem) key, autoSort, allowDuplicateXValues);
 super.add(key, autoSort, true); return
 super.add(key, autoSort, allowDuplicateXValues); } else { if (autoSort!= null) { } return
super(key, true, false, true);
super(key, autoSort, allowDuplicateXValues) { super(key, false, true); }
super(XIntervalSeries(Comparable) key, autoSort, allowDuplicateXValues);
 super. add ( key, autoSort, allowDuplicateXValues ) ; } } else {
super(key, autoSort, allowDuplicateXValues, false, false, false, true);
super(key, autoSort, autoSort, false, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues); super. add ( key, false ) ;
 super(key,!allowDuplicateXValues);
 if (key!= null) { return
super(new XYIntervalDataItem(null, key, autoSort, allowDuplicateXValues);
super(key,  false, autoSort, allowDuplicate);
 super.add(key, autoSort, false, true); return
super(key, autoSort, allowDuplicateXValues) ; super.add(key, autoSort);
super(key, autoSort, autoSort, false, false, allowDuplicateXValues);
 return new XYIntervalSeries(this(),key, autoSort, allowDuplicateXValues);
super(key, false, allowDuplicateXValues
super(XYIntervalSeries(null, null), null, key, autoSort, allowDuplicateXValues);
 super. add ( key, autoSort, allowDuplicateXValues ) ; } else
 this(key), true;
super. add ( null, key ) ;
 super.add(key, autoSort, allowDuplicateXValues); } else { super. add ( key, true ) ; }
 return XYIntervalSeries(autoSort, allowDuplicateXValues);
 this(key,!autoSort, allowDuplicateXValues);
 super. newXYIntervalSeriesWithoutData(key, autoSort, allowDuplicateXValues);
super. add ( key, false )
super(key, autoSort, false, true, false, false, allowDuplicateXValues);
super(new XYIntervalSeries(0, 0, key, autoSort, allowDuplicateXValues);
super(key, autoSort, true, false, true, allowDuplicateXValues);
 super.add(key, false); return
 super.add(key, autoSort, allowDuplicateXValues); } else if (autoSort!= null) { super.
 return new XYIntervalSeries(autoSort, allowDuplicateXValues);
super(key, autoSort, true, false, false, false, allowDuplicateXValues);
super(key, autoSort, false, false, true, false, allowDuplicateXValues);
 super. add ( XYIntervalSeries::key, autoSort, allowDuplicateXValues);
 super.add(key, null,autoSort, allowDuplicateXValues);
 super. create ( ) ; return this(key, autoSort, allowDuplicateXValues);
 if (key == null) { return null; } return
 super.add(key, null, _autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) { super(key, false, true);
super(key, autoSort, allowDu duplicateXValues);
 super.createIntervalSeries(key, autoSort, allowDuplicateXValues);
super(key, autSort, allowDuplicate);
super(key, autoSort, allowDuplicateXValues, false); super(key, autoSort, false);
 super. add ( new XYIntervalSeriesImpl(key, autoSort, allowDuplicateXValues);
super(xyIntervalSeries(key)), autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super ( key ) ;
 super.add(key, true); return
super(key, autSort, allowDuplicateXValues
 super.create(key, true, autoSort, allowDuplicateXValues);
 super.add(key, autoSort, allowDuplicateXValues); } else { super. add ( key, false ) ;
 super.add(key, autoSort, allowDuplicateXValues); } else { if (autoSort!= null) { super =
 super().add(key, false,autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, this(key, autoSort, true);
 super.createSeries(autoSort, allowDuplicateXValues);
 super.add(key, autoSort); return
 return new XYIntervalSeries*(key, autoSort, allowDuplicateXValues);
 this(key, autoSort, allowDuplicateX);
super(XYIntervalSeries(Comparable key), false, autoSort, allowDuplicateXValues);
 this(key, false;
 return new XYInterval(key, autoSort, allowDuplicateXValues);
super(XYIntervalSeries, null, key, autoSort, allowDuplicateXValues);
 if (! autoSort ) { return null ; } return
 super. add ( XYIntervalSeries(key, autoSort, allowDuplicateXValues);
 super.add(key, false, true,autoSort, allowDuplicateXValues);
 this(key, autoSort, allowDuplicate);
 super.add(key, autoSort, false); return
super(new XYIntervalDataItem(key), true, autoSort, allowDuplicateXValues);
super(xyIntervalSeries(), key, autoSort, allowDuplicateXValues);
 return new XYIntervalSeries(key); this(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super ( false, false ) ;
super(key, autoSort); }
super(key, autoSort, allowDuplicateX");
super(key, autoSort, allowDuplicateXValues, true, false, false);
super(key, autoSort, allowDuplicateXValues) ; return this ( key ) ;
super(key, autoSort, allowDuplicateXValues, true); super(key, false, true);
 super.setAutoSort(allowDuplicateXValues);
super(key, autoSort, false, false, -1, allowDuplicateXValues);
super(new XYIntervalSeries(null, false, key, autoSort, allowDuplicateXValues);
super(xyIntervalSeries(key), false, autoSort, allowDuplicateXValues);
 if (! autoSort ) { return null ; }
 super.create(autoSort,allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, true, true); }
super(key, autoSort, allowDuplicateXValues, false, false, false, false, true);
super(key, autoSort, allowDuplicateXValues) ; this ( key, false ) ;
 super.add(key, autoSort, allowDuplicateXValues); } else { if ( autoSort!= null ) { super.
 this(key, autoSort);
 super. add ( XYIntervalDataItem )
 return this);
 this(key, false, false, true, autoSort, allowDuplicateXValues);
super(new XYIntervalDataItem(key), false, autoSort, allowDuplicateXValues);
super(xyIntervalSeries(key), true, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super ( key, true ) ;
 super(key, autoSort); return
 super(key, false); return
 super.XYIntervalSeries()(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super ( key, true, false )
super(key, autoSort, allowDuplicateXValues) ; return this ( ) ;
super(XYIntervalSeries(null, null, null, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues); return
 return new XYIntervalSeriesComparable(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, true); super(key, autoSort, true);
 return new XYIntervalSeries(this))(key, autoSort, allowDuplicateXValues);
super. add ( key, true )
super(new XYIntervalDataSeries(this, key, autoSort, allowDuplicateXValues);
super(Key, autoSort, allowDuplicate);
 super.create(key, false); return
super(xyIntervalSeries(null, null), null, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, false, true); return this ;
super(key, autoSort, autoSort, true, allowDuplicateXValues);
 super.add(key); return
super(key), autoSort, allowDuplicateXValues(*);
super(key, autoSort, allowDuplicateXValues, false, true, false); }
 super.createSeries(key, allowDuplicateXValues);
 super.add(new XYSeriesKey, autoSort, allowDuplicateXValues);
super(new XYIntervalSeries(key, noData, autoSort, allowDuplicateXValues);
super(key, false, allowDuplicateX);
super. add ( key )
super(XYIntervalSeries key, autoSort, allowDuplicateXValues);
super. init ( ) ;
 this.createSeries(key, autoSort, allowDuplicateXValues);
 return this(key, false, autoSort, allowDuplicateXValues);
super(key), autoSort, allowDuplicateXValues());
 this(key, true, false); } }
super(key, autoSort, allowDuplicateXValues) ; return this ( key )
 super(key, true); return
super(key, autoSort, allowDuplicateXValues, null, true);
 return this(key, false, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super ( false ) ; }
super(key, autoSort, allowDuplicateXValues, true, false, true);
 super().add(key, false); return
 if (key == null) { return null; }
super(XYIntervalDataSeries.class, key, autoSort, allowDuplicateXValues);
super(key, autoSort, autoSort, false, true, allowDuplicateXValues);
super(new XYIntervalSeries(this, false, key, autoSort, allowDuplicateXValues);
super(XYIntervalSeries(null, key, autoSort, allowDuplicateXValues);
super(key, autoSort) ; super(key, false, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, false, true, true);
 if (key == null) return null; return
 this(key, false, -1, autoSort, allowDuplicateXValues);
super(key,  false, false, allowDuplicateXValues
 super().autoSort(allowDuplicateXValues);
 super.series(autoSort, allowDuplicateXValues);
super(null, null, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, false); super(key, false, true);
super(key, autoSort, allowDuplicateXValues, this(key, autoSort, false);
super(key, autoSort, allowDuplicateXValues, this(key, false, false, true);
 return XYIntervalSeries.
super(new XYIntervalSeries(null)), key, autoSort, allowDuplicateXValues);
 super.add(key, _autoSort, allowDuplicateXValues);
 super.add(new Series) key, autoSort, allowDuplicateXValues);
super(xyIntervalSeries(null)), key, autoSort, allowDuplicateXValues);
 if (autoSort!= null) { super =
super ( key, false )
super(key, autoSort, allowDuplicateXValues, this(key, autoSort), true);
 this(key, false, true); } }
 return new XYIntervalSeries(key))(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, true, false, false, false);
 this(key), false;
super(key, false, false, autoSort, allowDuplicateXValues);
super(XYIntervalDataItem) this, key, autoSort, allowDuplicateXValues);
 this(key, false);
 super.addSeries(key, allowDuplicateXValues);
 super.initSeries(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super(key); }
super(key, autoSort, allowDuplicateXValues) ; super ( key, false )
 super().add(key); return
super(key, false, allowDuplicateXValues);
super(XYIntervalSeries).this, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, 0, 0, 0, -1, true);
 if (key == null) return this; return
 super. add ( XYIntervalSeries ) ; return
 if (key!= null) { super =
super. add ( null, key )
super(key, autoSort, noData, allowDuplicateXValues);
 this(key, noData,autoSort, allowDuplicateXValues);
super(XYIntervalSeries) this, key, autoSort, allowDuplicateXValues);
super(key, true, false, allowDuplicateXValues);
 super(key, autoSort) ;
super(key, autoSort, allowDuplicateXValues, false, false, true, true);
super(key,  false, false, allowDuplicateX);
super ( key, autoSort )
 super.init(autoSort, allowDuplicateXValues);
 return this(key, true, autoSort, allowDuplicateXValues);
super(xyIntervalSeries(null, null, null, key, autoSort, allowDuplicateXValues);
super. set ( key ) ;
super(key, autoSort, allowDuplicateXValues, true, false, false, true);
 super.createSeries(key);
 if (key == null) { return this; }
 super.initSeries(autoSort, allowDuplicateXValues);
 super.add(key, noData(),autoSort, allowDuplicateXValues);
super(key, false, false); }
super(key, autoSort, allowDuplicateXValues, false, true); } }
 this(key, autoSort;
 this(key, true);
super(XYIntervalSeries1, key, autoSort, allowDuplicateXValues);
 super.setSeries(autoSort, allowDuplicateXValues);
 super.add(key,!autoSort, allowDuplicateXValues);
super(key, autoSort, false, -1, allowDuplicateXValues);
super(comparable, key, autoSort, allowDuplicateXValues);
super(XYIntervalSeries0, key, autoSort, allowDuplicateXValues);
 return this(key, true,allowDuplicateXValues);
 super.add(key, true);
 super.createNewSeries(key, autoSort, allowDuplicateXValues);
super(XYIntervalSeries this, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super.add(this);
 super.series(key, allowDuplicateXValues);
super(x, key, false, autoSort, allowDuplicateXValues);
 return XYIntervalSeriesImpl(key, autoSort, allowDuplicateXValues);
 super.init(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; super ( ) ;
super(key, autoSort, allowDuplicateXValues, this(key, autoSort), false);
super(key, autoSort), allowDuplicateXValues);
super(autoSort);
super. add ( null ) ;
super(key, autoSort, allowDuplicateXValues) ; this ( key ) ;
super(key, autoSort, allowDuplicateXValues, 0, 0, -1, true);
super(key, autoSort, noSort, allowDuplicateXValues);
 super.add(key, false);
super(key, autoSort, allowDuplicateXValues, true); return this ;
super(key, false, true, autoSort, allowDuplicateXValues);
 key = null;
super(key, false, allowDuplicateXValues true);
super(key, autoSort, allowDupl());
 super.add(this,key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, true, false); } }
 this(key); return
super(key, autoSort, allowAllXValues, allowDuplicateXValues);
 newSeries(key, autoSort, allowDuplicateXValues);
super(xyIntervalSeries, key, autoSort, allowDuplicateXValues);
 return XYIntervalSeriesInternal(key, autoSort, allowDuplicateXValues);
 return key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowsDuplicateXValues);
super(new XYIntervalSeries, autoSort, allowDuplicateXValues);
 return (Series)
super(key, autoSort,  allowsDuplicateXValues); }
 this.XYIntervalSeries()(key, autoSort, allowDuplicateXValues);
super(key, autoSort, -1, allowDuplicateXValues);
 super().add(key, allowDuplicateXValues);
super(XIntervalSeries, key, autoSort, allowDuplicateXValues);
 this.createEmptySeries(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowsDuplicateXValues, true);
super(key, autoSort, allowDuplicateX());
super(key, autoSort, allowedDuplicateXValues, true);
 super.create(null,key, autoSort, allowDuplicateXValues);
 newSeries(key, allowDuplicateXValues);
 super().add(autoSort, allowDuplicateXValues);
super(key, false, true); }
 return this(null,key, autoSort, allowDuplicateXValues);
 this.add(null,key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, null);
 super().add(allowDuplicateXValues);
 super(key); return
super(key, autoSort, false, false);
 this(key);
 super(key, false);
super(key, autoSort, allowXValues);
super(key, autoSort, allowDuplicateXValues) ; } }
 super(key, true);
 return this(key, false);
 super.createEmptySeries(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowUnique);
 super.this(key, autoSort, allowDuplicateXValues);
super(key, autoSort, 0, false, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) return this ( key )
super(key, autoSort, allowDuplicateXValues, false, false, -1);
super(key, autoSort, allowDuplicateXValues, true); } }
 return this(key, true);
 this(key) {
super(key, true, allowDuplicateXValues);
 this(autoSort);
super(key, autoSort, allowDuplicateXValues, false, "null", true);
super(key, autoSort,  allowedDuplicateXValues);
super(null, false, key, autoSort, allowDuplicateXValues);
super(key, autoSort, defaultValues, allowDuplicateXValues);
 newSeries(key);
super(key, autoSort, allowDuplicateXValues, "null", true);
super(key, autoSort, allowDu++)
 return super.series(key, autoSort, allowDuplicateXValues);
super(key, autoSort) ; return this ; }
 this.addDataItem(key, autoSort, allowDuplicateXValues);
super(Comparable) key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicate)
super(key, autoSort,  allowDuplicateX');
 new this(key, allowDuplicateXValues);
super(key, false autoSort, allowDuplicateXValues);
(key);
super(key, autoSort, allowDuplicateXValues) return this ; }
 new this(key);
super(null, true, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, false, "null", false);
 return null;
super(key, autoSort, allowDuplicateXValues)
super(comparable(), key, autoSort, allowDuplicateXValues);
 this=key;
super(key null, autoSort, allowDuplicateXValues);
super(key, noData, autoSort, allowDuplicateXValues);
super(key, autSort, true);
super(key, autoSort, allowDuplicateXValues, "null", false);
super(key key);
super(key, autoSort,  allowDuplicatedXValues);
super(Key, autoSort, true);
super(key, autoSort, allowDu));
super(key, -1, autoSort, allowDuplicateXValues);
 return this(key;
 createSeries(key, autoSort, allowDuplicateXValues);
super(key, null, true);
super(key, true, true, allowDuplicateXValues);
super(xy-series, key, autoSort, allowDuplicateXValues);
 return create(key, autoSort, allowDuplicateXValues);
 newSeries(autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, false, false, noData);
super(key, autoSort, allowMultiple);
super(key, autoSort, allowDuplicateXValues, 0, -1);
 super = this;
super(key, autoSort, allowDuplicateXValues, "false", true);
super(key, autoSort, allow duplicate);
 super =
super(key, autoSort,  allowDuplicated);
super(key, autoSort, allowDuicateXValues);
 return null);
super(this, null, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicatedValues);
super(this, false, key, autoSort, allowDuplicateXValues);
 new this(allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValValues);
 super = super;
super(key null);
 this(key key);
super(key, autoSort, allowDuplicateXValues, false, -1);
super(key, autoSort, allowDu");
super(key, null, autoSort, allowDuplicateXValues);
super(Key, autoSort);
 newSeries(allowDuplicateXValues);
 return (series)
 super.series =
 return null, false;
 super.
 setDefault(allowDuplicateXValues);
 this =
super(key, autoSort,  allowsDuplicate);
super(key, autoSort, allowDuplicateXValues) return null;
super(key, null, false);
 setData(allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) ; return null ;
super ( ) ; }
super(key, autoSort, allowDuplicateXValues) ; return ;
super(key true);
 return null, true;
 super(key);
super(key), autoSort);
super(key, autoSort, null, allowDuplicateXValues);
super(null, autoSort);
super(key, null);
super(key,);
super(key), true);
super(key, autoSort());
super(k); }
super(key, autoSort, allowDuplicateXValues) return this
super(k, autoSort);
 return this, autoSort, allowDuplicateXValues);
 createSeries(autoSort, allowDuplicateXValues);
super(null, true);
 setSeries(autoSort, allowDuplicateXValues);
super(key false);
 * return
super(key, autoSort, AllowDuplicateXValues);
super(key, true
super(key, autoSort, allowDouble);
super ( null ) ;
super(noData, key, autoSort, allowDuplicateXValues);
super(autoSort, true);
 return key, allowDuplicateXValues);
super(null key, autoSort, allowDuplicateXValues);
 return key;
 return(key);
super(xSeries, key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowedDuplicates);
super(key, autoSort), true);
super(xy, key, autoSort, allowDuplicateXValues);
 add(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplication);
super(interval, key, autoSort, allowDuplicateXValues);
super(key, autSort);
 super(allowDuplicateXValues);
 add(key, allowDuplicateXValues);
 create(key, autoSort, allowDuplicateXValues);
 return key);
super(key, 0, autoSort, allowDuplicateXValues);
super(dataSeries, key, autoSort, allowDuplicateXValues);
 super(autoSort, allowDuplicateXValues);
 return null, allowDuplicateXValues);
super(null, key);
super(key, autoSort, allowDuplicateXValues) return;
 }(key);
 * super =
super(key), false);
super(key(), autoSort, allowDuplicateXValues);
super(key true, autoSort, allowDuplicateXValues);
 add(key);
super(XYSeries this, key, autoSort, allowDuplicateXValues);
 * * return
 return(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues) true;
 return this, allowDuplicateXValues);
super(int key, autoSort, allowDuplicateXValues);
 create(key, allowDuplicateXValues);
 key(allowDuplicateXValues);
 set(key, allowDuplicateXValues);
 return super;
 return super(key, autoSort, allowDuplicateXValues);
super(key); return
 this(new
super(key,  AutoSort);
 * return new
 return(allowDuplicateXValues);
 this.new
super(key, autoSort,);
 return false;
super(key, autoSort) }
 add(allowDuplicateXValues);
super ( ;
super(key, key, autoSort, allowDuplicateXValues);
 add(autoSort, allowDuplicateXValues);
super(this, key, autoSort, allowDuplicateXValues);
 key(autoSort, allowDuplicateXValues);
 return(autoSort, allowDuplicateXValues);
super(key,  this);
super(series, key, autoSort, allowDuplicateXValues);
super(key, autoSort,  null);
super(key,  0);
 set(key, autoSort, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues)); }
super(key, autoSort,  allow);
super(Key);
super(0, key, autoSort, allowDuplicateXValues);
super(key, autoSort,  this);
super(this);
super(key, automaticSort, allowDuplicateXValues);
super(key, autSort, allowDuplicateXValues);
super(key, AutoSort, allowDuplicateXValues);
super(key, null, allowDuplicateXValues);
super(key, 0, allowDuplicateXValues);
super(key, autoSort, allowDuplicateXValues, this);
super(key, autoSort, allowDuplicateXValues, 0);
super(key, this, allowDuplicateXValues);
 series(key, autoSort, allowDuplicateXValues);
 new
super(key, autoSort, 0);
 *
super(null, autoSort, allowDuplicateXValues);
super(name, autoSort, allowDuplicateXValues);
