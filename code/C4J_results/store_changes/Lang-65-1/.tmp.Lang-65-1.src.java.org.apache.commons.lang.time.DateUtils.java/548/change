 return gval.getTime();
return  gval ;
 return gval);
return gval ; }
 return gval.clone();
 return date.getTime();
 return date.clone();
 return (Date) gval.getTime();
 return date ;
return gval.getTime ( ) ; }
 return new Date(date);
 return (gval).getTime();
return gval. toDate ( ) ; }
 return ( Date ) gval.clone();
 return new Date();
 return ( Date ) gval ;
 return ( Date ) gval ; }
return gval. toDate ( ) ;
 return gval.getTime();
 return ( Date ) date ;
 return gval. get ( ) ;
 return ( Date ) date
 return.getTime();
 return new Date ( gval, field ) ; }
 return gval. toDate ( ) ; } }
 return (Date)date.getTime();
return gval. getTime ( ) + field ; }
 return new Date ( gval ) ; }
 return new Date(gval, field, false);
 return gval. getTime ( ) ; } }
 return ( Date ) gval ; } }
 return date
 return (Calendar) gval.getTime();
 return (Calendar) date;
 return ( Date ) gval. toDateTime();
 return gval.getTime());
return gval ; } }
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ; modify(gval, field, false);
 return gval. getTime(); } else { gval. setTime(date); modify(gval, field, false); }
 return gval. getTime(); } else { gval. setTime(date); modify(gval, field, true); }
 return (Calendar) gval;
 return gval. getTime(); } else { gval = Calendar. getInstance ( date ) ; modify ( gval, field ) ;
 return date);
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ; modify(gval, field, true);
 return new Date(gval, field).getTime();
 return ( Date ) gval. toISOString();
 return ( Date ) ( gval).getTime();
 return new Date ( gval, field ) ;
 return new Date(gval, date).getTime();
 return Date.parse(date);
return gval. toDate ( ) ; } return null ;
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ; modify ( date, field ) ;
 return new Date ( gval ) ;
return gval.getTime ( ). getTime ( ) ; }
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ; modify ( date, field, false ) ;
 return gval. getTime(); } else { gval = Calendar. getInstance ( date ) ;
 return gval. getTime(); } else { gval = Calendar. getInstance ( date, field ) ;
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ; modify(gval, field) ;
 return gval. getTime(); } else { gval. setTime(date); modify(gval, field, true);
 return gval. getTime(); } else { gval = Date. getInstance ( date ) ;
 return new Date(gval, - 1);
 return gval. getTime(); } else { gval. setTime(date); modify(gval, field, false);
 return gval. getTime(); } else { gval = Calendar. getInstance ( date ) ; modify ( gval, field )
 return gval(date);
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ; modify ( date, field, false )
 return new Date(gval, field, true);
 return gval.toDateTime();
 return gval. getTime(); } else { gval = Calendar. getInstance ( date ) ; modify ( gval ) ;
return gval.getTime ( ) + field ;
 return gval ; } } ;
 return ( Date ) gval.toDate();
 return gval. getTime(); } else { gval. setTime(date); modify(gval, field); }
 return (Calendar Date)gval.getTime();
 return gval;
 return gval. getTime(); if ( date == null ) { throw new IllegalArgumentException("Invalid date");
 return gval. getTime(); } else { gval = Date. getInstance ( date, field ) ;
 return gval. getTime(); } public static Date truncate() {
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ; modify ( date, field )
 return gval. getTime(); } else { gval = Calendar. getInstance ( date, field, false ) ;
 return gval. getTime(); } else { gval = Date. getInstance ( ) ;
return gval.toDate ( ) ; } return null ; }
 return ( Date ) gval ; } return null ;
 return (gval;
 return ( Date ) gval.newInstance();
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ;
 return ( Date ) gval. toCalendar();
 return gval.year;
return gval.getTime ( ) - date. getTime();
 return gval. getTime(); } else { Date gval = Calendar. getInstance ( date ) ;
 return new Date(gval).getTime();
 return gval. getTime(); if ( date == null ) { throw new IllegalArgumentException ( ) ; }
 return gval. getTime(); } public static Date truncate(Date date) {
 return gval. getTime(); } public static Date truncate(Date date);
return gval.getTime ( ) ; } return null ; }
 return (gval.getTime();
 return gval. getTime(); } else { Date gval = Calendar. getInstance ( date, field ) ;
 return gval. getTime(); if (field == 0) {
 return gval. toTime ( ) ;
 return gval. getTime(); } else { gval = Calendar. getInstance ( ). getTime ( ) ;
 return gval. getTime(); } public static Date truncate(date);
 return (Date) (Date)gval.getTime();
 return gval. getTime(); if (field == -1) {
 return gval.toDate());
return gval.getTime ( ). getTime ( ) ;
 gval.setTime(gval);
return gval.getTime ( ). toDate ( ) ; }
 return new Date(date, field);
 return new Date(gval, field)().getTime();
 return new Date gval.getTime();
 return ( Date ) gval ; } } ;
 return gval. getTime(); } else { modify(gval, field, true);
 return gval.getTime(field);
 return gval. getTime(); } else { Date gval = Calendar. getInstance ( ) ;
return gval. getTime ( ) - date ; }
 return gval. getTime(); } else { Date gval = Date. getInstance ( date ) ;
 return gval. getTime(); } else { gval = Calendar. getInstance ( date, field, true ) ;
 return (Date) gval.getTime;
 return ( Date ) gval. toJavaDate();
 return gval. getTime(); if (date == null) { return null; }
return gval.getTime(); *
return gval. getTime ( ) - field ; }
return gval. toDate ( ) ; } } ;
 return gval. getTime(); if (field == 0)
 return Date. getInstance ( gval, field);
 return gval. getTime(); } else { gval. setTime(date, field); }
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ; modify ( date ) ;
 return (Date) (gval.getTime();
 return gval. getTime(); } else { gval. setTime(date, field);
return gval.getTime ( ). getTime ( ) + field ;
 return (Date) gval.clone().getTime();
 return gval.getCalendar();
return gval. getTime ( ) ; } return null ;
return gval. getTime ( ) - date. time ;
 return gval.toCalendar();
 gval.setTime(gval.getTime());
return gval.getTime() ; } return date. getTime ( ) ;
 return gval. getTime(); } else { gval = Calendar. getInstance ( date, field ) ; }
 return gval. getTime(); } else { modify(gval, field); }
 return gval. getTime(); } else { modify(gval, field) ;
 return gval. getTime(); } else { modify(gval, field, false);
return gval.getTime ( ). toJD ( ) ;
 gval.getTime(date);
 return new Date(gval)().getTime();
 return gval.toFixed(field);
 return (Date) date.clone();
 return new Date(gval, field, date);
 return gval. getTime(); } public static Date date() {
return gval. toDate ( ) ; } return date ;
 return gval. getTime(); if (date == null) { return null }
return gval.getTime ( ) ; } return null ; } ;
 return (Calendar) (Date)gval.getTime();
 return new Date(gval, field)#getTime();
 return gval. getTime(); } else { gval = Calendar. getInstance ( date ) ; }
return gval. toJD ( ) ; }
 return gval. getTime(); } else { modify(gval, field, true); }
 return gval. getTime(); } else { gval. setTime(date); }
 return gval.toISOString();
 return ( Date ) gval. toGMTString();
return gval.getTime ( ) - date. getTime ; }
return gval.getTime ( ) - date. getTime ( )
 return Date.today();
 return gval. getTime(); } else { gval = Date. getInstance ( date ) ; }
return gval.getTime ( ) - date. getTime ;
 return clone();
 return (Date)date.clone(field);
 return gval();
return gval. getTime ( ) - ( Date ) date
 return new Date(gval, date.getTime();
return gval.getTime ( ). getTime ( ) - field ;
 gval.setTime(date);
 return gval. getTime(); } public static Date truncate(Date date)
return gval. toDateTime ( ) ; } }
return gval.toDate ( ) ; return null ; }
 return (Date) gval.clone(); date.getTime();
 return date(date);
 return gval.getTimeMillis();
 return gval. getTime(); } public static Date truncate(Date gval);
 gval.getTime(gval);
 return gval. getTime(); } else { gval = Calendar. getInstance(); }
return gval.getTime() ; } return Date. getInstance ( ) ;
return gval.getTime ( ). toFixed ( field ) ; }
 return (Date)date.clone();gval.getTime();
 return (Date) gval.clone;
 return gval. getTime(); } public static Date truncate(date)
return gval.getTime() ; } return date. clone ( ) ;
 return new Date(gval, gval).getTime();
return gval. getTime ( ) - field ;
 return (Date)gval.getTime(),gval.getTime();
 return new Date ( gval));
return gval.getTime( ). withField ( field, date ) ;
 return (Calendar) date + gval.getTime();
 return new Date(gval);date.getTime();
return gval.getTime( ). getTime ( ) + field ; }
return gval.getTime( ) ; } return ( Date ) date ; }
return gval.getTime() - ( int ) field ; }
return gval. toTime ( ) ; }
 return Gval. instance ;
 return gval. getTime(); if (date == null) { }
 return gval. getTime(); } public static Date truncate(Date);
 return (Date)date.clone().gval.getTime();
 return gval.getTime(););
 return (Date) gval.getTime.getTime();
return gval. toJD ( ) ;
 return (Date) gval.clone(...).getTime();
 return (Calendar)date.clone().gval.getTime();
return gval ; } return null ;
 return gval.toISO8601());
 return gval. getTime(); } public static Date truncate(Date)
 return gval. getTime(); } public static Date truncate(date){
 return (Calendar)date.clone();gval.getTime();
 return ( Date ) gval. clone(); *
 return gval.toDate(););
 return new Date(gval)gval.getTime();
 return gval. getTime(); if (date == null) { return null; } *
 return gval.getTime(date);
return gval.toDateTime ( ) ; }
return gval. toJD ( ) ; } }
 return Calendar (gval).getTime();
 return (Date)gval.clone();gval.getTime();
 return (Calendar)date.gval.getTime();
 return new Date(gval)date.getTime();
 return (Date) gval; return gval.getTime();
 return (Date)gval.getDate(),gval.getTime();
return gval. toString ( ) ; }
return gval.getTime() ; } return ( Date ) date. clone();
return gval.getTime() ; } return ( Date ) date ; } ;
 return gval.getDate();
 return gval. getTime(); return gval. getTime(); return gval. getTime(); return null; }
 return Date (gval).getTime();
return gval.getTime( ). getTime ( ) - field ; }
 return gval.getTime(); } else {
 return gval. toDate ( field );
 gval.setTime(gval.time);
return gval.toDate ( ) ; return null ;
 return gval.getTime(); }
 if (date == null) {
 return gval.getTime(field);
 return (Date) gval.clone()*.getTime();
return gval.getTime ( ) - 1 ; }
 return Date gval.getTime();
 return (Calendar)date.clone;
 return gval. getTime(); } else { Date gval = Calendar. getInstance ( date ) ; }
 return gval.date();
 return (Calendar) gval.__getTime();
return gval.getTime( ). toDate ( ) ; } }
 return new Date(gval, truncate);
 return ( Date ) gval.get-getTime();
return gval.getTime ( ) ; } return null ; return null ;
 return gval. getTime(); } else { gval = Calendar. getInstance ( ) ; } }
return gval.getTime ( ) + field * 365 ;
 return gval(field);
 return date.toDate());
 return gval. toISO8601();
return gval.getTime( ) ; } return ( Date ) null ; }
return gval.getTime ( ) + field * 1000 ;
 if (gval) {
 gval.setTime(gval.getTime();)
 date = (Calendar)gval.getTime();
 return gval.now();
 return gval.toISO8601(););
return gval.getTime() ; } return ( Date ) date ; } }
 return (Date) gval.year;
 return (Date)gval.getTime().gval.getTime();
 return gval ; } ;
 date=gval.getTime();
 gval.setTime(gval, date);
 return new Date(gval;
 return gval.getTime;
 return Date.from(date);
 Date.getInstance()gval.getTime();
 gval.setTime(gval.getTime(););
return gval.getTime ( ) ; } return null ; } } ;
 return gval. getTime(); } else { gval = Calendar. getInstance ( date, field ) }
 return gval. getTime(); if (reverse) {
 return + gval.getTime();
return gval.now();
 return (Date)date);
 return (Date)gval.clone().gval.getTime();
return gval. getTime ; }
 return (Date)date.clone()gval.getTime();
 return gval.getTime(); } else
 return gval.time();
return gval.getTime(). toDate ( ) ; return null ;
 gval.setTime(gval.value);
 return (Date|Null)gval.getTime();
 return (Time) gval.getTime();
 return (Date)gval.getTime()gval.getTime();
 return Calendar.today;
 return gval.date;
 return Date(date);
 return modify(date);
return gval.getTime(). toDate ( ) ; } } ;
 return (Date|Time)gval.getTime();
 return (DateTime)gval.getTime();
 return (Calendar)date.clone()gval.getTime();
 return gval.getTime(); *
 return gval + date;
 return ;
 return new Date ( gval ) ; };
 return Gval.getTime();
return gval.getTime() - ( int ) field ;
return gval.getTime ( ) * field ;
 return gval.toDate();
 gval.setTime(gval.getTime()); *
 return this);
return gval.getTime ( ) - date ;
 return (Calendar)date.getTime();
 return (Calendar) gval.date.getTime();
 return - gval.getTime();
return gval.getTime() - ( int ) field ; } }
return gval ; } return null ; }
 return (Date)gval.getDate()gval.getTime();
 gval.setTime(gval.time());
 return (Calendar) gval.next.getTime();
 return Date.now();
 return gval.getTime(); } }
return gval.getTime( ) ; return null ; }
 return Date.now(date);
return gval.getTime( field ) ; }
 gval.setTime(gval.getTime();
return gval.getTime ( ) ; } } ;
 return (Date) gval();
 return null ;
 return (Date) gval2.getTime();
return gval.getTime( ). getTime ( ) - 1 ;
return gval.getTime( ) ; } return null ; } }
 return (Gval.getTime();
 return gval.getTimeInDays();
 return Date.NOW;
 return Calendar.now;
 gval.setTime(gval.value());
 return new gval;
 return get(field);
 Date.getInstance()=gval.getTime();
 gval.setTime(gval); *
return gval.getTime() + field + ' ' ;
 return self();
 gval.setTime(gval, field); *
return gval ; return null ;
 return Gval ; }
return gval.getTime() - 1900 ; }
 Date.getInstance();gval.getTime();
return gval.getTime() - date. getTime(); *
 gval.setTime(gval, field); }
 gval.setTime(gval); }
 return gval.getTime());
 return gval();
 gval = null;
return gval.getTime() + field; *
 return gval(null);
return gval.getTimeInstance ( ) ;
return gval.getTime(date, field); *
return gval.getTime() - 1 ;
return gval.getTime() - date.time();
return gval.getTime( ) - date. getTime());
 return new Date ( )
return gval.getTime(field); *
 gval.clear();
 Date formattedDate=gval.getTime();
 return ()gval.getTime();
 return calendar.clone();
 return Calendar(gval.getTime();
 return & gval ;
return gval ; return date ;
return gval.toDate(field); *
return gval.getTime() + field + " " ;
 return gval; }
 return new Date(_);
 Date.getInstance=gval.getTime();
 return truncate();
 return getTime();
return gval.getTime( field, false); *
 return val.getTime();
return gval.newDate();
 Date newDate=gval.getTime();
return gval.getTime(); return date ;
 * returngval.getTime();
return gval.getTime() - (int) field
 return gval.year();
 return gval.ungetTime();
 return gval.date;
return gval.getTimeUTC ( ) ;
return gval.getTime() + field * 7 ;
 Date.today(gval.getTime();
 Date.now()gval.getTime();
 return calendar.getTime();
return gval.date();
 return cal.clone();
 return Date.gval.getTime();
 return date.gval.getTime();
 return this ;
 return today();
 * return *gval.getTime();
 return copy();
 return gval; *
 return Date()gval.getTime();
return gval.getTime(date); *
 return getInstance();
 return gval.add();
 return null
return gval. time ;
 return null);
 return date();
 return cal.getTime();
 if (debug)
 return *gval.getTime();
 return gval(); }
return gval.getTime(null);
 if (modified)
return gval.getDate();
 return Date.getTime();
 date.getTime();
 return Date
return gval.getTime(0);
return gval.getTime() * *
return gval.clone(); *
 * return date;
 return (date);
 * return date.getTime();
return gval.getTime(); return date
 Date=gval.getTime();
 return gval().getTime();
 * *
 } return date ;
 return Gval ;
 return this.getTime();
 Date.getTime();
 * } *
 * return null;
return gval.getTime() + field
 * return this;
 * * *
return gval.getTimezone();
return gval.getTime()); *
 return today;
 return result;
 * * }
return  null ; }
 * gval.getTime();
 * return calendar.getTime();
 * return today;
 * }
return gval ; return
return gval; *
 } *
 *
return gval(); }
