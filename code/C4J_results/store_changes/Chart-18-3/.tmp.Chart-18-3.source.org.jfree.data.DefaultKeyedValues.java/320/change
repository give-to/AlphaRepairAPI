 }
 else { rebuildIndex(); } }
 else { rebuildIndex(); }
 else { removeValue(index); } }
 else { rebuildIndex ( index ) ; }
 else { rebuildIndex ( index ) ;
 else { rebuildIndex(); } this. indexMap = null ;
 else if ( index > this. values. size()) { rebuildIndex(); } else { rebuildIndex(); } }
 else { rebuildIndex ( index ) ; } }
 else { rebuildIndex(); } this. indexMap. remove ( index ) ;
 else { this.indexMap. remove ( index ) ; } this.indexMap. remove ( index ) ;
 else { this.indexMap. remove ( index ) ; } this.indexMap. remove ( index ) ; }
 else { removeValue(index); rebuildIndex();
 else { rebuildIndex(); } else { removeValue(index); } }
 else { removeValue(index); }
 else { rebuildIndex(); } else { removeValue(index); }
 else { return ; }
 else { rebuildIndex(); } this. indexMap. clear ( ) ;
 else if ( index > 0 ) { rebuildIndex(); } else if ( index < 0 ) { rebuildIndex(); } }
 else if ( index > 0 ) { rebuildIndex(); } else if ( index < 0 ) { rebuildIndex(); }
 else { rebuildIndex(); } if ( index > 0 ) { rebuildIndex(); }
 else { removeValue(index); } if ( index > 0 ) { rebuildIndex(); }
 else if ( index > 0 ) { rebuildIndex ( index ) ; } else { rebuildIndex ( index ) ; }
 else { removeValue(index); } this. indexMap = null ;
 else { rebuildIndex(); } if ( index > 0 ) { return ;
 else { removeValue(index); } this. indexMap. clear ( ) ;
 else if ( index > 0 ) { rebuildIndex(); } else if ( index < 0 ) { rebuildIndex();
 else { rebuildIndex ( index ) ; } } }
 else { this.indexMap. remove ( index ) ; } this.indexMap. clear ( ) ;
 else { rebuildIndex(); } } }
 else { removeValue(index); } if ( index > 0 ) { rebuildIndex(); } }
 else if ( index > 0 ) { this. indexMap. remove ( index ) ; } else { rebuildIndex(); } }
 else { rebuildIndex(); } this. index = index ;
 if ( index < 0 ) { return ; } removeValue(index); if ( index < 0 ) { rebuildIndex(); } }
 else { this.indexMap. remove ( index ) ; } if ( index > 0 ) { rebuildIndex(); }
 else { rebuildIndex(); } this. indexMap = null
 else { removeValue(index); } if ( index < 0 ) { rebuildIndex(); }
 else if ( index > 0 ) { this. indexMap. remove ( index ) ; } else { rebuildIndex ( ) ;
 return ; }
 else { this.indexMap. remove ( index ) ; } if ( index < 0 ) { rebuildIndex(); } }
 else { removeValue(index); } if ( index > 0 ) { rebuildIndex();
 else { rebuildIndex(); } else { rebuildIndex(); } }
 else if ( index > 0 ) { rebuildIndex(); } else if ( index < 0 ) { rebuildIndex(); } } }
 else { rebuildIndex(); } if ( index < 0 ) { rebuildIndex(); }
 else { this.indexMap. remove ( index ) ; } if ( index > 0 ) { rebuildIndex(); } }
 if ( index < 0 ) { return ; } removeValue(index); if ( index > 0 ) { rebuildIndex(); } }
 else { removeValue(index); } else { removeValue(index); } }
 else if ( index > 0 ) { rebuildIndex ( index ) ; } else { rebuildIndex ( 0 ) ; }
 else { rebuildIndex ( index ) ; } } } ;
 if ( index < 0 ) { return ; } if ( index < 0 ) { return ; } if ( index > 1 ) { return ;
 else { this.indexMap. remove ( index ) ; } } private void rebuildIndex ( ) {
 else if ( index > 0 ) { rebuildIndex(); } else { rebuildIndex(); } }
 else { this.indexMap. remove ( index ) ; } this. values. remove ( ) ;
 else { this.indexMap. remove ( index ) ; } if ( index > 0 ) { rebuildIndex ( ) ;
 else { rebuildIndex(); } if ( index > 0 ) { return ; }
 else { rebuildIndex(); } this. indexMap. clear ( )
 else { if ( index < 0 ) { return ; } removeValue(index); } this. indexMap. clear ( ) ;
 else { rebuildIndex(); } } } ;
 else if ( index > 0 ) { rebuildIndex(); } else if ( index == - 1 ) { rebuildIndex(); }
 else { removeValue(index, index); }
 else { if ( index < 0 ) { return ; } removeValue(index); if ( index > 0 ) { rebuildIndex(); }
 else { return ; } } public void removeValue(Comparable key) { if ( index < 0 ) { return ; } return ;
 else { this.indexMap. remove ( index ) ; } this. indexMap = null ;
 else { removeValue(index); } } }
 else { if ( index < 0 ) { return ; } removeValue(index); if ( index < 0 ) { rebuildIndex(); }
 if ( index < 0 ) { return ; } if ( index < 0 ) { return ; } removeValue(index, index); }
 else { if ( index < this. values. size()) { rebuildIndex(); } } return index ; }
 else { rebuildIndex(); } else { rebuildIndex(); } } } ;
 else { this.indexMap. remove ( index ) ; } } public void rebuildIndex ( ) {
 else { removeValue(index); } if ( index < 0 ) { return ; }
 if ( index < 0 ) { return ; } if ( index < 0 ) { return ; } if ( index > 0 ) { return ;
 else { if ( index < 0 ) { return ; } removeValue ( index ) ; } } }
 else { removeValue(index); } this. indexMap = null
 else if ( index > this. values. size()) { rebuildIndex(); } else { removeIndex(); } }
 else { rebuildIndex(); } else { rebuildIndex(); } } return this ;
 if ( index < 0 ) { return ; } if ( index < 0 ) { return ; } removeValue(index); rebuildIndex(); }
 else { return ; } } public void removeValue(Comparable key) { if ( index < 0 ) { return ; } } ;
 else { rebuildIndex(); } if ( index > 0 ) { rebuildIndex();
 else { if ( index < this. values. size()) { rebuildIndex(); } } } return this ;
 else { this.indexMap. remove ( index ) ; } } public void clear ( ) {
 else { removeValue(index); } } return this ;
 else if ( index > 0 ) { rebuildIndex(); } else { rebuildIndex(); } } } ;
 else { removeValue(index); } } } ;
 else if ( index > 0 ) { rebuildIndex(); } else { rebuildIndex(); } } }
 else if ( index > 0 ) { rebuildIndex(); } else if ( index < 0 ) { return ; }
 else { rebuildIndex ( index ) ; } } return this ;
 else if ( index > 0 ) { rebuildIndex ( index ) ; } } } ;
 else { rebuildIndex(); } else { rebuildIndex(); } } }
 if ( index < 0 ) { return ; } this. indexMap. remove ( index ) ; } else { removeValue ( index ) ;
 else if ( index > 0 ) { rebuildIndex(); } else if ( index < 0 ) { rebuildIndex(); } return ;
 else { if ( index < 0 ) { return ; } removeValue ( index ) ; } } public void clear ( ) {
 else { removeValue(index); } return ; }
 if ( index < 0 ) { return ; } if ( index < 0 ) { return ; } this. indexMap. remove ( index )
 this. indexMap = null ;
 else { if ( index < 0 ) { return ; } removeValue(index); } } public void removeValue ( index ) {
 else if ( index > 0 ) { rebuildIndex ( index ) ; } return ; }
 else { rebuildIndex ( index ) ; } return ; }
 else { this.indexMap. remove ( index ) ; } } return this ; }
 else { rebuildIndex(); } } ;
 else if ( index > 0 ) { rebuildIndex ( index ) ; } } return this ;
 else { rebuildIndex(); } this. values = [ ] ;
 else { if ( index < this. values. size()) { rebuildIndex(); } } } } ) ;
 else { rebuildIndex ( index ) ; } } ;
 else { if ( index < 0 ) { return ; } removeValue(index); } this. indexMap. remove ( index);
 else { rebuildIndex(); } return ; }
 else { if ( index < this. values. size()) { rebuildIndex(); } } } } } ;
 else { rebuildIndex(); } else { rebuildIndex(); } } return this ; }
 else { removeValue(index); } if ( index > 0 ) { rebuildIndex ; }
 else { rebuildIndex(); } else { rebuildIndex(); } } } ) ;
 }
 else { rebuildIndex ( index ) ; } } } ) ;
 else { rebuildIndex ( ) ;
 } return this ;
 return index ; }
 } } ;
 this. index = index ;
 this. indexMap = null
 } }
 else { rebuildValue(); } }
 else { return ; } }
 return ; } }
 else { return ;
 } ;
 } return this ; }
 else { rebuildIndex() } }
 } return this ; }
 this. remove ( ) ;
 } } ) ; }
 this. indexMap ;
 } } ) ;
 return ; } } ;
 } } ) ;
 } } } ; }
 return this ;
 } } ; }
 } return ; }
 else { } } }
 } } ;
 return index ;
 } } } ;
 return ; }
 } else {
 return ; } } }
 return ;
 } ) ;
 return ; } }
 } ;
 } } }
 } }
 } else
 return
