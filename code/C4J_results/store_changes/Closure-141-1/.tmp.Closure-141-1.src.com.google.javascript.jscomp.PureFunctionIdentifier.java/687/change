 status.add("complex");
 status.add"complex");
 status.add("unknown");
 status.add("unknown);
 status.add("unknown"); status.add("complex");
 status.add("unknown;
status.add(unknown);
status.add(taintsUnknown);
 status.add("unknown"); } status.add("complex");
 status.add("unknown"); status.add"complex");
 status.add("unknown"); }
 status.add("unknown").add("complex");
 status.add("");
 status.("complex");
 status.add("unknown"); status.add(""complex");
 return "";
 status.add("unknown"); } else { status.add("complex");
status.add("complex" side effects");
 status.add("unknown")("complex");
 status +="complex");
 status.add("unknown"); } if (complex) {
 status.add("unknown");
status.add("complex" side effects"); status.add("unknown");
 status.clear();
 status.add("non"complex");
 status.add(");
 status.add("unknown"=>"complex");
 status.add("unknown"); } else {
 status.add("unknown:\"complex");
 status.clear;
 status.add(""complex");
 status.add("unknown"); } return status;
 status(unknown);
status.add("complex") } else { status.add("unknown");
 status.add("complex" side effects;
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else {
 status.add("complex side effects");
 status.add("unknown", u"complex");
 status.add("unknown"); } else if (taintsUnknown) { status.add("unknown"); } else if (complexFunction) {
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else
 status.add("unknown"); } else if (taintsUnknown) { status.add("unknown"); } else if (complex) {
 status.add(";
 if (!complex) {
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else if (complex) {
status.add("complex") } else { status.add("");
 status.add("unknown") }
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else if (!complex)
 status.add("unknown"); return "";
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); }
 status.add("unknown"); } else if (complexFunction) {
 status.add("unknown"); } if (!complex) {
 status.addAll("complex");
 status.add("unknown"); } else if (taintsComplex) { taintsComplex =
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else if (!complex) {
 status.remove();
 status.add("unknown") status.add"complex");
 status.add("unknown"); } if (complexFunction) {
 status.add("unknown") status.add("complex");
 status.add("unknown"); Status.add"complex");
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else if (complex)
 if (complexFunction) {
 status.remove(");
status.add(unknown"); } else { status.add("");
 if (complex) {
 status.add("Unknown").add("complex");
 status.add("unknown"); } else if (taintsUnknown) { status.add("unknown"); } if (complex) {
 status.add("unknown"");
 status.add("unknown"); } else if (taintsUnknown) { status.add("unknown"); } else if (complex)
 status.add("complex " + taintsUnknown);
 status.add("unknown"); } else if (taintsComplex) { status.add("complex");
 status.add("unknown"); } else if (complex) {
 status.add("unknown"); } if (taintsComplex) { taintsComplex =
 status.add("unknown"); break;
 status.add("Unknown"); status.add("complex");
 status.add("unknown"); } else if (taintsUnknown) { status.add("taintsUnknown"); } else {
 status.add("unknown"); } else { print("complex");
 status.add("unknown".."complex");
 status.add("unknown") } status.add("complex");
 if (complex) { status.add("complex");
 status.add("unknown"); } else if (taintsComplex) { taintsUnknown =
 status.add("unknown"); } else if (taintsUnknown) { status.add("unknown");
 status.add("unknown"); } else if (taintsUnknown) { status.add("unknown"); }
status.add(taintsUnknown[0]);
 status.add("unknown"); } else if (complexSideEffects) {
 status.add("unknown"); } else if (taintsComplex) { taintsComplex &&
 status.add("unknown"); } if (taintsComplex) { taintsUnknown =
 status.add(unknown"); status.add(""complex");
 status.add("unknown"); } else if (taintsUnknown) { status.add("unknown"); } else {
 status.remove("");
status.add("complex") } else { status.add();
 status.add("unknown"); } else if (taintsComplex) { status.add("Complex"); } else
 status.add("unknown"|"complex");
 status.add("unknown"); } else if (taintsComplexSideEffects) {
 status.add().add("complex");
 status.add("unknown.");
status.add(null); status.add("unknown");
 status.add("unknown"); } else if (taintsComplex) { status.add("Complex"); }
 status.add("unknown"); } else if (canBeComplex) { status.add("complex"); }
 status.add("unknown"); } else if (taintsComplex) { taintsComplex } {
 status.add("complex"); } else { status.add("complex");
 status.add("unknown"); } return "";
 status.add("unknown"); } else if (taintsComplex) {
 status.add("unknown") } if (complex) {
 status.add("unknown|"complex");
 status.add("unknown" :"complex");
 status.add(unknown"); status.add("complex");
 status.add("unknown"); return null;
 status.add("Unknown"); } status.add("complex");
 status.add("unknown"); } else if (taintsUnknown) { taintsUnknown =
 status.add("unknown"); } else if (notComplex) { status.add("unknown"); }
 status.addAll;
 status.add("simplex side effects");
 status.add("unknown"); } else if (taintsComplex) { if (!complex) {
 status.add("unknown"); continue;
 status.add("unknown"); } else if (taintsUnknown) { status.add("taintsUnknown"); } else
 status.add("unknown"); } else if (taintsComplex) { status.add("complex") }
 return("complex");
 status.add("unknown"); }
 status.add("unknown"); } else if (taintsComplex) { if (complex) {
 status.add("modifies this side effects);
status.add("complex" side effects"); status.add("");
 status.remove().add("complex");
 status.add("unknown").append("complex");
 if (!complex) status.add("complex");
 status.addUnknown;
 status.add("unknown"); } else if (taintsComplex) { taintsComplex =!
 status.add("unknown"); } else { return("complex");
status.add(unknown");
 status.add("unexpected");
 if (!complex) { status.add("complex");
 status.add("unknown"); } if (taintsComplex) { taintsComplex &&
 status.add("unknown"); if (complexFunction) {
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else if complex {
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); else
 status.clear(); status.add("complex");
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else if (...)
 status.add("unknown"); } else if (complex)
 status.add("unknown"); } if (taintsUnknown) { taintsUnknown =
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else if (!null
status.add(unknown); status.add("unknown");
status.add("complex" side effects"); status.add("unknown"");
 status.add("taintsUnknown);
status.add("unknown"); } else { status.add();
 if (!complex)
 status.add("complex" side effect(s);
 status.add("unknown"); } else { return;
 status.add("unknown").remove("complex");
 status.add("unknown"); status.sort();
 status.add("unknown"); } else status.add("complex");
 status.add("unknown"); } return null;
 status.add("unknown"); } else if (!complex) {
 status.add("simplex side effects);
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else if {
 status.add("unknown"); } if (taintsComplexSideEffects) {
status.add("complex"); } else { status.add();
 status.add("complexUnknown);
 status.add("unknown!");
 status.add("unknown"); } if (taintsUnknown) { taintsUnknown } {
 status.add("simplexSideEffects");
status.add("complex" side effects. " + toString());
status.add(unknown); } else { status.add("");
 status.add("unknown") } else { status.add("complex");
 status.add("unknown"); } else if (taintsUnknown) { taintsUnknown } {
 status.add(); status.add("complex");
 status.add("unusedUnknown);
 status.add("unknown"); } else if (taintsUnknown) { if (complex) {
 status.contain("complex");
 status.add("modifies unknown"); } status.add("complex");
 status.add("unknown"); } else if (allowComplex) {
status.add("complex" side effects"); status.add("Unknown");
 status.add("unhandled side effects);
 return ""
 status.contains("complex");
 if (complexity) {
 status.add("unhandled");
status.add("unknown"); } else { status.clear();
 status.add("unexpected unknown");
status.add(taintsUnknownState);
status.add("complex") { status.add("unknown");
 status.add("modifies this side effect);
 status.add("unknown"); exit;
 status.add("complex") } return "";
 status.add("unknown"); } else if (notComplex) {
status.add("complex") { status.add("unknown") }
 status.remove(); status.add("complex");
 taintsUnknown =
 status.add("unknown"); } break;
 status.add("unknown"),("complex");
 status.add("unknown"); } else if (taintscomplex) {
 status.add("unknown"); print("complex");
status.add("complex") } else { status.add("unknown"); }
 status.add("unhandled exception");
 status.add("complex"); } return status;
status.add(unknown"); } else { status.add();
 status.add("unknown"); } if (complexSideEffects) {
 status.add("unknown::"complex");
 status.add("unknown"); else status.add("complex");
 status.addAll(\"complex");
status.add("complex") { status.add("modifies unknown"); }
 status.add("simplexSide");
status.add(taintsUnknown); }
status.add("complex" side effects"); status.add("unknown"); }
 status.add("Unknown;
 status.add("unknown"); } if (complex)
 status.add("unknown").addAll("complex");
 if (complexSideEffects) {
 status.add("unknown"); } else if (complexCall) {
 status.add("unknown"); } else if (!complexFunction) {
status.add("unknown"); } else { status = "" ;
 status.add("unknown"); } else if (taintsComplexSide) {
 status.add("unknown") }
 status.add("unknown"); } else if (taintsComplex) { status.add("complex"); } else { return
status.add("complex" side effects"); Status.add("unknown");
status.add("complex" side effects"); status.add("unknown") }
 status.remove;
 taintsUnknown } {
 status.add("unknown"); } else if (taintsComplexity) {
 status.add("unknown"); } if (taintsComplex) { taintscomplex =
status.add(taintsUnknown[-1]);
 status.add("simplexSideEffects);
 status.addUnknown();
 status.add("unknown").addTag("complex");
 status.add("Unknown")("complex");
 status.add();
 status.add("unnamed unknown");
status.add("complex") } else { status.add("")
 status.add("unknown"); } else if (pureFunction) {
 status.add("unknown"); } else if (taintComplex) {
status.add("complex") } else { status.add("unknown") }
 status.add("unknown"); } if (taintsUnknown) { taintsUnknown =!
status.add("complex" side effects" unknown");
 status.add("unknown"));
 status.add("unknown+"complex");
status.add("unknown"); } if ( invariant )
status.add(unknown"); } else { status = "" ;
 status.addAsString("complex");
 status.add("complex" side effects"); }
 status.add("modifies unknown.");
 status.add("unexpectedUnknown);
status.add("complex" side effects"); status.sort() ;
 status.add("unknown"); } if (!complex)
status.add("unknown"); } else { return "" ;
 status.add("unknown"; }
 status.add("unknown", type="complex");
 status.add("complex" side effects"");
status.add(taintsUnknownNode);
status.add("complex") { status.add("unknown"); }
 status.sort();
 status.add("unhandled"); } status.add("complex");
 status.add("complex" side effect(?));
status.add("complex") } else { status.add("";
status.add(unknown"); } else { status.add("";
 status.add("")
status.add("complex") { status.add("modifies unknown") }
 status.add(null),("complex");
status.add(taintsUnknown, functionThrows);
status.add(taintsUnknown.size ( ));
 status.add("unknown")*.add("complex");
status.add(unknown"); } else { status.remove("");
status.add("complex" side effects"); status.removeAll();
status.add("complex") } else { status.add("Unknown");
 status.add("complex" side-effects);
 status.add("unknown",("complex");
status.add("complex" side effects" error");
status.add(taintsUnknown.name);
status.add("complex" side effects" not tracked");
 status.add("unknown"); } if (complexCall) {
 status.add("complex"); } else status.add("complex");
 status.add("modifies unknown!");
 status.add("known"); status.add("complex");
 status.add("unknown"); } else
 status.addAllOf("complex");
 status.add("unknown"); } else if (isComplexSideEffects()) {
 status.add("unknown"); status.clear();
 status.add("complex" side effect(...));
 status.add("Unknown:\"complex");
 status.add("unhandled!");
 status.add("unnamed");
 status.add("unknown"); } else if (allowComplexSide) {
 status.add("unknown"; }
 status.add("unknown"); } else { continue;
status.add(null); status.add("unknown"); }
 status.add("complex"); } status.add("complex");
status.add(taintsUnknown.toString);
 return null;
status += ",
 taintsUnknown.add("complex");
 status.add("unknown"); } if (taintsUnknown) { taintsUnknown &&
 status(null);
 status.add("unknown"); } else if complex {
 status.add("complex" side effects. unknown);
 status.add("unknown"); } else { break;
 status.sort(); status.add("complex");
 status.add("unknown"); } else if (allowComplexity) {
 status.add("unknown") } else {
 status.add("unknown");;
 status.add("");
 status.add("modifies unknown"); }
status.add("complex") } else { status.remove();
status.add(unknown); status.add(unknown);
 status.add("unknown"); +
 status.add(status.add("complex");
 status.add("";
status.add("complex" side effects"); status.sort(); }
status.add(unknowns);
status.add(taintsUnknown, taintsUnknown);
 status.add("Unknown");
 status.add("complex" side effect unknown);
 status.add("modifiesUnknown"); } status.add("complex");
 status.add("modifies " + unknown);
 status.add("unknown"; } status.add("complex");
status.add("complex") } else { status.add("noUnknown");
 status.add("Unknown");
status.add(unknown); status.add("unknown"); }
status.add("unknown"); } else { return null;
 status.add("unknown"; status.add("complex");
 status.add.add("complex");
 status.add("unknown""); } else {
status.add("complex") { status.add("complexUnknown"); }
 status.add("unknown".add("complex");
 status.add("unknown"); } } else {
 if (complexSide) {
 if (!null status.add("complex");
status.add(null); status.add(unknown);
status.add(taintsUnknown.size(?));
status.add("complex") } else { status.add("unknown")
 status.add("Unknown"); } else {
status.add("complex") } else { status.clear();
 status.addIfMissing("complex");
 status.add("unknown", type+"complex");
 status.add("complex" side effect"); }
 status.add("complex" side effects") }
 status.add("complex" side effects);
 status.addAndadd("complex");
status.add(taintsUnknown, invariant);
 status.empty();
status.add(taintsUnknown.value);
 status.addTaint("complex");
status.add(unknown"); } else { return "" ;
 status.clear(");
 status.addTainted("complex");
status.add(null); status.add("unknown") }
 status.sort(_);
 if (complex)
 status.sort().add("complex");
 status.add("unknown") } else status.add("complex");
 status.addAll().add("complex");
 status.add("unknown"); } else, {
 status.(unknown);
 status.add("Unknown);
 status.separate().add("complex");
 status.add("unknown") } if (complex)
 status.add("unknown"); } else if (taintsComplex) { return
status.add(taintsUnknown.status);
 status.add("unknown"; } else {
status.add("complex" side effects" are unknown");
status.add("complex" side effects" unknown"");
 status.add(unknown).add("complex");
 status.addAll.add("complex");
status.add(taintsUnknownString);
 status.add("unknown" } else {
status.add(taintsErrors);
status.add("complex") } else { status.sort();
 status.add("complex"); status.add("complex");
 status.add("unknown" } else status.add("complex");
status.add("complex") } else { return "" ;
 taintsUnknown &&
status.add("complex" side effects" error);
status.add(unknownFunction);
status.add(taintsUnknown.length);
status.add("complex" side effects" in this function");
 status.add "unknown;
 status.empty;
 status.add(unknown;
status.add(unexpectedUnknown);
status.add(tuntsUnknown);
status.add(taintsUnknownName);
status.add(taintsUnknown.nodeName);
status.add(unhandledException);
status.add(taintsUnknown.toString());
status.add(taintsUnknown.data);
 status.add);
status.add("complex" side effects"); if (!trace)
status += "
 status.fallback.add("complex");
status.add(taintsGlobalState);
status.add("complex") } if ( invariant )
status.add(unusedUnknown);
 final status.add("complex");
 status.remove);
 return status.join("complex");
status.add(taintsUnknown).length();
status.add("complex" side effects" in the function");
 continue;
status += ""
status.add("complex") } else { return null;
status.add("complex") if (!complex)
status.add(null); status.add("");
 status.add("unknown") } else
status.add("complex" side effects" unknown);
 status.add("Unknown"); } else status.add("complex");
status.add("complex" side effects"); if (unknown)
status.add("complex") } else { status.add("Unknown")
status.add("complex" side effects" error');
status.add("complex") } if (status)
status.add(tuntsUnknown); }
status.add("complex") } else { status += "
status.add(unknownState);
 status.add(\"complex");
 if (!unknown status.add("complex");
 status.add("complex side effects")
 status.add("null");
 status.add("Unknown"); } else
 status.add;
 status = null;
.add("complex");
 status.add("unknown")
 status.add("unknown"); } else { *
status.add("complex") } else { return ""
status.add("complex") if (unknown)
 break;
 status.removeAll("complex");
status.add("complex" side effects" unknown"); }
 status.add("unknown"); } +
 return null);
 return;
 status.traceback.add("complex");
 return "Unknown status.add("complex");
status = null
status.add("complex") if (complex)
status.add(taintsUnknown"); }
status.add(taintsUnknown).length++;
 return null
status.add(unknownNode);
status.add(null); status.sort() ;
status.add("complex" side effect");
 status.add({"complex");
status.add(unknowns");
status.add(null); status.sort(); }
 } else {
 status.add("null);
status.add("complex") } else { break;
status.add("complex" "unknown");
status.add("complex") } if (trace)
 #complex case
status.add(unknownState");
status.add(taintsUnknown).length;
status.add("complex") if(unknown);
 return "");
 return ();
status -= [];
 secretTaints.add("complex");
 status +=("complex");
 (!unknown);
status.add(taintsUnknown).length());
status.add("complex" ; }
 clear ();
 constrainStatus.add("complex");
 return status.add("complex");
 invariant.add("complex");
status.add(taintsUnknown); } }
 status.missing.add("complex");
 print("complex");
 status.extra.add("complex");
 # Complex case
 return "+"complex");
status.add(unknownCall);
 if complex {
 #complex effects
 unknown =
status.add(Unknown);
 finalStatus.add("complex");
status.add("complex""); }
 debug("complex");
 return '';
status.add("complex") if unknown;
 status("complex");
 status="complex");
 return undefined;
 return false;
 Status.("complex");
...
status.add(Unknown");
status.add(...)
 status.remove"complex");
 status.remove("complex");
 Status.add"complex");
status.add(unknown');
status.add("complex") if any;
status.add("complex") if unknown?
status.add("complex") if (...)
status.add("complex") if not tracked
 } else
 unknown?
 status.push("complex");
 const status.add("complex");
 fallback.add("complex");
 unknown &&
 unknown:
 fallbacks.add("complex");
 log("complex");
 warn("complex");
 return
 constStatus.add("complex");
 }
status.add("complex") ; }
status.add("complex") } }
 {
status.add("complex") } else
 stat.add("complex");
 state.add("complex");
 Status.add("complex");
 delete
status.add(null);
status.add(this);
status.add(known);
