if (hasSideEffects) {
if (!hasSideEffects) {
if (!hasSideEffects)
if (hasSideEffects)
if (hasSideEffectsCall) {
if (!hasSideEffects && callNode.isNoSideEffectsCall) {
if (!hasSideEffects && callNode.isNoSideEffectsCall()) {
if (!hasSideEffects
 if (hasSideEffects
 if (hasEffects){
if (!hasSideEffects || callNode.isNoSideEffectsCall) {
if (!hasSideEffects || callNode.isNoSideEffectsCall()) {
if  (hasSideEffects == true) {
 else { if (hasSideEffects) {
if (!hasSideEffects) { continue; }
 if (sideEffects) {
if  (hasSideEffects == false) {
 } private void markNoSideEffectsCall() {
if (callNode.isNoSideEffectsCall) {
 } private void markNoSideEffects() {
 } if (hasSideEffectsCall) {
if (!isNoSideEffectsCall(callNode)) {
 } if (hasSideEffects) {
if (isNoSideEffectsCall!= null) {
if (hasSideEffects) { if (callNode)
 else { if (hasSideEffects)
if (!hasSideEffects && callNode.isPure()) {
if (isNoSideEffectsCall(callNode) {
if (!hasSideEffects || callNode.isPure()) {
if (!hasSideEffects)  { if (isNoSideEffectsCall) {
if (!hasSideEffects) { if (isNoSideEffectsCall)
if (!hasSideEffects && callNode.mayBeNoSideEffectsCall()) {
 } if (hasSideEffects)
if  (hasSideEffects!= false) {
if (isNoSideEffectsCall) {
 } public void markNoSideEffectsCall() {
if (!hasSideEffects) { break; }
if (!hasSideEffects && callNode.mayBeNoSideEffectsCall) {
if (!hasSideEffects || (callNode.isNoSideEffectsCall()) {
if (isNoSideEffects!= null) {
if (!isNoSideEffectsCall) {
if (!hasSideEffects && callNode.mayBeSideEffectsCall) {
 } else { callNode = allFunctionCalls. getFirstChild ( ) ;
if (!hasSideEffects && callNode.mayBePure()) {
 } if (hasSideEffects == true) {
if  (hasSideEffects === true) {
if (!hasSideEffects && callNode.mayHaveSideEffects()) {
if (!hasSideEffects && callNode.hasIsNoSideEffectsCall()) {
 } else { if (hasSideEffects) {
 } if (hasSideEffects == false){
if (!hasSideEffects && callNode.isNoSideEffectsCall(false) {
 if (hasSideEffectsCall()){
 else if (hasSideEffects){
if (isNoSideEffectsCall(callNode)) {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } private void markNoSideEffectsCall() {
 } else { if (hasSideEffects)
if (!hasSideEffects && callNode.isNoSideEffectsCall(true) {
if (!hasSideEffects) { if (callNode)
 if (has){
 if (hasSideEffects!== false){
 } else { callNode = allFunctionCalls [ 0 ] ;
 } else { if (isNoSideEffectsCall) {
if (!hasSideEffects && callNode.isSideEffectsCall) {
 } public void markNoSideEffects() {
if (!hasSideEffects) { if (callNode!= null)
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } } private void markNoSideEffectsCall() {
 else { hasSideEffects = true ; break ; }
if (!hasSideEffects || callNode.mayBePure()) {
if (!hasSideEffects) { return; }
if (!hasSideEffects && callNode.mayHaveNoSideEffectsCall) {
if (!hasSideEffects &&!isNoSideEffectsCall) {
if (!hasSideEffects && callNode.isNoSideEffectsCall(null) {
if (!hasSideEffects) { if (callNode) {
 else { hasSideEffects = true ;
if (!hasSideEffects || callNode.mayBeSideEffectsCall) {
 else if (hasSideEffects)
if (!hasSideEffects && functionInfo.isNoSideEffectsCall()) {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } private void markNoSideEffects() {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } public void markNoSideEffectsCall() {
 else { hasSideEffects =
if (!hasSideEffects || callNode.mayHaveSideEffects()) {
 } private void markNoSideEffects ( CallNode ) {
 } else { callNode = allFunctionCalls. getFirst ( ) ;
if (!hasSideEffects || callNode.hasIsNoSideEffectsCall()) {
 else { hasSideEffects = false ; break ; }
 } if (isNoSideEffectsCall!= null) {
if (!hasSideEffects || callNode.mayBeNoSideEffectsCall) {
if (!hasSideEffects || callNode.isNoSideEffectsCall(false) {
 else { callNode = allFunctionCalls. getFirstChild ( ) ; }
if (!hasSideEffects || callNode.mayBeNoSideEffectsCall()) {
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } if (callNode) {
if  hasSideEffects
 } if (isNoSideEffectsCall) {
 if (hasSideEffects === false){
 } if (hasEffects){
 } } private void markNoSideEffectsCall() {
 else { if (hasSideEffects == false) {
 } private void markNoSideEffects ( Node callNode ) {
 } else { callNode = allFunctionCalls. next ( ) ;
if (!hasSideEffects) { callNode.setIsPure();
 } else { callNode = allFunctionCalls. pop ( ) ;
 } else { if (hasSideEffectsCall) {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } if ( callNode!= null ) {
if (!has)
if (!hasSideEffects || (callNode.isNoSideEffectsCall) {
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } } private void markNoSideEffects() {
 if (hasSideEffectsCall)){
if (!hasSideEffects && functionInfo.isNoSideEffectsCall) {
 } else { callNode = allFunctionCalls. remove ( 0 ) ;
 } else { callNode = allFunctionCalls. get ( 0 ) ; } if (callNode) {
if  (hasSideEffects && callNode) {
if (!hasSideEffects) { return false; }
if (!hasSideEffects) { callNode.setIsPure(); }
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } else { callNode = allFunctionCalls ; }
if (!hasSideEffects || callNode.isSideEffectsCall) {
if  (hasSideEffects) { if (true)
if (!hasSideEffects || callNode.isNoSideEffectsCall(true) {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } private void markNoSideEffects ( CallNode ) {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } private void markNoSideEffectsCall(callNode){
 } if (hasSideEffects!== false){
if  (hasSideEffects) { if (!pure)
 else if (hasSideEffectsCall){
 } else { callNode = allFunctionCalls. getFirstChild ( ) ; }
if (!hasSideEffects) { } else {
 } private void markNoSideEffectsCall ( callNode ) {
 else if (hasSideEffects == false){
 else { hasSideEffects =!
 else { callNode. setIsPure ( false ) ;
 } if (isNoSideEffects!= null) {
 } else { if (hasSideEffects == false) {
if (!hasSideEffects ||!isNoSideEffectsCall) {
 else { callNode = allFunctionCalls. getFirstChild ( ) ;
 } } private void markNoSideEffects() {
if (!hasSideEffects)  { if (isNoSideEffectsCall()) {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } if ( callNode instanceof CallNode ) {
 } else { callNode = allFunctionCalls. get ( 0 ) ;
if (!hasSideEffects) { if (isNoSideEffectsCall())
if (IsNoSideEffectsCall(callNode) {
 } else { callNode = allFunctionCalls. peek ( ) ;
 } } if (hasSideEffectsCall) {
if (!hasSideEffects) { return
 else if (hasSideEffects == true){
 } else { callNode = allFunctionCalls. get ( ). next ( ) ;
 } else { callNode = allFunctionCalls. get ( 0 ) ; } if ( isNoSideEffectsCall ) {
 } private void markNoSideEffectsCall ( CallNode ) {
 } private void markNoSideEffects ( callNode ) {
 } else { callNode = allFunctionCalls. lastChild ;
 } else { callNode = allFunctionCalls. get ( 0 ) ; }
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } private void markNoSideEffectsCall();
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } } private void markNoSideEffectsCall(callNode){
 } private void markNoneSideEffectsCall() {
if (hasSideEffects) { for (Call node)
 else { callNode = allFunctionCalls. get ( 0 ) ; } }
if (hasSideEffects) { for (CallNode)
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } private void markNoSideEffectsCall(callNode)
 } else { callNode = allFunctionCalls. poll ( ) ;
if (hasSideEffects && callNode!= null) {
 } private boolean markNoSideEffectsCall() {
if (IsNoSideEffectsCall!= null) {
 } else { callNode = allFunctionCalls. get ( 0 ). callNode ;
if  (hasEffects)
if (!hasSideEffects && callNode.mayHaveNoSideEffects()) {
 } else { if (hasSideEffects == true) {
 } else { callNode = allFunctionCalls. firstChild ;
 } if (hasSideEffects
if (!hasSideEffects && isNoSideEffectsCall) {
if  (hasSideEffects) { break; }
if (!hasSideEffects || isNoSideEffectsCall) {
 } else if (hasSideEffects == false){
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } private void markPureFunction() {
 } else { callNode = allFunctionCalls. remove ( 0 ) ; }
if  (isNoSideEffectsCall is null) {
if  (hasSideEffects) { } else {
 private void markNoSideEffectsCall() {
if (!hasSideEffects) { continue;
 } private boolean markNoSideEffects() {
if (!hasSideEffects) { if (isPure) {
 } else if (hasSideEffects == true){
 else { callNode. setIsPure ( ) ;
 } else { callNode = allFunctionCalls. remove ( ) ; }
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } private void markPure() {
if (!hasSideEffects)  { callNode.setIsPure(false);
 } else { callNode = allFunctionCalls. get ( 0 ) ; } }
 else { callNode. setIsPure ( true ) ;
 else { if (hasSideEffects == true) {
 } } private void markNoSideEffectsCall(!hasSideEffects) {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } private void markPureCall() {
 } private void markNoSideEffectsCall(!hasSideEffects) {
if (!hasSideEffects ||!isNoSideEffectsCall(def) {
if (!hasSideEffects)  { if (isNoSideEffectsCall() {
 else { if (hasSideEffects
if (!hasSideEffects) { return;
 else { callNode = allFunctionCalls. pop ( ) ;
 else if (isNoSideEffects!= null) {
if (!hasSideEffects && functionInfo.isPure()) {
if (callNode.isNoSideEffects()) {
 } else { callNode = allFunctionCalls. getFirstChild ( ) ; } }
 } if (isNoSideEffects) {
if (!hasSideEffects)  { callNode.setIsPure(true);
 if (callNode!= null &&!hasSideEffects) {
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } } private void markPure() {
if (!isNoSideEffectsCall(callNode))) {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } private void markPureFunctionCall();
 if (isNoSideEffectsCall(def)){
 if (isNoSideEffects) {
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } } private void markPureFunctionCall();
 else { callNode = allFunctionCalls. getFirstChild ( ) ; } }
if (!isNoSideEffectsCall()) {
if (!hasSideEffects &&!isNoSideEffectsCall(def) {
 } private void markPure() {
if  (hasSideEffects) { if (pure)
if (!hasSideEffects || callNode.mayHaveNoSideEffects()) {
if (!hasSideEffects || isNoSideEffectsCall(callNode))) {
 private void markNoSideEffects() {
 if (callNode.isPure()&&hasSideEffects) {
 if (this) {
if (!hasSideEffects && callNode!= null) {
if (!hasSideEffects || isNoSideEffectsCall(def) {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } private void markCall() {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } else
if (!isNoSideEffects) {
if (!hasSideEffects && functionInfo.isPure) {
 } else { callNode = allFunctionCalls. lastChild ; }
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } private void markNoSideEffectsCall() { }
 } else { if (callNode&&!hasSideEffects) {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } private void markNoSideEffectsCall()
 } else { callNode = allFunctionCalls. getFirstChild ( ) ; } } else
 if (callNode!= null && callNode.hasSideEffects) {
if (isNoSideEffects == true) {
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } }
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } public void markNoSideEffectsCall() { }
 } private void markNoSideEffectsCall(Call callNode){
 else if (hasEffects){
 } if (callNode!= null &&!hasSideEffects) {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } else
 } private void markPureFunction() {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } } else
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } } private void markNoSideEffectsCall() { }
 if (callNode!= null) if (hasSideEffects) {
if (!hasSideEffects && functionInfo.mayBePure()) {
 } else if (isNoSideEffects!= null) {
 } private void markNoneEffects() {
 if (callNode!= null && callNode&&!hasSideEffects) {
 if (callNode.isPure() &&!hasSideEffects) {
if (!hasSideEffects || (callNode!= null) {
if (!hasSideEffects) { if (isPure)
if (hasSideEffects!= true) {
 } private void markNoSideEffects() { if(!hasSideEffects) {
if (!hasSideEffects || (isNoSideEffectsCall) {
 } private void markFunctionCall() {
 if (true) {
 } else { callNode = allFunctionCalls. getFirstChild ( ) ; } } }
 else { if (hasSideEffects) break;
 else { callNode. setIsPure ( false ) ; }
if (!hasSideEffects && (callNode!= null) {
if (!hasSideEffects && callNode instanceof Node) {
 else { callNode. setIsNoSideEffectsCall ( true ) ; } } } } else
 } private void markCall() {
 } if (sideEffects){
 } else { callNode = allFunctionCalls. get ( 0 ) ; } } } else
 } private void markPureCall() {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } if ( callNode ) { }
if (!hasSideEffects && defs!= null) {
 } else { callNode = allFunctionCalls. get ( 0 ) ; } else
 } if (callNode&&!hasSideEffects) {
 if (callNode!= null) { if (hasSideEffects) {
 } } private void markNoSideEffectsCallIf(!hasSideEffects) {
if (!hasSideEffects) { if (isNoSideEffects)
if (isNoSideEffects == false) {
if (!hasSideEffects && callNode.isPure(true) {
if (isNoSideEffectsCall == null) {
if (callNode.isSideEffects()) {
 } else{
if (isNoSideEffectsCall == true) {
 } private void markFunction() {
 } private void markNoSideEffectsCallIf(!hasSideEffects) {
 else { if (callNode!= null &&!hasSideEffects) {
if  (has)
if (!hasSideEffects) { if (isPure()) {
if (!hasSideEffects || callNode.isNoSideEffects()) {
if (!hasSideEffects && callNode.isPure(false) {
if (!hasSideEffects || callNode.isFunctionCall) {
 if (isNoSideEffectsCall!= null&&!hasSideEffects) {
if (!isNoSideEffects()) {
if (!hasSideEffects) { if (!isPure) {
if  (hasSideEffects) { if ()
 } else { callNode = allFunctionCalls. get ( 0 ) ; } if ( callNode ) { else
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } } } } else
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } } } else
if  hasSideEffects {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } else { }
 } if (callNode!= null &&!!hasSideEffects) {
if (!hasSideEffects && callNode instanceof Call) {
 } else { callNode = allFunctionCalls. remove ( 0 ) ; } } } } }
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } } } }
 } private void markNoSideEffectsCall() { }
 if (callNode!= null &&!!hasSideEffects) {
 if (has)){
if (!hasSideEffects ||!isNoSideEffectsCall()) {
if (!hasSideEffects || defs == null) {
if (!hasSideEffects) { if (isNoSideEffects())
 if (callNode.isPure(!hasSideEffects) {
if (!hasSideEffects || (callNode == null) {
 if (isNoSideEffectsCall) if(!hasSideEffects) {
if (!hasSideEffects || callNode.isFunction) {
 } } else if (!hasSideEffects) {
 else if (callNode!= null&&!hasSideEffects) {
 } if (callNode!= null&&hasSideEffects) {
if  (hasSideEffects == false) { return
 } else { if (callNode.hasSideEffects) {
 } private void visitFunction() {
 if (callNode &&!hasSideEffects) {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } else { } else
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } } else { }
 if (if hasSideEffects) {
 } else { callNode = allFunctionCalls ; } } else
if (!hasSideEffects &&!isPure) {
 } public void markNoSideEffectsCall() { }
 if (callNode!= null&&hasSideEffects) {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } } } } }
if (!hasSideEffects || (def == null) {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } else { } }
 } else { if (!hasSideEffects) {
 else { if (callNode &&!hasSideEffects) {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } } } } else
 } private void visit() {
if (!hasSideEffects) { callNode = callNode;
 } private boolean markNoSideEffects(); {
 } } else{
 } else { if (callNode!hasSideEffects) {
 } } else { if(!hasSideEffects) {
 if (isPure){
if (!hasSideEffects || callNode.isSideEffects()) {
if (!hasEffects)
 if (callNode.isPure()!hasSideEffects) {
 } private boolean hasSideEffects();
 else { if (callNode.hasSideEffects) {
 else { hasSideEffects = true ; } }
if (!hasSideEffects && callNode.isCallable) {
if (!hasSideEffects && (callNode) {
 else { callNode. setIsNoSideEffectsCall ( false ) ; } } } } } } } }
if (!hasSideEffects || (isPure) {
 } public void visit() {
 } if (callNode.hasSideEffects) {
 if (hasSideEffects)){
if (!hasSideEffects || callNode instanceof Function) {
if  (true)
if (!hasSideEffects && callNode) {
 } private void mark() {
 if (callNode. isPure &&!hasSideEffects) {
if (!hasSideEffects || isNoSideEffectsCall()) {
 else if (callNode &&!hasSideEffects) {
 if (callNode!= null) if(!hasSideEffects) {
 } if (callNode. isFunction()!hasSideEffects) {
 } else if (!hasSideEffects) {
 } private void markNoSideEffectsCall() { else
 if (isNoSideEffectsCall == null ||!hasSideEffects) {
if (!hasSideEffects && isNoSideEffectsCall()) {
 else { if (hasSideEffects) { return
 } private void markNoSideEffectsCalls(!hasSideEffects) {
if (!hasSideEffects || (pure) {
 if (callNode.mayBePure(!hasSideEffects) {
if  (hasSideEffects) { return
if (!hasSideEffects &&!isPureFunction) {
 if (isNoSideEffectsCall).if(!hasSideEffects) {
 } if (callNode.isCall()!hasSideEffects) {
 } } private void markNoSideEffectsCall() { }
 } if (callNode.isCall(!hasSideEffects) {
 } } public void markNoSideEffectsCallIf(!hasSideEffects) {
 } if (callNode &&!!hasSideEffects) {
 } } if(!hasSideEffects) {
 } } } else if (!hasSideEffects) {
 if (hasEffects)){
 } if(!hasSideEffects) {
 if (pure) {
if (!hasSideEffects || (callNode) {
 } if (callNode.isFunction(!hasSideEffects) {
 } private void markNoSideEffectsCallIfFalse(!hasSideEffects) {
 } } private void markNoSideEffectsCall if(!hasSideEffects) {
 if (!) {
if (!hasSideEffects || (def!= null) {
 if (callNode.isFunction(!hasSideEffects) {
 } return ; } } else if(!hasSideEffects) {
 if (isNoSideEffectsCall(!hasSideEffects) {
 } } } else
if (!hasSideEffects && isPure) {
 if (callNode.isCall(!hasSideEffects) {
if  (isSideEffects)
 if (callNode.hasSideEffects) {
 } if (callNode && (!hasSideEffects) {
if (!hasSideEffects) { {
 } if (hasSideEffects) { return
if (!hasSideEffects || isPure) {
 if (isPure) {
if (!hasSideEffects ||!isPureFunction) {
 } } else {
 } } else if (hasSideEffects) {
if (!hasSideEffects) { break; } }
 } else if (hasSideEffects) {
 if (callNode!==hasSideEffects) {
 else { continue ; }
 else { if (this.hasSideEffects) {
if (!hasSideEffects) { if (call node)
 else { if (!hasSideEffects) {
 else if (!hasSideEffects) {
 if () {
if (isHasSideEffects) {
 } } if (hasSideEffects) {
if (!hasSideEffects && isPureFunction) {
if (!hasSideEffects) { }
if (!hasSideEffects)) {
 if (callNode).if(!hasSideEffects) {
 } return ; } else if(!hasSideEffects) {
 } } else
if (!isSideEffects) {
if (!hasSideEffects) { return ; } else {
if (!hasSideEffects || isPureFunction) {
if (!hasSideEffects && pure) {
if (!hasSideEffects) { return false; return
if (!hasSideEffects) { break; } else
if (!hasSideEffects) { continue; } }
if (!hasSideEffects ||!isPure) {
if (!hasSideEffects && node!= null) {
 } } } } else if(!hasSideEffects) {
if (!hasSideEffects && (def!= null) {
 if (effects) {
if  (isSideEffects) {
if  (hasSideEffects) { {
 } } } } else
if  (hasSideEffects) { } }
if (hasNoSideEffects) {
if (!hasSideEffects &&!isPureCall) {
if  (hasSideEffects))
 if (hasSideeffects
if  ()
 } } } }
 } } } } if(!hasSideEffects) {
if (!hasSideEffects || pure) {
 } } } if(!hasSideEffects) {
if (!isSideEffects)
 } else {
if  (hasSideEffects)) { return
 if (callNode.switch(!hasSideEffects) {
 if (callNode).switch(!hasSideEffects) {
if (!hasSideEffects || (callNode exists) {
 } } finally { if(!hasSideEffects) {
 } } } } }
if (hasEffect)
if (!hasSideEffects()) {
if  (pure)
if (asSideEffects) {
 if (this.hasSideEffects) {
 } } } } } else
if  else {
if (!has) {
 if (() {
if (!isPure)
 } else { } else
 else { } } if(!hasSideEffects) {
if  (!)
if (!hasSideEffects || (true) {
 } } }
if (!hasSideEffects())
 if (*) {
if (!pure)
 else { } if(!hasSideEffects) {
if (!hasEffect)
if (!hasSideEffects).
 } else
if  (...)
if (!hasSideEffects || isPureCall) {
if (!empty)
if (!hasSideEffects && (pure) {
 else {
if (this)
 } else { }
if (!hasSideEffects && isPureCall) {
if (debug)
 else { } }
if (!hasSideEffects) break;
if (!hasSideEffects &&!pure) {
 } }
if (!hasSideEffects)  { } }
if (!has())
if (!hasSideEffects || (!pure) {
 if (has())
 } } finally{
if (!debug)
if (!hasSideEffects)) { return
if (!hasSideEffects ||!pure) {
 if (null!hasSideEffects) {
if (!hasSideEffects && (true) {
 }
if (SideEffects) {
 if (has))
if (hasEffect) {
 else { }
 } finally{
 if (!!hasSideEffects) {
if (!hasSideEffects)  return;
if (!hasSideEffects)  continue;
if (hadSideEffects) {
 else { else
 else {
 else { }
 else { }{
 else { else{
 } } }
 else
if (...hasSideEffects) {
 } } else
 if ((!hasSideEffects) {
 while (!hasSideEffects) {
if (raw) {
 if ($hasSideEffects) {
 } }
 elseIf(!hasSideEffects) {
 } else
 while (hasSideEffects) {
 elseelse{
if (?hasSideEffects) {
 else,
if (.hasSideEffects) {
