 }
 }
 } else { iMillis = checkInstant ( instant, iChronology ) ; return iMillis ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; }
 } else { iMillis = checkInstant ( instant, iChronology ) ; return iMillis ; }
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return iMillis ; }
 } else { iMillis = checkInstant ( instant, iChronology ) ; return iMillis
 } else { iMillis = checkInstant ( instant, iChronology ) ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return instant ;
 return iMillis ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return iMillis
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return iMillis ;
 return iMillis ; }
 } else { iMillis = checkInstant ( instant, chronology ) ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; return this ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return i ;
 } else { iMillis = getMillis ( instant, iChronology ) ; return iMillis ;
 } else { iMillis = getMillis ( instant, iChronology ) ; } return iMillis ; }
 } else { iMillis = checkInstant ( instant, iChronology )
 } else { iMillis = setMillis ( instant, iChronology ) ; } return iMillis ; }
 } else { iMillis = checkInstant ( instant, iChronology ) ; return i ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } } ;
 } else { iMillis = getMillis ( instant, iChronology ) ; return iMillis
 } } else { iMillis = checkInstant ( instant, iChronology ) ; }
 } else { iMillis = checkInstant ( instant, iChronology ; } ) ;
 } else { iMillis = getMillis ( instant, iChronology ) ; } return iMillis ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } else { iMillis = 0 ; }
 } else { iMillis = checkMillis ( instant, iChronology ) ;
 } else { iMillis = getMillis ( instant, iChronology ) ; } return iMillis
 } else { iMillis = checkInstant ( instant, chronology )
 } else { iMillis = checkInstant ( instant, iChronology ) ; } }
 } else { iMillis = checkInstant ( instant, iChronology ) ; return iMillis ; } return instant ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } else { iMillis = instant ; }
 } else { iMillis = setMillis ( instant, iChronology ) ; } return iMillis ;
 } else { iMillis = getMillis ( instant, iChronology ) ; } return instant ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; return iMillis ; } } ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; return iMillis ; } return 0 ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; return iMillis ; } }
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return iMillis ; } ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } } }
 } else { iMillis = checkInstant ( instant, iChronology ;
 } else { iMillis = checkMillis ( instant, chronology ) ;
 } else { iMillis = checkInstant ( instant, iChronology ; } )
 } else { iMillis = checkInstant ( instant, iChronology ; }
 } else { iMillis = checkInstant ( instant, iMillis ) ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return iMillis ; } } ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return iMillis ; } }
 } else { iMillis = checkInstant ( instant, iEpoch ) ;
 } else { iMillis = checkMillis ( instant, iChronology )
 return instant ;
 if ( iMillis < 0 ) { iMillis = instant ; }
 } else { iMillis = checkInstant ( instant, iChronology ) ; return iMill ;
 } else { iMillis = getMillis ( instant, iChronology ) ; } }
 } else { iMillis = getMillis ( instant, iChronology ) ; } return iMillis ; } ;
 } else { iMillis = setMillis ( instant, iChronology ) ; } return iMillis ; } ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return iMillis ; } } ) ;
 return iMillis
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return iMillis ; } return null ;
 return Instant. ofEpochSeconds ( instant ) ; }
 } else { iMillis = checkMillis ( instant ) ; }
 } else { iMillis = checkInstant ( instant, iChronology ) ; } return iMillis * iChronology ;
 } else { iMillis = getMillis ( instant, iChronology ) ; } return iMillis ; } } ;
 } else { iMillis = checkInstant ( instant, iChronology ) ; } ;
 } else { iMillis = checkMillis ( instant, chronology )
 return Instant. ofEpoch ( instant ) ; }
 } else { iMillis = checkInstant ( instant, chronology ;
 } else { iMillis = checkInstant ( instant, chronology ; }
 } else { iMillis = getMillis ( instant, iChronology ) ; } return iMillis ; } return null ;
 } else { iMillis = getMillis ( instant, iChronology ) ; } return iMillis ; } } ) ;
 return Instant. ofEpochSeconds ( instant ) ;
 return Instant. ofEpochSecond ( instant ) ; }
 } else { iMillis = getMillis ( instant, iChronology ) ; } return iMillis ; } return instant ;
 } else { iMillis = getMillis ( instant, iChronology ) ; } return iMillis ; } return this ;
 return Instant. ofEpochSeconds ( instant, chronology )
 return Instant. ofEpoch ( instant ) ;
 if ( iMillis == - 1 ) { return instant ; } }
 if ( iMillis < 0 ) { return - 1 ; } }
 return Instant. ofEpoch ( instant, chronology )
 return Instant. ofEpochSeconds ( instant, chronology);
 return Instant. ofEpochSecond ( instant, iMillis);
 return Instant. ofEpoch ( instant, iMillis);
 } else { iMillis = checkInstant ( instant, chronology ) }
 return Instant. ofEpoch ( instant, iMillis )
 return instant ; }
 return Instant. ofEpochSecond ( instant, iMillis )
 return Instant. getInstance ( instant ) ;
 return iMillis ; } public int getMillis() {...
 return Instant. of ( instant, iMillis )
 return Instant. ofEpoch ( instant, chronology);
 return Instant. getInstance ( iMillis);
 return Instant. of ( instant, iMillis);
 return Instant. ofEpochSecond ( instant, chronology )
 return Instant. getInstance ( instant ) ; }
 return Instant. of ( instant ) ; }
 return iMillis ; } return instant ;
 return Instant. ofEpoch ( instant, iMillis ;
 return Instant. of ( instant, chronology )
 } return instant ;
 return Instant. of ( instant, iMillis ;
 return instant - iMillis ;
 return Instant. getInstance ( iMillis )
 return Instant. ofEpoch ( instant, chronology));
 return iMillis - instant ; } return instant ;
 return instant - iMillis ; }
 return - 1 ;
 return iMillis ; } } ;
 return iMillis - instant ; }
 return Instant. MINUTES ;
 return instant - iMillis
 return iMillis - instant ;
 return Instant. getInstance ( ) ;
 return iMillis ; } return 0 ;
 return 0 ; }
 return iMillionths ;
 return instant ; } } ;
 } return iMillis
 return iMillis ; } }
 } } -----------------------------------------------------------------------
 return iMillis - instant ; } }
 } * -----------------------------------------------------------------------
 return iMillis ;
 } (-----------------------------------------------------------------------)
 return iMillis }
 } return - 1 ;
 } } ;
 } return ;
 return 0 ;
 return iMillis };
 return ; }
 return iMillis;}
 } } ------------------------------------------------------------------------
 } }
 return ;
 } } }
 return this ;
 } }
 } ;
 } ;
 return();
 *
 },
 });
 })
 }) }
 }; }
