if (hoursInMinutes < 0) {
if (hoursInMinutes <  -minutesOffset) {
 if (< 0) {
 if (offset< 0) {
 } else{
 if (0) {
if (hoursInMinutes < 0 || hoursInMinutes > -minutesOffset) {
if (hoursInMinutes <  0)
 if (minutesOffset< 0) {
if (hoursInMinutes <  -minutesOffset)
if (hoursInMinutes < 0 && -minutesOffset < 0) {
 int minutesOffset = 0; if(hoursInMinutes < 0) {
if (hoursInMinutes < 0 || -minutesOffset) {
if (hoursInMinutes < 0 && -minutesOffset > hoursInMinutes) {
if (hoursInMinutes < 0 || hoursInMinutes > 59) {
 int minutesOffset = -offset; if(hoursInMinutes < 0) {
if  ( negative ) {
if (hoursInMinutes < 0 && -minutesOffset < hoursInMinutes) {
 int minutesOffset = -minutesOffset; if(hoursInMinutes < 0) {
if (hoursInMinutes ) {
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset ) ;
if (hoursInMinutes < 0 || hoursInMinutes > 59)
if (hoursInMinutes  > -minutesOffset) {
if (hoursInMinutes < 0 && -minutesOffset > 0) {
if (hoursInMinutes < 0 && -minutes > 0) {
if (hoursInMinutes < 0 || hoursInMinutes > -minutes) {
if (hoursInMinutes < 0 || -minutesOffset < 0)
if (hoursInMinutes < 0 && hoursInMinutes > -minutesOffset) {
 if ( hoursInMinutes < -1) {
 int minutesOffset; if(hoursInMinutes < 0) {
if (hoursInMinutes < 0 && minutesOffset < 0) {
if (hoursInMinutes < 0 || offset > 59) {
if (hoursInMinutes < 0 && minutesOffset > 0) {
if (hoursInMinutes < 0 || -minutesOffset > 0) {
 if (-minutesOffset!< 0) {
if (hoursInMinutes < 0 || hoursOffset > 59) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, -minutesOffset ) ;
 if ( -minutesOffset ) {
 int minutesOffset = FieldUtils.safeMultiply(minuteOffset);
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, ) ;
 if ( hoursInMinutes < -60) {
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, 60 ) ;
 int -minutesOffset = FieldUtils.safeMultiply(minuteOffset);
 if ( hoursInMinutes < 0 {
if (hoursInMinutes < 0 && -minutesOffset < hoursInMin) {
 int minutesOffset = FieldUtils.safeMultiply(minuteOffset, 60);
if (hoursInMinutes < 0 || hoursInMinutes > -23) {
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, -minutesOffset ) ;
if (hoursInMinutes <  0 || -minutesOffset > 59) {
if (hoursInMinutes  > -minutesOffset)
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, hoursInMinutes ) ;
if (hoursInMinutes < 0 || hoursInMinutes >) {
 if ( hoursInMinutes > 0 ) {
if (hoursInMinutes < 0 || -minutesOffset > hoursInMinutes) {
if (hoursInMinutes < 0 || -minutesOffset < 0) {
if (hoursInMinutes < 0 && -minutesOffset > -hoursInMinutes) {
 int minutesOffset = 0 ;
if (hoursInMinutes < 0 || hoursInMinutes++) {
 int minutesOffset = FieldUtils. safeMultiply ( ) ;
if (hoursInMinutes < 0 && offset > 0) {
 int minutesOffset = hoursInMinutes ;
if (hoursInMinutes < 0 && -minutesOffset > hoursInMin) {
 if ( -minutesOffset < 0)
 if ( hoursInMinutes > -1) {
if  negative {
 int minutesOffset = FieldUtils.safeMultiply(offset);
if (hoursInMinutes < 0 && -minutesOffset > 0.5) {
 int -minutesOffset = hoursInMinutes;
 int minutesOffset = FieldUtils. safeMultiply ( 60 ) ;
 int -minutesOffset = FieldUtils.safeMultiply(offset);
if (hoursInMinutes < 0 && -minutesOffset) {
 if ( hoursInMinutes == -1) {
if (hoursInMinutes < 0 || hoursInMinutes > +23) {
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, - 1 ) ;
if (hoursInMinutes <  0 || hoursInMinutes > 24) {
if (hoursInMinutes <  0 || hoursInMinutes > 60) {
 if ( hoursInMinutes >= -minutesOffset) {
 int minutesOffset = -minuteOffset; if(hoursInMinutes < 0) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, 60 ) ; int minutesOffset = hoursInMinutes ;
if (hoursInMinutes < 0 && -minutesOffset < 0)
 offset = FieldUtils. safeMultiply ( hoursInMinutes, 60 ) ; int minutesOffset = - offset ;
 if (>0) {
 if ( hoursInMinutes == 0 ) {
 int minutesOffset = hoursInMinutes; if(hoursInMinutes < 0) {
 int -minutesOffset = hoursInMinutes
if (hoursInMinutes < 0 || hoursInMinutes) {
if (hoursInMinutes < 0 || hoursInMinutes > 3600) {
if (hoursInMinutes < 0 || hoursInMinutes > -24) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, minutesOffset ) ; int minutesOffset = hoursInMinutes ;
if (hoursInMinutes < 0 || -minutesOffset > hoursInMin) {
if (minutesOffset < 0 || minutesOffset > 59) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, minutesOffset ) ; int minutesOffset = - minutesOffset ;
 int -minutesOffset = -offset;
 offset = FieldUtils. safeMultiply ( hoursInMinutes, 60 ) ; int minutesOffset = - minutesOffset ;
if (hoursInMinutes < 0 && -minutesOffset > -1) {
if (hoursInMinutes < 0 || hoursInMinutes >= -minutesOffset) {
 offset = FieldUtils. safeMultiply(hoursInMinutes, -minutesOffset); } else
if (hoursInMinutes < 0 || hoursInMinutes > -1) {
if (hoursInMinutes < 0 || hoursInMinutes > - -minutesOffset) {
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, 60 ) ; int minutesOffset = 0 ;
 if (daysInMinutes< 0) {
if (hoursInMinutes < 0 && -minutesOffset < -59) {
if (hoursInMinutes <  0 || -minutesOffset > 0)
 int minutesOffset = FieldUtils.safeAdd(minuteOffset);
if (hoursInMinutes < 0 && -minutesOffset > -59) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, minutesOffset ) ; int minutesOffset = - offset ;
 offset = FieldUtils. safeMultiply ( hoursInMinutes, 60 ) ; int minutesOffset = offset - 60 ;
 if (minutesOffset < -minutesOffset) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, 60 ) ; int minutesOffset = offset + 60 ;
if (hoursInMinutes < 0 && -minutesOffset > 0.0) {
 offset = FieldUtils. safeMultiply(hoursInMinutes, -minutesOffset); } finally {
 if (minutesOffset < 0 || minutesOffset< 0) {
if (hoursInMinutes < 0 || hoursInMinutes > +minutesOffset) {
 int minutesOffset = FieldUtils. safeAdd ( 60 ) ;
if (hoursInMinutes < 0 || -minutesOffset < hoursInMinutes) {
 if (secondsOffset <0) {
if (hoursInMinutes < 0)  { if (minutesOffset < 0) {
if (hoursInMinutes < 0 || -minutesOffset > -59) {
 int -minutesOffset = 0; if(hoursInMinutes < 0) {
if (hoursInMinutes < 0 && -minutesOffset > -23) {
if (hoursInMinutes < 0 || hoursInMinutes > -minuteOffset) {
 if ( -minutesOffset < 0) {
if (hoursInMinutes < 0 && -minutes < 0) {
if (hoursInMinutes < 0)  { minutesOffset = -minutesOffset; }
 int minutesOffset = FieldUtils. safe ( minutesOffset);
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, 60 ) ; int offset = 0 ;
 int minutesOffset = Math. abs ( offset ) ;
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, 60 ) ; int hoursOffset = 0 ;
 int minutesOffset = FieldUtils.safeAdd(offset);
if (minutesOffset < 0 || offset > 59) {
if (hoursInMinutes < 0 || hoursInMinutes > -minutesOffset++) {
if (hoursInMinutes < 0)  { if (minutesOffset < 0)
 int minutesOffset = FieldUtils. MAX_VALUE ;
 if (! negative ) {
 if (minutesOffset < 0 || offset <0) {
if (daysInMinutes < -minutesOffset) {
 int -minutesOffset = 0;
 int minutesOffset = FieldUtils.safeMultiplyOffset();
 if (minuteOffset< 0) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, minutesOffset ) ; int minutesOffset = offset - 60 ;
if (hoursInMinutes < 0 || hoursInMinutes > -minutesOffset$) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, 60 ) ; int minutesOffset = offset - hoursInMinutes
if (hoursInMinutes < 0 && offset < 0) {
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, 60 ) ; offset = 0 ;
 int minutesOffset = - minutesOffset ;
if (hoursInMinutes  == -minutesOffset) {
 if (HoursInMinutes < 0){
if (hoursInMinutes < 0 || minutesOffset > 59) {
 if (! hoursInMinutes ) {
 if (hourInMinutes <0) {
 int minutesOffset = -1;
 int -minutesOffset = minutesOffset;
 int minutesOffset = FieldUtils. MINUTES ;
 if ( -minutesOffset > 0) {
if (hoursInMinutes < 0 && hoursInMinutes >= -minutesOffset) {
if  (negative)
if (hoursInMinutes < 0 && hoursInMinutes > -minutesOffset++) {
 int minutesOffset = -offset;
if (hoursInMinutes  <= -minutesOffset) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, minutesOffset ) ; int minutesOffset = offset + 60 ;
 if (offset == 0){
 if (minutesOffset < -1){
 if (hoursInMinutes < -0) {
if (daysInMinutes > -minutesOffset) {
if (hoursInMinutes < 0 && -minutesOffset >= hoursInMinutes) {
 if ( negativeOffset ) {
 offset = 0 ;
 if (minutes < 0) {
 int minutesOffset = -minutesOffset if (hoursInMinutes < 0) {
 int minutesOffset = Math. random ( ) ;
if (hoursInMinutes < 0 && -minutesOffset < -23) {
if (hoursInMinutes < 0 || hoursInMinutes > -mminutesOffset) {
if (hoursInMinutes < 0 || -minutesOffset < hoursInMin) {
 offset = FieldUtils. safeMultiply(hoursInMinutes, -minutesOffset); } try {
 int minutesOffset = Math. floor ( offset ) ;
 if ((-minutesOffset)< 0) {
 offset = FieldUtils.safeAdd(offset, 60);
 if (hoursInMinutes < -minutes) {
 int minutesOffset = Math. abs ( 60 ) ;
 int minutesOffset = FieldUtils. safeMultiply(minutesOffset, 59); }
if (hoursInMinutes < 0 && hoursInMinutes > -minutesOffset0) {
 if (hoursInMinutes % 60==0) {
if (hoursInMinutes < 0 && hoursInMinutes > -minutes) {
if (hoursInMinutes < 0)  { offset = -minutesOffset; }
 if (-minutesInMinutes< 0) {
 int -minutesOffset = 59;
 offset = FieldUtils. safeMultiply(hoursInMinutes, -minutesOffset); } {
 int minutesOffset = FieldUtils. safeAdd ( minutesOffset );
 int minutesOffset = hoursInMinutes
 offset = FieldUtils. safeMultiply ( hoursInMinutes, 60 ) ; int minutesOffset = offset - hoursInMin ;
if (hoursInMinutes < 0 || hoursInMinutes > MINUTES) {
 int -minutesOffset = - minutesOffset;
if (hoursInMinutes < 0 && -minutesOffset > 0 && offset < 0) {
 offset = hoursInMinutes ;
if (hoursInMinutes < 0 && -minutesOffset < 0 && offset < 0) {
 int minutesOffset = FieldUtils. safeMultiply(minutesOffset, 60); }
 if (hoursInMinutes > -0) {
 if (daysInMinutes < 0{
 if (+) {
if (hoursInMinutes < 0)  { minutesOffset = -minutesOffset;
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, -minutesOffset); }
 int offset = 0;
if (hoursInMinutes < 0 || offset < 0) {
 if (HoursInMinutes % 60==0) {
 if (daysInMinutes < -1){
 if (-minutesOffset>< 0) {
 if (hoursInMinutes + minutesOffset< 0) {
 if (hourInMinutes < -0) {
 offset = FieldUtils. safeMultiply ( hoursInMinutes, -minutesOffset ) ; }
 if (minutesOffset > 0 && minutesOffset< 0) {
 if (daysInMinutes <.0) {
if (hoursInMinutes < 0)  { offset = -offset; }
 int minutesOffset = FieldUtils. safeMultiply(minutesOffset, minutesOffset); }
 int minutesOffset = FieldUtils. safeMultiply(minutesOffset, -60); }
 if (HoursInMinutes < -minutes) {
 if (hoursInMinutes -minutesOffset< 0) {
if (hoursInMinutes < 0)  { offset = -offset; } else {
 if (HoursInMinutes < 0{
 if (minutesOffset == 0) {
 if (hoursInMinutes <.0) {
 if (minutesOffset < 0.0){
 int minutesOffset = FieldUtils.safeMultiply(minuteOffset, 59); }
 if (minutesOffset + -hoursInMinutes < 0) {
 if ( hours == -1) {
 if (daysInMinutes % 60==0) {
 if (daysInMinutes < -minutes) {
 int minutesOffset = -1; if(hoursInMinutes < 0) {
 if (offset == -0) {
 if (minutesOffset > 0 || minutesOffset< 0) {
 if (minutesOffset){
 if (HoursInMinutes + minutesOffset< 0) {
 if (minutesOffset < 0 ||hoursInMinutes < 0) {
 if (minutesOffset > 0) {
 if (hourInMinutes % 60==0) {
 int minutesOffset = hoursInMinutesOffset ;
 if (hoursInMinutes % 60 == -0) {
 if (minutesOffset < 0 || -hoursInMinutes < 0) {
 int minutesOffset = FieldUtils. safeMultiply ( minutesOffset, -minutesOffset ) ; } else
 if (minutesOffset < 0 && minutesOffset< 0) {
if (hoursInMinutes < 0 || -minutesOffset > 60) {
if (minutesOffset < 0 || minutesOffset > 60) {
 if (hoursInMinutes % 60!==0) {
 if (minutes == 0){
 if (daysInMinutes + minutesOffset< 0) {
if (hoursInMinutes < 0)  { offset = hoursInMinutes ;
if (hoursInMinutes < 0 || minutesOffset > 0) {
 if ( hours < 0 ) {
if (hoursInMinutes < 0 && -minutesOffset >= 0) {
if (hoursInMinutes < 0)  { if (daysInMinutes < 0)
if (hoursInMinutes < 0 && hoursInMinutes++) {
 if (minutesOffset < 0 || > 59) {
 if (! positive ) {
if (hoursInMinutes  > -60) {
 if (offset < -0) {
 offset = hoursInMinutes
 long minutesOffset = 0; if(hoursInMinutes < 0) {
 if (minutesOffset-hoursInMinutes < 0) {
 if (daysInMinutes > -1) {
if (hoursInMinutes < -minutesOffset0) {
if (hoursInMinutes < 0 || negative) {
if (hoursInMinutes  < -minutesOffset {
if (hoursInMinutes < 0 || minutesOffset < 0) {
 if (daysInMinutes - minutesOffset< 0) {
if (hoursInMinutes < 0 || hoursInMinutes overflow) {
if (minutesOffset < 0 || minutesOffset > 0) {
if (hoursInMinutes < 0 || minutesOffset < 0)
 if (monthsOffset< 0) {
 if ( hoursInMinutes < -minutesOffset ) { int
 if (HoursInMinutes % 60!==0) {
if (hoursInMinutes < 0)  { if (minutes < 0)
 if (HoursInMinutes % 60 == -0) {
if (hoursInMinutes < 0 && -minutes!= 0) {
if (hoursInMinutes < 0 || offset > 0) {
 if ( -minutesOffset > -59) {
if (hoursInMinutes < 0)  { offset = -minutesOffset;
 if (HoursInMinutes < -60) {
 if ( hoursInMinutes > -minutesOffset ) { int
 if ( hours == 0 ) {
if (hoursInMinutes < 0)  { offset = 0 ;
if (hoursInMinutes < 0)  { if (minutes > 0)
 if ( negativeMinutes ) {
 if (daysInMinutes % 2==0) {
if (hoursInMinutes < -minutesOffset$) {
if (hoursInMinutes < 0)  { offset = -offset;
 int minutesOffset = 0 if (hoursInMinutes < 0) {
if  ( negative {
 if (compact){
 if (hoursInMinutes % 60< 0) {
 if (daysInMinutes negative) {
if (hoursInMinutes < 0)  { offset = hoursInMinutes ; }
if (hoursInMinutes < 0 || minutesOffset) {
 if (minusMinutesOffset){
 if (inMinutes <0) {
 int minutesOffset = offset ;
 if (daysInMinutes){
 if (HoursInMinutes % 60< 0) {
 if (daysInMinutes > 0{
 if (offset > 0){
 offset = -offset;
if (hoursInMinutes < 0 || hoursInHours > 59) {
if (hoursInMinutes < 0 || minutesOffset > 59)
 if (hoursInMinutes negative) {
 if (minutesOffset == 0 ||hoursInMinutes < 0) {
 long minutesOffset = 0 ;
 while (true){
 if (minuteOffset == -0) {
 if (daysInMinutes % 60< 0) {
 int minutesOffset = offset; if(hoursInMinutes < 0) {
 int -minutesOffset = hoursInMinute
if (hoursInMinutes < 0 && minutesOffset > -1) {
 if ( hoursInMinutes < -minutesOffset ) { double
if (hoursInMinutes < 0)  { if (minutesOffset)
if (hoursInMinutes < 0 ||! positive) {
 if ( hoursInMinutes > -minutesOffset ) { double
if (hoursInMinutes < 0 || > 59) {
 if (-minutesOffset + 60< 0) {
if (hoursInMinutes <  -59) {
if (hoursInMinutes < 0 && -minutesOffset!= 0) {
if (hoursInMinutes < 0 || hoursOffset > 60) {
if (hoursInMinutes < 0)  { -minutesOffset =
 int minutesOffset if (hoursInMinutes < 0) {
if (hoursInMinutes  < 0 || -minutesOffset)) {
if (hoursInMinutes < 0 && minutesOffset > 59) {
 if ( -minutesOffset + -hoursInMinutes < 0) {
if (hoursInMinutes < 0 ||! negative) {
if (hoursInMinutes < 0 ||! inclusive) {
 if (! isUTC ) {
if (hoursInMinutes < 0)  { if (negativeOffset) {
if (hoursInMinutes <  +minutesOffset) {
 if (minutesOffset && -hoursInMinutes < 0) {
 long minutesOffset; if(hoursInMinutes < 0) {
 if ( minutesOffset < 0 )
 if (overflow){
 if (inclusive){
 offset = -1;
if (hoursInMinutes < 0.5) {
if (hoursInMinutes <  -minutes)
if (hoursInMinutes < 0.0) {
if (hoursInMinutes < 0 && offset == 0) {
if (hoursInMinutes  <= 0) {
if (hoursInMinutes < 0 && hoursOffset > 0) {
 if (minutesOffset < -hoursInMinutes < 0) {
if (hoursInMinutes < 0 && minutesOffset == 0) {
if (hoursInMinutes < 0xffff) {
 if (seconds < 0) {
if (hoursInMinutes < 0)  { return null; }
 int minutesOffset;
if (hoursInMinutes < 0 && hoursInMinutes > 59) {
if (hoursInMinutes  > 0)
 if ( negate ) {
if (hoursInMinutes < 0)  { offset = 0 ; }
if (hoursInMinutes  == 0)
if (hoursInMinutes < 0 || < 0) {
if (hoursInMinutes <  -minuteOffset) {
 int minutesOffset 0; if(hoursInMinutes < 0) {
 if (==0) {
if (hoursInMinutes < 0)  { if (negative) {
if (hoursInMinutes < 0)  { offset = -offset; } else { int
if (hoursInMinutes < 0)  { if (negative)
if (hoursInMinutes  < -minutesOffset) { this.
if (hoursInMinutes < 0 || offset > 60) {
 offset = 0; if(hoursInMinutes < 0) {
 while (minutesOffset< 0) {
if (hoursInMinutes  < -minutesOffset) { *
 if (Negative) {
 if (reverse){
if (hoursInMinutes < 0 || minutes > 0)
if (hoursInMinutes <  -mutesOffset) {
 } } else{
if (hoursInMinutes < 0 && offset > 59) {
 if (offset + -hoursInMinutes < 0) {
if (hoursInMinutes  > -minutesOffset) { *
 if (minusOffset) {
if (hoursInMinutes  >= 0) {
if (hoursInMinutes < 0)  { offset = 60 ;
if (hoursInMinutes < 0)  { -minutesOffset } {
 if (positive) {
 int minutesOffset; { if(hoursInMinutes < 0) {
 int offset; if(hoursInMinutes < 0) {
 if (offset <=0) {
 if (-0) {
if  ( subtract ) {
 if (useOffset){
if (hoursInMinutes < 0)  { break; }
 offset += 60 ;
 if (! negative )
 } if (hoursInMinutes < 0) {
if (hoursInMinutes < 0)  { return null }
if (hoursInMinutes  < {
if (hoursInMinutes < 0)  { return UTC }
 if (secondsOffset-hoursInMinutes < 0) {
 } if (secondsOffset< 0) {
 } else if (hoursInMinutes < 0) {
if (hoursInMinutes  <= 0)
if (hoursInMinutes < 0 && offset >= 0) {
if (hoursInMinutes < 0)  { continue; }
if (hoursInMinutes <  -minutes {
if (hoursInMinutes < 0 || offset > 23) {
if (hoursInMinutes < 0)  { return ; }
 } finally { if(hoursInMinutes < 0) {
 while (offset + -hoursInMinutes < 0) {
if  positive {
if (hoursInMinutes < 0 &&! inclusive) {
 if (!0) {
if (hoursInMinutes < 0xffffffff)
if  overflow {
 } finally {
if (hoursInMinutes < 0 &&! strict) {
if (hoursInMinutes <  1) {
if (hoursInMinutes < 0 || > 60) {
if (hoursInMinutes < 0 &&! negative) {
if (hoursInMinutes <  +minutesOffset) { int
 } { if (hoursInMinutes < 0) {
 if inclusive) {
if (hoursInMinutes < 0 && > 0) {
if (hoursInMinutes < 0 && > 59) {
if (hoursInMinutes < 0.0)
 if (offset-hoursInMinutes < 0) {
 int offset;
 if (Offset< 0) {
 if (-) {
 } try { if(hoursInMinutes < 0) {
 if (min< 0) {
 if (0-hoursInMinutes < 0) {
if (hoursInMinutes < 0.5)
 } catch { if(hoursInMinutes < 0) {
 if (offset+hoursInMinutes < 0) {
 if ($offset< 0) {
if (hoursInMinutes < 0)  { this.
if (hoursInMinutes < 0)  { return;
if (hoursInMinutes <  60) {
if  UTC {
 if negative) {
 while (+) {
 if (-hoursInMinutes < 0) {
if (hoursInMinutes  > {
 } } finally{
if (hoursInMinutes < 0 || > 0) {
 } else
 if negative-{
if (hoursInMinutes < 0)  return null;
if (hoursInMinutes  < 0
if  ( {
 } finally{
if (hoursInMinutes < 0) { -
if (hoursInMinutes < 0)  { return }
if (hoursInMinutes <  2) {
if (hoursInMinutes < 0)  { this's
if (hoursInMinutes <  1)
 } catch {
 if (!-hoursInMinutes < 0) {
if (hoursInMinutes <  0);
 } {
 if (=0) {
 } try {
 if (!< 0) {
if (hoursInMinutes <  -1)
 while (< 0) {
if (hoursInMinutes!= 0) {
 while (hoursInMinutes < 0) {
if (hoursInMinutes < 0)  break;
if (hoursInMinutes < 0)  { *
if (round) {
 switch (< 0) {
 if (!hoursInMinutes < 0) {
 } finally
if (hoursInMinutes < 0)) {
 }
 } { while(hoursInMinutes < 0) {
if (hoursInMinutes < 0.) {
 } while(hoursInMinutes < 0) {
if (hoursInMinutes < 0)  break.
 } catch(hoursInMinutes < 0) {
 } If(hoursInMinutes < 0) {
 } when(hoursInMinutes < 0) {
