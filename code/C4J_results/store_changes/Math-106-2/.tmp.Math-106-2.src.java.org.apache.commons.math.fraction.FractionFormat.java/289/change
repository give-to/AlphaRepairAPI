 pos.setIndex(initialIndex);
 pos.setErrorIndex(initialIndex);
 setIndex(initialIndex);
 pos.setIndex(initialIndex;
 pos.index(initialIndex);
 pos.setIndex(0);
 pos.setIndex ( );
 setIndex(0);
 pos.setErrorIndex(initialIndex;
 pos.setIndex(startIndex-initialIndex);
 pos.setErrorIndex(0);
 pos.setErrorIndex(c);
 pos.setErrorIndex(startIndex-initialIndex);
 pos. setIndex ( startIndex + 1 );
 pos.setErrorIndex(c - 1);
 pos.setIndex(); pos.setIndex(initialIndex);
 pos.setErrorIndex(c + 1);
 pos.setErrorIndex(pos.errorIndex);
 pos.setErrorIndex(startIndex);
 pos.setErrorIndex(startIndex + 1);
 pos.setIndexInitialIndex;
 pos.setErrorIndex(pos.getIndex);
 pos. setIndex ( startIndex ) ; break;
 pos.setIndex(startIndex); setIndex(initialIndex);
 pos.setErrorIndex(c-initialIndex);
pos = c ;
 pos.setNumeratorIndex(initialIndex);
 pos.setIndex(initialIndex + 1);
 if (num == null)
 pos. setIndex (startIndex);
 pos.setIndex(initialIndex); return null;
 if (c == 0) pos.setIndex(initialIndex);
pos.setIndex(startIndex); break ; default :
 pos.index = c;
 if (startIndex)
 if (num == null) { pos.setIndex(initialIndex);
 pos. setIndex ( pos. getIndex(initialIndex);
 pos.setIndex(startIndex + 1 char);
 pos.setErrorIndex(num.intValue);
 pos.setIndex(startIndex+initialIndex);
 pos. setIndex ( startIndex + 1;
 pos.append(c);
 pos.setLastErrorIndex(initialIndex);
 pos.index = 0;
pos.setIndex(c);
 break ; } pos.setIndex(initialIndex);
 if (startIndex > 0)
 pos.setErrorIndex(startIndex + 1;
 pos.setIndex(startIndex - 1);
 pos.setErrorIndex(1);
 pos.setIndexToErrorIndex(initialIndex);
 if (startIndex > 0) pos.setIndex(initialIndex);
pos.setIndex(initialIndex); break ; default :
 pos. setErrorIndex ( startIndex ) ;
 pos.setErrorIndexFrom(initialIndex);
 pos. setErrorIndex ( pos. getIndex(initialIndex);
 if (pos!= null)
 pos.setIndex(initial);
 setIndex(c);
 if (startIndex == - 1) { pos.setIndex(initialIndex);
 pos. setErrorIndex ( 0 ) ;
 pos.setIndex(1);
 if (c == 0)
 pos. setErrorIndex ( pos. setIndex(initialIndex);
 pos.setErrorIndexIndex(initialIndex);
 if (startIndex > initialIndex)
 pos.setIndex(initialStartIndex);
 break ; default : pos.setIndex(initialIndex);
 if (startIndex) pos.setIndex(initialIndex);
 pos.setErrorStartIndex(initialIndex);
 pos.setIndex initialIndex;
 pos.setIndexBackToErrorIndex(initialIndex);
 pos.setIndex(0;
 pos. setIndex ( pos. setIndex(initialIndex);
 pos. setIndex ( ). setValue(initialIndex);
 pos.setErrorIndex(startIndex+initialIndex);
pos.setIndex(initialIndex); break;
 if (startIndex < 0) pos.setIndex(initialIndex);
 if (startIndex > 0) { pos.setIndex(initialIndex);
 pos.setErrorErrorIndex(initialIndex);
 if (startIndex < initialIndex) { pos.setIndex(initialIndex);
 if (startIndex < initialIndex)
 if (startIndex < 0)
 if (c!= 0) pos.setIndex(initialIndex);
 if (startIndex!= initialIndex)
pos = null;
 if (num == null) { } pos.setIndex(initialIndex);
 if (startIndex < 0) { pos.setIndex(initialIndex);
 if (num == null) break; pos.setIndex(initialIndex);
 switch (c) { case 1 : pos.setIndex(initialIndex);
 if (num == null) pos.setIndex(initialIndex);
 pos.setIndex(startIndex); parse(initialIndex);
 if (startIndex < initialIndex) pos.setIndex(initialIndex);
 if (startIndex > initialIndex) pos.setIndex(initialIndex);
 if (c == 0) { pos.setIndex(initialIndex);
 break; }
 pos.index(c);
 pos.setErrorIndex(endIndex);
 if (startIndex) { pos.setIndex(initialIndex);
 pos. setIndex ( startIndex + );
 if (startIndex!= 0)
pos.resetIndex();
 pos.setIndex = 0;
pos.setErrorIndex(startIndex); break; }
pos.setIndex(startIndex); break; }
 if (pos!= null) {
pos.setIndex(initialIndex); break; }
 if (startIndex!= 0) pos.setIndex(initialIndex);
 pos.setErrorIndex ( );
 if (c == 1) pos.setIndex(initialIndex);
 if (pos == null) { break; }
 if (c == ' ') pos.setIndex(initialIndex);
pos ++ ;
 if (startIndex == - 1) {
 pos. setIndex ( ). set(initialIndex);
 if (startIndex == - 1) break;
 pos.setUintErrorIndex(initialIndex);
 pos.setIndex(startIndex); setError(initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } } else {
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IllegalArgumentException ( ) ;
pos.setErrorIndex(initialIndex); break; }
 if (startIndex > 0) {
 pos. setErrorIndex ( startIndex + 1 ) ;
 pos.setIndex(startIndex ++);
 pos.setIndex(index);
 index(initialIndex);
 if (c == 0)
 if (startIndex < initialIndex) {
 if (c!= 0)
pos = startIndex ;
pos. reset ( ) ;
 pos.setIndex(initialIndex); break;;
 pos. setIndex ( startIndex ) ; break ; default :
 pos. setIndex ( ). setIndex(initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IllegalArgumentException("");
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { if ( pos!= null )
 pos.setErrorIndex(c) + (initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { return new Fraction ( num ) ;
pos = - 1 ;
 if (startIndex < 0) break; pos.setIndex(initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { if ( pos!= null ) {
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { return new Fraction ( ) ;
 if (errorIndex == 0)
 pos. setIndex ( startIndex ) ; return null ; break ; default :
 pos.setErrorIndex(c.length-initialIndex);
pos.setIndex(startIndex + 1 - c);
 pos. setIndex ( startIndex ) ; break ; case '\n' :
 pos.setErrorIndex(c) - (initialIndex);
 pos.setLastIndex(initialIndex);
 pos.setDegreeIndex(initialIndex);
 setErrorIndex(0);
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { return null ; } if ( strict ) {
pos.setIndex(startIndex); return null; } } else {
pos.setIndex(startIndex + 1 + c);
pos = pos ;
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IllegalStateException ( ) ;
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { if ( pos == null ) {
pos.setIndexInitialIndex();
 if (pos == null) { break;
 pos.setErrorIndex(i);
 pos. setErrorIndex ( startIndex ) ; break;
 pos. setIndex ( startIndex ) ; return null ; } } else { if (pos!= null) {
 pos.setIndex(startIndex - -initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } } else { if (pos!= null)
 pos.setErrorIndexToLastCharacter(initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } case '\n' :
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { return new Fraction ( c ) ;
 pos.setErrorIndex(startIndex,initialIndex);
 pos. setErrorIndex ( 0 )
 pos.setIndexToLastErrorIndex(initialIndex);
pos.setIndex(startIndex + 1, c);
 setIndex(1);
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { return null ; } } else {
 if (num == null) break; } pos.setIndex(initialIndex);
 if (pos == null) { return null; }
pos.setIndex(startIndex + 1.0);
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IllegalArgumentException ( "
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IllegalArgumentException ( "Invalid
 errorIndex = c;
 pos. setIndex ( startIndex ) ; return null ; } } else { if (pos == null) {
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { if ( pos == null )
 pos. setIndex ( startIndex ) ; return null ; } case '\\' :
 pos. setIndex ( startIndex ) ; break ; } } else {
 pos.setErrorIndex(c;
 pos. setIndex ( startIndex ) ; reset(initialIndex);
 pos.setErrorIndex = 0;
pos.setIndex(startIndex); break ; } default :
 pos.error = c;
 pos.setErrorIndexToLastChar(initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null && pos!= null ) {
 pos.setUnexpectedIndex(initialIndex);
pos.setIndex(initialIndex); return null; } } else {
 pos. setErrorIndex ( startIndex ) ; break ; } default :
 pos. setIndex ( startIndex ) ; break ; }
 } } else { pos.setIndex(initialIndex);
 if (c == 1)
 pos. setIndex ( startIndex ) ; return null ; } } else { if (pos == null)
 pos.error(c);
 pos.setErrorIndex(c.index-initialIndex);
pos.setIndex(startIndex + ' ');
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { return null ; } else {
pos.setIndex(startIndex); break ; } } else {
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IllegalArgumentException ( "Unknown
 pos. setIndex ( startIndex ) ; break ; case '\\d' :
 } pos.setErrorIndex(initialIndex);
 if (startIndex)
 pos. setIndex ( startIndex ) ; return null ; } } else { if (num == null)
 if (endIndex) pos.setIndex(initialIndex);
 break ; default :
 startIndex = c;
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { if ( pos == null ) return
pos.setIndex(startIndex); return null; break ; default :
 if (pos == null) { break }
pos.setIndex(initIndex);
pos.getIndex();
 pos. setErrorIndex ( startIndex ) ; break }
 if (c) pos.setIndex(initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } case '\r' :
 pos.setIndex(initialIndex); }
 pos. setIndex ( startIndex ) ; return null ; } } else { if (c == 0)
 errorIndex = 0;
 pos. setIndex ( startIndex ) ; return null ; } } else { if (unit == null)
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null && pos!= this ) {
 append(c);
 pos. setIndex ( startIndex ) ; return null ; } case '\\n' :
 pos. setIndex ( startIndex ) ; return null ; } else { if (c == '\\')
pos.setIndex(initialIndex + startIndex);
 pos. setErrorIndex ( startIndex ) ; break ; }
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { if (pos) {
pos.setIndex(initialIndex - 1);
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IOException();
pos.setIndex(initialIndex); return null; } break ; default :
 pos. setIndex ( startIndex ) ; return null ; } } else { return null ; } } else {
 default : pos.setIndex(initialIndex);
pos.setIndex(startIndex, - 1);
 pos. setIndex ( startIndex ) ; return null ; } else { if ( c == ' ' ) {
 pos.setStartIndex(initialIndex);
 resetIndex ( );
 pos.setCurrentIndex(initialIndex);
pos.setIndex(startIndex + c.length);
pos.setIndex(initialIndex); return null; } case '\\' :
pos.setIndex(initialIndex) return null; } } else {
 } pos.setIndex(initialIndex);
 if (errorIndex)
 pos. setIndex ( startIndex ) ; return null ; } } else { if (startIndex)
 if ( pos == null ) { return null ; } break ; }
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IOException()
pos.setIndex(initIndex); break; }
pos.setIndex(initialIndex); return null; break ; default :
 break; }
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IOException():
 pos.setErrorIndexFromIndex(initialIndex);
 break; pos.setIndex(initialIndex);
 pos.reset(initialIndex);
pos.setIndex(initIndex + 1);
 pos. setIndex ( startIndex ) ; return null ; } } else { if (no slash)
 pos. setIndex ( startIndex ) ; return null ; } } else,
pos.setIndex(initialIndex); break ; } default :
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { return null ; }
 pos. setIndex ( startIndex ) ; return null ; } } else { break;
pos.setIndex(initialIndex) ; break ; } case '\n' :
 pos. setIndex ( startIndex ) ; return null ; } case ' ' : break;
 pos. setIndex ( startIndex ) ; break ; case ' ' : break;
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw new IOException:
 if (c) { pos.setIndex(initialIndex);
 index = c;
pos.setIndex(initialIndex); break ; } } else {
 pos.setErrorIndex(initialIndex); }
pos.setIndex(startIndex); break; } }
pos.setIndex(initialIndex) ; break ; case '\\' :
pos.setIndex(initialIndex); return null; } } finally {
pos.setErrorIndex(initialIndex); } }
 setErrorIndex(initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } case ' ' : break ; default :
 pos.setErrorIndexToPrevious(initialIndex);
 if (endIndex)
 pos. setIndex ( startIndex ) ; break ; default }
 pos. setIndex ( startIndex ) ; return null ; } } else { if (error)
 if (c == 0 pos.setIndex(initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } } else { if (no '')
pos.setIndex(startIndex - 1 char);
pos.setIndex(initialIndex) return null; } break ; default :
 break ; default :
 pos. setIndex ( startIndex ) ; return null ; } } else { if (empty)
pos.setIndex(initialIndex); return null; } default : break;
 pos.setIndex(initialIndex); } }
 parse(pos);
 index = 0;
 case 0 : pos.setIndex(initialIndex);
pos.index();
pos.setErrorIndex(startIndex); } else
pos.setIndex(initialIndex) ; } } else {
 pos. setErrorIndex ( startIndex ) ; break ; } default {
 pos. setIndex ( startIndex ) ; return null ; } if ( pos!= null ) { return null ; }
 pos.setNextIndex(initialIndex);
 pos.setErrorIndex(initialIndex); else
pos.setIndex(initialIndex) return null; } case '\\' :
pos.setIndex(initialIndex) ; break ; default : break;
pos.setIndex(initialIndex); return null; } } } else {
 setIndex = 0;
 pos.setIndex(initialIndex); else
 pos. setIndex ( startIndex ) ; break ; case ' ' : break }
 pos. setIndex ( startIndex ) ; return null ; } if ( pos == null ) { throw null ; }
 posSetIndex(initialIndex);
 pos. setIndex ( startIndex ) ; break ; } } else,
 pos.set(initialIndex);
 pos. setIndex ( startIndex ) ; return null ; } case ' ' : break ; }
 setIndex(index);
 } break;
pos.setIndex ++ ;
 if (errorIndex)
pos.setIndex(initialIndex) ; break ; } case '\\n' :
 if (!startIndex)
pos.setIndex(initialIndex) ; break ; } case '\\' :
 setIndex(pos);
 pos. setIndex ( startIndex ) ; return null ; } } else { break:
 case 1 : pos.setIndex(initialIndex);
 break; } } pos.setIndex(initialIndex);
pos.setIndex(startIndex); return null; } } else,
 pos. setIndex ( startIndex + 1 ) +
pos.setIndex(lastErrorIndex);
 parse(source);
pos.setIndex(initialIndex) ; break ; } case '\\d' :
 c = 0;
 if (error)
 pos. setErrorIndex ( startIndex ) ; } }
pos.setIndex(c - 1);
 pos.setIndex(initialIndex); } else
 pos. setIndex ( startIndex ) ; } }
 set(c);
 pos. setErrorIndex (startIndex); } }
pos.setIndex(initialIndex) return null; } case '}' :
 reset(initialIndex);
pos.setIndex(startIndex); return null; } }
 if (c == ' pos.setIndex(initialIndex);
 pos. setIndex ( startIndex ) ; break ; default : }
 pos. setIndex ( startIndex ) ; break ; } } }
pos.setIndex(startIndex); break ; } } else,
 pos. setIndex ( startIndex ) ; break ; } } else
 if (error)
pos.setErrorIndex(initialIndex));
 pos.setIndex(); }
pos.setIndex(initialIndex) return null; } } } else {
 pos. setIndex ( startIndex ) ; return null ; } } else { if (empty())
pos.setIndex(startIndex); return null; } else
 set(initialIndex);
 pos. setIndex ( startIndex ) ; } else
 pos.resetIndex(); }
pos.setIndex(initialIndex); return null; } break ; } else {
 pos. setErrorIndex ( startIndex ) ; }
pos.setIndex(initialIndex); return null; } } else,
pos.setIndex(initialIndex) ; break ; } case ' ' : break;
 pos. setIndex ( startIndex + 1 ) ; }
 } } pos.setIndex(initialIndex);
 c ++;
pos.initIndex();
pos.setIndex(initialIndex); break,
 pos.error(initialIndex);
 pos.setIndex(-initialIndex);
pos = n ;
pos.setIndex(startIndex); break ; } default,
pos.setIndex(initialIndex); break();
 default : } pos.setIndex(initialIndex);
pos.setError();
pos.append();
 if (c == 0 pos).setIndex(initialIndex);
pos.setIndex(startIndex); break ; } } else:
pos.setIndex(InitialIndex);
pos --;
pos.setIndex(initialIndex); break; } }
pos.setIndex(initialIndex) + 1;
 if (c!= 0).setIndex(initialIndex);
pos.setIndex(initialIndex) return null; } } else,
pos.setIndex(initialIndex); return null; } }
pos.setIndex(initialIndex) ; break ; default : break ; default :
pos.setIndex(initialIndex); return null; } case '\\' {
pos.setIndex(startIndex); break ; } } } else
pos.error();
 break ; case pos.setIndex(initialIndex);
 pos.setError(initialIndex);
pos.setIndex(initialIndex); return null; } case '\\'':
pos.next();
pos.setIndex(initialIndex); break ; } } else,
pos.setIndex(initialIndex); return null; } else
pos.setIndex(initialIndex); default :
 skip(initialIndex);
pos.setIndex(initialIndex) break; }
pos.setIndex(initialIndex) ; break ; default }
pos.setIndex(initialIndex) ; break ; default,
pos.setIndex(initialIndex); return null; } } else
 break;
 ++c;
pos.setIndex(initialIndex) ; break ; } default {
pos.setIndex(initialIndex) +
pos.setIndex(initialIndex) }
pos.setIndex(initialIndex) ; break ; } default,
pos.setIndex(i);
 startPos.setIndex(initialIndex);
pos.setIndex(currentIndex);
pos.setIndex(initialIndex) ; break ; } } else
 (c);
 ++i;
pos++; ;
 resetIndex(initialIndex);
pos.setIndex 0;
 ++index;
break(();
break();
 setError(initialIndex);
 endPos.setIndex(initialIndex);
 setIndex(-initialIndex);
pos.setIndex(initialIndex) return null; }
pos.setIndex(initialIndex); break; else
 (break);
pos.setIndex(initialIndex + 1); }
pos.setIndex(initialIndex) ; } } else
 startIndex.setIndex(initialIndex);
clear();
pos.setIndex(errorIndex);
pos.setIndex(initialIndex) ; break; case
 break; case
 append(initialIndex);
 endPos().setIndex(initialIndex);
 default :
pos.setIndex(initialIndex) break;
 } } else
 } } }
 moveIndex(initialIndex);
 break }
 default: return
 } } else
 endPosition.setIndex(initialIndex);
 pos().setIndex(initialIndex);
pos.setIndex(initialIndex) } }
pos.setIndex(initialIndex) } else
 position.setIndex(initialIndex);
 }
