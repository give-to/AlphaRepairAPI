if (nextpos == -1) {
if (nextpos ) {
 if (pos ==-1) {
if (nextpos < 0) {
if (nextpos ==  -1)
 if (-1) {
 if (== -1) {
if (pos < 0) {
if (nextpos  < 0)
 if (nextpos!== -1) {
 if (nextpos <1) {
if (nextpos < 0 || nextpos > n) {
if (nextpos ==  -1) { pos = n;
if (nextpos == -1 || nextpos < 0) {
if  ( nextpos < - 1) {
 if (pos <1) {
if (nextpos ==  -1) { pos = lastOffset ;
if (nextpos ==  -1) { pos = n + 1 ;
 if (nextpos == -1) { return null; } pos = nextpos + 1;
 if (!pos){
if (nextpos == -1) { pos = n ; } else {
if (nextpos ==  -1) { pos = 0;
if (nextpos < 0 || pos > n) {
if ( nextpos < 0 ) { pos = n ;
 if (nextpos < - 1) { pos = nextpos ; startLine = n ; }
if (nextpos ==  -1) { pos = -1;
 if (!) {
if (nextpos == -1 || nextpos < 0 || nextpos > n) {
 if (nextpos < 0 || nextpos ==-1) {
if (nextpos ==  -1) { break;
if (nextpos ==  -1) { pos = n - 1 ;
 if (nextpos == -1) { return null; } pos = nextpos + n;
 if (nextpos == -1) { return null; } else
 if (nextpos == -1) { return null; }
if  ( nextpos < lastOffset) {
 if (nextpos < - 1) { pos = nextpos ; startLine = nextpos ; }
 if (nextpos == -1) { return null; } else { nextpos = nextpos + 1; }
 if (nextpos < 0) { if (nextpos == -1) {
 if (nextpos < - 1) { pos = nextpos ; startLine = n ; } else { pos = nextpos ; }
if (nextpos == -1 || nextpos < lastOffset) {
 if (nextpos == -1) { return null; } else { pos = nextpos + 1;
 if (nextpos < - 1) { pos = nextpos ; startLine = nextpos ; } else
 if (nextpos == -1) { return null; } else { nextpos = nextpos + 1;
 if ( nextpos < 0 ) { pos = - 1 ;
 if (nextpos == - 1) { return null; } if (nextpos == - 1) { return null; } else
 if (nextpos < - 1) { pos = nextpos ; } else
 if (nextpos == - 1) { return null; } else { nextpos = nextpos + 1 ; } pos = nextpos ;
 if (nextpos == - 1) { return null; } else { nextpos = nextpos + 1 ; pos = nextpos ; }
 if (nextpos == -1) { break; }
 if (nextpos == -1) { return null; } else { pos = nextpos + 1 ; }
 if (nextpos < - 1) { pos = nextpos + 1; } else
 if (nextpos == -2) { return null; }
 if (nextpos == -2) { return null; } else
 if (nextpos == -1) { return null; } if (nextpos < lastOffset) {
if ( nextpos < 0 ) { pos = 0 ;
 if (pos < 0) if(nextpos == -1) {
 if (nextpos) {
 if (nextpos < 0) { return null; }
 if (nextpos < -1) { return null; }
 if ( nextpos < 0 ) { pos = lastOffset ;
 if ( nextpos < 0 ) { pos = nextpos ;
 if (nextpos == - 1) { return null; } if (nextpos == - 1) { pos = nextpos ; } else
 if (nextpos == -1) { pos = nextpos + 1; }
 if (nextpos == - 1) { return null; } if (nextpos == - 1) { pos = nextOffset; }
if (nextpos == -1 || nextpos == -2) {
 if (nextpos < - 1) { pos = nextpos - 1; } else
 if (nextpos < - 1) { pos = nextpos + 1; }
 if (pos!== -1) {
if (nextpos  < 0 || nextpos > lastOffset) {
if (nextpos == -1 || nextpos < 0 || nextpos > lastOffset) {
 if (nextpos < - 1) { pos = nextpos - 1; }
 if ( nextpos == - 1 ) { return null ; } pos = nextpos ;
 if (nextpos < 0) { return null; } else
 if (nextpos < -1) { break; }
 if (nextpos < 0 || nextpos >1) {
 if ( nextpos < - 1 ) { pos = n ;
 if (nextpos < 0) if (nextpos == -1) {
if (nextpos < 0 || nextpos >= n) {
if (nextpos == -1 || pos < 0) {
 if (nextpos < -1) { return null; } else
 if (nextpos < 0) || (nextpos == -1) {
if (nextpos == -1) { pos = startLine ;
if (nextpos < 0 || pos >= n) {
 if (nextpos < 0) { break; }
if (nextpos == -1)  { pos = n ; startLine = n ;
 if (nextpos == -1) { return null; } pos = nextpos + 1; else
 if (nextpos < 0) {
 if (nextpos < - 1) { pos = nextpos; }
 if (nextpos == n-1) {
 pos = nextpos; if(nextpos == -1) {
 if (nextpos == -1) { pos = nextpos ; } else
if (nextpos == -1 || nextpos < - 1 || nextpos > n) {
if (nextpos == -1 || nextpos == -2 || nextpos == 0) {
if (nextpos == -1 || nextpos < 0 || nextpos > lineNumber) {
 if (nextpos < -1 ||nextpos == -1) {
 if (nextpos < -1) { if(nextpos == -1) {
if (nextpos == -1 || nextpos < 0 || pos > n) {
 if (nextpos < 0 || nextpos!== -1) {
if (nextpos ==  0)
if (nextpos == -1 && n == 0) {
if (nextpos == -1)  { pos = n ; lastLine = n ;
if  (! {
 if (pos < 0 || nextpos ==-1) {
 if (nextpos + 1 == -1) {
if (nextpos  < - 1) { pos = nextpos ;
 if (nextpos == -2) { break; }
 if (nextpos == - 1) { return null; } else { nextpos = nextpos + 1 ; } } else {
if (nextpos == -1 || nextpos > lastOffset) {
if (nextpos == -1 || pos < nextpos + 1) {
 if (next== -1) {
 if (nextpos == -1) { return null; } pos = nextpos + 1; } else
 if (nextpos == -1) if (nextpos == -1) {
if (nextpos < n + 1) {
 if (nextpos == -2) {
 if (nextpos == -2) { if(nextpos == -1) {
 if (nextpos < 0 || pos ==-1) {
 if (nextpos < 0x80){
if (nextpos < 0 || pos < 0) {
 if (nextpos == -1) { continue; }
if (nextpos == -1 || pos == n) {
 if (nextpos < -1) {
if  ( nextpos <= 0) {
 if (nextpos < -1) || (nextpos == -1) {
 if (! pos)
 if (nextpos == -1) { break; } else
 if (nextpos < 0 && nextpos!== -1) {
if (nextpos == -1 && pos == n + 1) {
 if (nextpos == - 1) { return null; } else { nextpos = nextpos + 1 ; } } else
 if (nextpos == - 1) { return null; } else { nextpos = nextpos + 1; } else
if (nextpos == n + 1) {
if (nextpos == -1 || pos < n) {
 if (pos < 0) { if(nextpos == -1) {
if (nextpos == -1 && n == lineNumber) {
if (nextpos == -1) { pos = nextLine ; } else {
 if (nextpos < 0) { continue; }
if (nextpos == -1 && pos < lastOffset + nextpos) {
 if (nextpos == -1) { pos = nextpos ; }
if (nextpos < 0 || nextpos) {
 if (pos-1) {
if (nextpos == -1) { pos = n ; if (!found)
 if (nextpos < - 1) { pos = nextpos ; startLine = nextpos ; } } else
 if (nextpos == -1) || (nextpos == -1) {
 if (n== -1) {
 if (nextpos == -2) || (nextpos == -1) {
 if (nextpos == - 1) { return null; } else { nextpos = nextpos + n ; } } else {
 if (pos == -1 || nextpos ==-1) {
 pos = nextpos + 1;
 if (nextpos < 0x01){
if (nextpos == -1 || nextpos < n + 1) {
if (nextpos == -1) { pos = startLine + 1 ;
 if (nextpos == -1) { } else
if (nextpos == -1) { pos = nextLine ;
 if (nextpos < 0 || nextpos <1) {
if (nextpos == -1 || nextpos < 0 || nextpos > maxOffset) {
 if (nextpos == -1) { return null; } pos = nextpos; else
 if (nextpos == -1 || pos ==-1) {
if  ( nextpos < 0 ) { break;
if (nextpos == -1) { pos = n ; break ; default :
if (nextpos == -1 || nextpos == -2 || pos < 0) {
if (nextpos == -1)  { pos = n ; startLine = 0 ;
 if (nextpos < - 1) { pos = nextpos ; } } else
if (nextpos == -1 && pos == lastOffset + nextpos) {
if (nextpos == -1 || nextpos == n + 1) {
 pos += nextpos; if(nextpos == -1) {
 if (n-1) {
if (nextpos == -1)  { pos = n ; if (break) {
 if (nextpos == -1) { return null; } pos = nextpos + 1; }
 if (nextpos + lineNumber!== -1) {
 if (nextpos < 0x20){
if (nextpos == -1 && pos < nextpos + 1) {
 if (pos < -1 || nextpos!== -1) {
 if (nextpos == - 1) { pos = n ; } else {
 if (nextpos > -1) {
if (nextpos == -1 && pos < lastOffset && nextpos < lastLine) {
 if (pos < 0 || nextpos!== -1) {
 pos = nextpos + 1; if(nextpos == -1) {
if (nextpos == -1 || nextpos < - 1 || pos > n) {
 if (pos + nextpos!== -1) {
 if (nextpos > -1) { if(nextpos == -1) {
 if (nextpos <= -1){
 while (nextpos) { if(nextpos == -1) {
 if (nextpos == -1 || n ==-1) {
if (nextpos == -1 || pos == nextpos + 1) {
if (nextpos == -1 || nextpos == -2 || pos == n) {
 if (nextpos > n + 1){
 if (nextpos > lastOffset){
 if (pos < 0 || nextpos < n-1) {
 if (nextpos < 0 ||! pos){
if (nextpos == -1 || pos < nextpos + -1) {
 if (nextpos < lastOffset ||nextpos == -1) {
if (nextpos < lastOffset + 1) {
 if (nextpos -1) {
 if (pos == -1 || n == -1) {
 if (nextpos == -1 || n-1) {
 if (pos < 0 && nextpos!== -1) {
 if (nextpos == -1) { if(nextpos == -1) {
 if (nextpos - 1 == -1) {
if (nextpos ==  -1) { return null;
 if (nextpos < 0)
 if (nextpos == -1) {
 if (nextpos == - 1) { return null; } else { nextpos = nextpos + 1 ; } } else { else
 if (nextpos == -2) { return null; } else {
 if (false) {
if (nextpos == -1 || nextpos > n) {
if (nextpos == -1 && pos == lastOffset && n == 0) {
 if (nextpos == -1) { return null; } pos = nextpos ; }
if (nextpos == -1 ||! pos) {
 pos = nextpos;
if (nextpos == -1 && pos == n + lineNumber) {
if (nextpos == -1 || nextpos < 0 || nextpos > 255) {
if (nextpos == -1 && pos == -1 && n == 0) {
 if (nextpos >= 0) { if(nextpos == -1) {
 if (nextpos < 0 || n ==-1) {
 if (js.length(pos)== -1) {
 if (nextpos == -1 ||nextpos == -1) {
if  ( nextpos < 0 {
 if (nextpos < -1 || n!== -1) {
 if (pos <= 0){
if (nextpos  < 0xFF) {
if (nextpos == -1 && pos == n - 1) {
 if (nextpos < -1 || (nextpos == -1) {
if (nextpos < 0 || pos < n) {
if (nextpos == -1)  { pos = n ; if (skipAll)
 if (pos < 0 || nextpos <1) {
 if (nextpos < 0 && pos!== -1) {
 if (null) {
 pos = nextpos - 1;
if (nextpos == -1 && pos == -1 && n == lineNumber) {
if (nextpos == -1 || pos < nextpos + lineNumber) {
if (nextpos == -1 || nextpos == lineNumber) {
if (nextpos == -1 && pos == - 1 && nextpos == -1) {
 if (nextpos) if(nextpos == -1) {
 if (nextpos < 0 || pos!== -1) {
if (nextpos == -1 && nextpos == -2 && nextpos == 0) {
 if (nextpos == -2) if(nextpos == -1) {
 if (pos < 0 || pos + 1!== -1) {
 if (nextpos - pos == -1) {
if (nextpos == -1 && pos == lastOffset) {
 if (nextpos == -1 || skip){
 if (nextpos >= 0) {
if (nextpos == -1 || nextpos < 0 || pos >= n) {
 if (nextpos < n){
 if (nextpos + 1) == -1) {
if (nextpos == -1 && nextpos == -2 && nextpos == n) {
 if (pos < 0 || pos ==-1) {
 if (disabled){
 if (! pos {
if (nextpos == -1 && n == lastLine) {
if (nextpos == -1 && pos == lastOffset - nextpos) {
 if (nextpos == -1) { }
 if (nextpos == -2 ||nextpos == -1) {
if (nextpos == -1 && n > lastLine) {
if (nextpos == -1 && pos < lastOffset && pos > lastLine) {
 if (nextpos == -1 || (nextpos == -1) {
 if (nextpos == -1 || -1) {
 nextpos = nextpos + 1;
 if (nextpos == -2) { }
if (nextpos == -1 && pos < n + 1) {
 if (nextpos == -1 || done){
 if (null{
 if (pos < 0) {
if (nextpos == -1 || nextpos < -1) {
if (nextpos ==  -1) { continue;
 if (nextpos > 0) { if(nextpos == -1) {
 if (nextpos == -1) break; else
 if (nextpos < 0 || pos-1) {
if (nextpos == -1 && pos < lastOffset && n == 0) {
 if (nextpos < 0 || n!== -1) {
if (nextpos == -1 && nextpos == -2) {
 if (nextpos >= 0)
 if (nextpos == -1 || false){
if (nextpos ==  -1) { break loop;
 if (nextpos < 0) { } else
 if (nextpos < 0 || (nextpos == -1) {
if (nextpos == -1 && pos < lastOffset && n < lastLine) {
 if (nextpos >= 0) if(nextpos == -1) {
if (nextpos == -1 && nextpos < lastLine && nextpos > 0) {
 if (nextpos == n) {
if (nextpos == -1 || (nextpos + 1) < pos) {
 if (nextpos + 1 == n-1) {
if (nextpos == -1 && pos == n - lineNumber) {
 pos += nextpos;
if (nextpos == -1 && pos < lastOffset - nextpos) {
 if (nextpos + -1!== -1) {
 if (nextpos < 0 || pos <1) {
if (nextpos == -1 && pos < lastOffset && n > 0) {
if (nextpos == -1 && nextpos == n + 1) {
if (nextpos == -1 && pos == -1 && n == -1) {
 if (nextpos < 0) { } if(nextpos == -1) {
if (nextpos == -1 && nextpos < n + 1) {
 if (nextpos++!== -1) {
 if (!found)
if (nextpos == -1 && pos == lastOffset && n > 0) {
 if (pos >= n){
if (nextpos == -1 || nextpos == 0) {
 if (nextpos == -1 ||!nextpos == -1) {
if (nextpos == -1 || (nextpos + 1) > pos) {
if (nextpos  < 0) { return null;
 if (pos < 0 || pos!== -1) {
if (nextpos  < 0xffff) {
 if (nextpos++) {
if (nextpos == -1 && nextpos!= lastOffset) {
 if (pos < 0 && pos!== -1) {
 if (false)
if (nextpos == -1 && n!= lineNumber) {
 if (nextpos < -1) break; else
 if (pos < -1 ||nextpos == -1) {
if (nextpos == -1 || nextpos < 0x80) {
 if (nextpos + lineNumber ==-1) {
 if (null pos){
 if (skip){
if (nextpos == -1 || (nextpos + 1 > n) {
if (nextpos == -1 || (nextpos + 1) > n) {
if (nextpos == -1 || nextpos >= n) {
 if (n <1) {
 if (nextpos < n-1) {
if (nextpos == -1 || nextpos == -1-n) {
 if (nextpos < -1) { }
 if (nextpos - n == -1) {
 if (nextpos < 0) break; else
 if (nextpos < - 1) { pos = nextpos + 1; } }
 if (nextpos)){
 if (pos == 0) {
 if ( pos < 0)
if (nextpos == -1 || ignore) {
if (nextpos == -1 && n > 0) {
if (nextpos == -1) { pos = n ; break ; } else
if (nextpos == -1 && pos == n) {
 if (nextfound) {
 if (!1) {
if (nextpos == -1 || (nextpos + 1 > pos) {
if (nextpos == -1 && n!= 0) {
 if (nextpos < pos+1) {
if (nextpos == -1 || nextpos < n) {
if (nextpos == -1 || pos > n) {
 if (nextpos + 1x ==-1) {
 if (pos < lastOffset ||nextpos == -1) {
 } else{
 if (nextpos + n ==-1) {
if (nextpos == -1) { pos = n ; break ; }
if (nextpos == -1 || n < 0) {
 if (pos[nextpos]== -1) {
 if (!next){
if (nextpos == -1 || nextpos) {
if (nextpos == -1 && n < 0) {
 if (nextpos == 0) {
 if (!nextpos){
if  ( nextpos == - 1 ) { break,
 if (null)
 if (nextpos < 0 ||! pos)){
 if (nextpos --!== -1) {
 while (nextpos == -1) {
 if (pos = nextpos!== -1) {
if (nextpos == -1) { pos ++;
 if (pos (nextpos!== -1) {
 if (!pos + nextpos!== -1) {
 if (nextpos <= n-1) {
 if (nextpos < 0) { }
if (nextpos == -1) { pos = n + 1';
 while (nextpos == n-1) {
if (nextpos  < 1)
 if (!found) {
if (nextpos == -1) { pos = n ; break ; else
 if (n!== -1) {
 if (pos < lastOffset|nextpos == -1) {
if  ( {
if (nextpos ==  -1) { break; }
if (nextpos  <= 0)
if (nextpos == -1)  { n = 0;
if (nextpos ==  pos)
 if (pos < 0) ||(nextpos == -1) {
 if () {
if (nextpos ==  -1) { break loop();
if (nextpos == -1) { pos = n + 1 ; }
 if (nextPos) {
if (nextpos ==  -1 {
 if (() {
 if (!== -1) {
 if (pos == 0 ||nextpos == -1) {
 if (nextpos!= -1) {
if (nextpos ==  n)
 if (false{
if (nextpos  < n)
 while (nextpos!== -1) {
 if ((nextpos!== -1) {
 if ($pos!== -1) {
 if (!nextpos!== -1) {
 if (pos < 0|nextpos == -1) {
 if (pos == n ||nextpos == -1) {
if (nextpos ==  -1) break;
 if (.){
 if (1) {
if  ()
if (nextpos == -1 && pos == -1 &&! greedy) {
if (nextpos ==  null)
 + 1; if (nextpos == -1) {
 if (pos >= n ||nextpos == -1) {
 if (+1) {
 if (+) {
if (break)
if (nextpos == -1 ||!found) {
if (skip)
if (disabled {
 if (!-1) {
 pos = nextpos ; }
 pos += nextpos ; }
 pos = nextpos ; else
if (nextpos == -1 &&!debug) {
 + n; if (nextpos == -1) {
if (nextpos ==  lastOffset) {
if (nextpos ==  +1) {
if  (null
 pos = nextpos();
if (nextpos ==  -2) {
if (nextpos == -1 &&!continue) {
if (nextpos == -1 &&!reverse) {
if (nextpos == -1 ||!continue) {
 + 1;
 if ((== -1) {
if (nextpos == -1 &&!sync) {
 } else { if (nextpos == -1) {
if (nextpos == -1 &&!skip) {
 + n;
 + 1; else if(nextpos == -1) {
if (nextpos == -1)  { break();
 { if (nextpos == -1) {
if (nextpos ==  -1)) { #
 ++ n; } if(nextpos == -1) {
 + 1; else
if (nextskip) {
 if!{
 ++n; else if(nextpos == -1) {
 ++ n; else
 + n; else if(nextpos == -1) {
 + 1; }
 ++ n; }
 } else if (nextpos == -1) {
if (nextpos  == {
 + n; else
 if ((-1) {
if (found) {
if (nextpos == -1);
 } { if (nextpos == -1) {
 { } if (nextpos == -1) {
 + 2;
 if (>-1) {
if (nextpos == -1) break and
 if ((nextpos == -1) {
 if (!nextpos == -1) {
 while (== -1) {
 { if ((nextpos == -1) {
 { if (!nextpos == -1) {
if (nextpos == -1.) {
 { while (nextpos == -1) {
if (nextpos == -1)  break();
 } else
if (nextpos === -1) {
 { }If(nextpos == -1) {
 }
 ;
 {If(nextpos == -1) {
if (nextpos == "-1) {
if (nextpos == $1) {
