int lineNumber = n.getLineno();
 n.getLineno();
 int lineNumber;
 lineNumber= n.getLineno();
int  lineNumber = n.getLineNumber();
 int lineNumber=getLineno();
int  lineNumber = n.line();
 int lineNumber();
 int lineNumber = getLine();
int  lineNumber = n.getLine();
 lineNumber=getLineno();
 line = n.getLineno();
 int lineNumber(n);
 int lineNumber = ngetLineno();
 int lineNumber = nn.getLineno();
 int lineNumber = n.line);
int  lineNumber = 0 ;
int  lineNumber = n.lineNumber();
 final int lineNumber = n.getLine();
 final int lineNumber = n.getLineno();
 int lineNumber = 1;
 int lineNumber = line();
 final int lineNumber = n.getLineNumber();
 int lineNumber = curNode.getLineno();
 final int lineNumber = n.line();
 final int lineNumber = curNode.getLineno();
 int lineNumber = (int);
 int lineNumber++;
 final int lineNumber = nn.getLineno();
int lineNumber = n.getLineno(); int lineNumber = n.getLine();
int  lineNumber = n.line;
int lineNumber = n.getLineNumber(); int columnNumber = 0;
 int lineNumber = n.getLine(();
 int n.getLineno();
 int lineNumber = n.lineNumber);
int  lineNumber = n.lineNumber;
 lineNumber;
 int line = n.getLineno();
 int lineNumber = n.getLineNumber(();
int lineNumber = n.getLineNumber(); int sourceName = n ;
 String sourceName = n. getSourceName ( ) ;
 final int lineNumber = n.line;
int lineNumber = n.getLineno() + 1;
int  lineNumber = lineNumber();
 else { String sourceName = n. getSourceName ( ) ;
int lineNumber = n.getLineno() - 1;
 else { String sourceName = n. getName ( ) ;
 final int lineNumber = n.getLineNumber;
int lineNumber = n.getLineno(); int sourceName = n.getName();
int lineNumber = n.getLineno(); int lineNumber = n.line();
 final int lineNumber = n.getLine(); final
 final int lineNumber = n.getLineNumber(); final
 lineNumber = n.getLineNumber(();
int lineNumber = n.getLineNumber(); int lineNumber = 0 ;
 final int lineNumber = n.getLine;
 else if ( n == null ) { return MISSING_SOURCE ; } String sourceName = n. getSourceName ( ) ;
 final int lineNumber = n.line(); final
 else if ( n!= null ) { return MISSING_SOURCE + n. getPosition ( ) ; }
 sourceName = n. getSourceName ( ) ;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getPosition ( ) ; }
int lineNumber  = n.getLineNumber() - 1;
int lineNumber = n.getLineNumber(); int sourceName = "" ;
 else { String sourceName = n. getString ( ) ;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getLineNumber ( ) ; }
 String sourceName = n. getName ( ) ;
 String sourceName = n. getName ( ) ;
 lineNumber = n.getLineNumber();
int lineNumber = n.getLineno(); int sourceName = n ;
 int lineNumber = n.getParent().getLineno();
 else if ( n!= null ) { return MISSING_SOURCE + n. getPosition ( ) ;
 final int lineNumber = 0 ;
 int lineNumber = 1();
 int lineNumber = lineNumber ;
 else if ( n!= null ) { return MISSING_SOURCE + ": " + n. getPosition ( ) ; }
int lineNumber = n.getLineno(); int lineNumber = n.getColumn();
 else if ( n!= null ) { String sourceName = n. getName ( ) ;
 final int lineNumber = 1 ;
 else { String sourceName = n. getSourceName ( ) + "";
 sourceName = ""; lineNumber = n.getLineNumber();
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. position ; }
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getPosition ( ) ;
 else if ( n!= null ) { return MISSING_SOURCE + n. getLineNumber ( ) ;
 else if ( n!= null ) { return MISSING_SOURCE + n. getLineNumber ( ) ; }
 if ( n!= null ) { int lineNumber = 0 ;
 else if ( n!= null ) { return MISSING_SOURCE + n. getPosition ( ) }
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getLineNumber ( ) + "\n"; }
 int lineNumber = n.(line);
 String lineNumber = n.getLineNumber(();
 String sourceName = ""; int lineNumber= n.getLineno();
int lineNumber = n.getLineno(); int lineNumber = lineNumber ;
 SourceLine lineNumber = n.getLine();
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getLineNumber ( ) ;
 else if ( n!= null ) { return MISSING_SOURCE + ": " + n. getPosition ( ) ;
 final int lineNumber = lineNumber;
 final int lineNumber = getLine();
 final String sourceName = n. getName ( ) ;
int lineNumber = n.getLineno(); int sourceName = n.getSourceFile();
 Line number = n.getLineNumber();
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getPath ( ) ; }
 else if ( n!= null ) { return MISSING_SOURCE + ":" + n. getLineNumber ( ) ;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getPosition ( ) }
 else { String sourceName = n. getSource ( ) ;
 final String sourceName = n. getSourceName ( ) ;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getLineNumber ( ) + ""; }
 else { String sourceName = n. getText ( ) ;
 else if ( n!= null ) { return MISSING_SOURCE + ":" + n. position ; }
 final int lineNumber = n.getLine(();
 SourceLine lineNumber = n.getLineNumber();
 else if ( n!= null ) { return MISSING_SOURCE + ":" + n. getLineNumber(); }
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getName ( ) + "\n"; }
 final int lineNumber = 0 ; final
 int lineNumber = n.line(();
 LineNumber lineNumber = n.line();
 final int lineNumber = (int) n.getLineno();
 else if ( n == null ) { return MISSING_SOURCE ; } String sourceName = sourceName ;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getPath ( ) + "\n"; }
int lineNumber = n.getLineno(); String sourceName = n.getName();
 if ( n!= null ) { lineNumber = n. line ;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getPath ( ) + ""; }
 if ( n == null ) { return MISSING_SOURCE ; }
 Source sourceName = n. getSourceName ( ) ;
 else if ( n!= null ) { String sourceName = n. getString ( ) ;
 Source lineNumber = n.getLineNumber();
 else if ( n!= null ) { return MISSING_SOURCE + ": " + n. getLineNumber ( ) + ""; }
 int lineNumber = (int) n.getLineno();
 LineNumber lineNumber = curNode.getLineno();
int lineNumber = n.getLineno(); int lineNumber = 0 ;
int lineNumber = n.getLineno(); int sourceName = sourceName ;
 final int lineNumber = line ; final
 String sourceName = n. getString ( ) ;
 else if ( n!= null ) { sourceName = ""; curNode = n ; }
 final int lineNumber = 1 ; final
int lineNumber  = n.getLineNumber ( ) ; final
 if ( n!= null ) { int lineNumber = 1 ;
 else if ( n == null ) { return MISSING_SOURCE ; } sourceName = n. sourceName ;
 final int lineNumber = n.line; final
 sourceName = n. getName ( ) ;
 int lineNumber = n(line);
 if ( n!= null ) { return MISSING_SOURCE + ""; }
int lineNumber = n.getLineno(); int lineNumber = columnNumber;
 sourceName = ""; lineNumber = n.line();
 else { String sourceName = n. getSourceName ( ) + ":" ;
int  line ;
 final int sourceName = ""; int lineNumber= n.getLineno();
 sourceName = ""; lineNumber = n.getLine();
 else { String sourceName = n. getFullName ( ) ;
int lineNumber = n.getLineno(); int sourceName = lineNumber ;
 int lineNumber = position();
int lineNumber = n.getLineno(); int sourceName = "" ;
int lineNumber = nLine();
 if ( n!= null ) { sourceName = ""; curNode = n;
 else { String sourceName = n. getName ( ) + "";
 int lineNumber = n.getLineNumber()n.getLineno();
 else { String sourceName = n. getName ( ) + ":" ;
int lineNumber = n.getLineno( ) + n.getColumn ( ) ;
int lineNumber = n.getLineno(); int colNumber = n.column;
 int lineNumber =.getLineno();
int lineNumber = n.getLineno(); int colNumber = n.column();
 else if ( n!= null ) { return MISSING_SOURCE + " " + n ; }
 else { sourceName = n. getName ( ) ;
 final int lineNumber = n.getParent().getLineno();
 else if ( n!= null ) { sourceName = ""; curNode = n ; } final
 String sourceName = n.getSourceName(();
 else if ( n!= null ) { return MISSING_SOURCE + ": " + n. getLineNumber ( ) }
 lineNumber = n.getLine();
 else { String sourceName = n. getSourceName ( sourceName ) ;
int lineNumber = n.getLineno(); int lineNumber = n.line;
 LineNumber lineNumber = n.getLineno();
 int lineNumber = n.getLineNumber();n.getLineno();
 if ( n!= null ) { sourceName += ":" + n. name ; }
 sourceName = ""; lineNumber = n.lineNumber();
 final int lineNumber = lineNumber = n.getLineno();
 sourceName = n. getSourceName ( lineNumber ) ;
 final int lineNumber = n.file.getLineno();
 if ( n!= null ) { int lineNumber = lineNumber ;
 else if ( n == null ) { return MISSING_SOURCE ; } sourceName = n. sourceName();
 String sourceName = n. getSource ( ) ;
 String sourceName = n. sourceName ;
 String sourceName = ""; int lineNumber;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getLineNumber ( ) ; } final
 else { String sourceName = ""; sourceName += n.getName(); }
 String sourceName = n.getSourceName;
int  lineNumber = sourceLine();
 else { String sourceName = n. getName ( ) + ":" + n ;
 else { sourceName = n. getSourceName ( ) ; }
 final String sourceName = ""; int lineNumber= n.getLineno();
 String sourceName = n ;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n ; } final
 String sourceName = n. getSource ( ) ;
 else { String sourceName = n. getName ( ) + ":" + 0 ;
 String lineNumber = n.getLine();
int lineNumber = n.getLineno(); int columnNumber = 0;
int lineNumber = n.getLineNumber(); int colNumber = [];
 else { String sourceName = n. getSourceName ( ) + "\n" ;
 int lineNumber = n.file.getLineno();
 String lineNumber = n.getLineNumberString();
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. position ; } final
 final String sourceName = n. getName(); final
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getPosition ( ) ; } final
 String sourceName = ""; lineNumber = 1;
 final int lineNumber = n.lineNumber();
 final int lineNumber = n.lineNumber;
 if ( n!= null ) { return n. getPosition ( ) }
 else if ( n!= null ) { return MISSING_SOURCE + ":" + n ; } final
 int lineNumber = lineNumber = n.getLineno();
 else { String sourceName = n. getString ( ) + "";
int lineNumber = n.getLineno(); int lineNumber += ": " ;
 final String sourceName = n. getSourceName ( ) ; final
 else if ( n!= null ) { return MISSING_SOURCE + " " + n + " " + n + "\n"; } final
 popScope();
 int lineNumber = (lineNumber);
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getParent ( ) + "\n"; } final
 String sourceName = ""; int lineNumber++;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getLineNumber ( ) ; } }
 String sourceName = ""; lineNumber = 0;
 else { String sourceName = n. getSourceName ( ) ; final
 String sourceName = n.getName;
 Line number = n.getLine();
int lineNumber = n.getLineno( ) + n.getColno( ) ;
 if ( n!= null ) { return n. getPosition ( ) ;
 int lineNumber (*);
 final int lineNumber = n.source.getLineno();
 return n. getPosition ( ) ;
 final String sourceName = "" ;
 else if ( n!= null ) { return MISSING_SOURCE + ": " + n. getLineNumber ( ) ; } final
int lineNumber = n.getLineno() ; int lineNumber = n.lineNumber();
int lineNumber = n.getLineno(n).getLineNumber ( ) ;
 final String sourceName = sourceName ;
int  lineNumber = n.lineno();
 int lineNumber = 0();
 final int sourceName = ""; lineNumber= n.getLineno();
 pushScope();
 final String sourceName = sourceName();
 final int lineNumber = sourceName + n.getLineno();
int lineNumber = n.getLineno(n).getLineNumber() + 1;
 else if ( n!= null ) { return MISSING_SOURCE + " " + n. getLineNumber ( ) ; } } static
 String lineNumber = n.getLineNr();
 final LineNumber lineNumber = nn.getLineno();
 else if ( n!= null ) { return MISSING_SOURCE + "\n"; } final
 else { String sourceName = sourceName();
 final int lineNumber = 0 ; int lineNumber= n.getLineno();
 final String sourceName = ""; final
 final int sourceName ; int lineNumber= n.getLineno();
 final int lineNumber = n.location.getLineno();
 lineNumber = n.line();
 sourceName = n. getSourceName ( ) ; final
 int lineNumber = n.source.getLineno();
 final int lineNumber = 1+n.getLineno();
int  lineNumber = n.eno();
 LineNumber lineNumber = getLine();
 final int lineNumber = "Line: "+n.getLineno();
 else { String sourceName = n ;
 else { String sourceName = sourceName ;
 else if ( n!= null ) { return MISSING_SOURCE + n. position ; } final
 else if ( n!= null ) { sourceName = ""; curNode = n ; } }
 SourceName sourceName = ""; lineNumber=n.getLineno();
 String sourceName = n.getSource;
 SourceLineLine lineNumber = n.line();
int  lineNumber = - 1 ;
 int lineNumber = sourceLine ;
 Source compiler = getSource ( n ) ; intlineNumber = n.getLineno();
 int lineNumber = n.location.getLineno();
int lineNumber = n.getLineNumber(); int colNumber = ;
 final String sourceName = n ;
 String sourceName = n.getSourceFile;
int lineNumber = n.getLineNumber(); int columnNumber = [];
 int lineNumber1();
 int lineNumber = sourceName.getLineno();
 final int lineNumber = "line: "+n.getLineno();
 Source compiler = getCompiler ( ) ; intlineNumber = n.getLineno();
int  lineNumber = n.getlineNumber();
 final int sourceName = ""; final intlineNumber = n.getLineno();
int lineNumber = n.getLineno() ; int lineNumber = n.lineNumber;
 SourceLine compiler = (SourceLine)n.getLineno();
 final int lineNumber = "line "+n.getLineno();
 final LineNumber lineNumber = n.getLineno();
 final int sourceName = ""; int _lineNumber = n.getLineno();
 int lineNumber = lineNumber);
int  lineNumber = n.getLineNumber;
 else { String sourceName = n. getName ( ) ; final
 final int lineNumber = 1 ; int lineNumber= n.getLineno();
int lineNumber = n.getLineNumber(); int colNumber = 0
 LineNumber lineNumber ;
 int lineNumber = n. parent ( ).getLineno();
 int lineNumber = "Line: "+n.getLineno();
 Source compiler = getSource ( ) ; lineNumber= n.getLineno();
 Source sourceName = n.getSource;
 return formatNodePosition(n);
 final int lineNumber = sourceLine;
 int lineNumber.getLineno();
 Line numberNumber = curNode.getLineno();
int lineNumber = n.getLineno() - n.lineno();
 int lineNumber = sourceName);
int lineNumber = n.getLineNumber(); int columnNumber = 0
 final int lineNumber = cn.getLineno();
 int lineNumber = ln.getLineno();
 String sourceName = n ; int lineNumber= n.getLineno();
 Source lineNumber = (Source) n.getLineno();
 int lineNumber = 0 ; line = n.getLineno();
 final int lineNumber = curn.getLineno();
 int lineNumber = cn.getLineno();
 final int sourceName = ""; final int _lineNumber = n.getLineno();
 final int lineNumber ; int lineNumber= n.getLineno();
 final int sourceName = "", lineNumber= n.getLineno();
 LineNumber lineNumber = nn.getLineno();
 int lineNumber = sourceName;
 else { final int lineNumber= n.getLineno();
 final LineNumber lineNumber = curNode.getLineno();
 int lineNumber++();
 Source lineNumber = n.getLineNumberString();
int  lineNumber = n.lineno;
 final int lineNumber = ln.getLineno();
 Source lineNumber = n.line;
 int lineNumber = n.getLine();n.getLineno();
 int lineNumber=(1);
 Source compiler = getSource ( ) ; intlineNumber = n.getLineno();
 int lineNumber = "line: "+n.getLineno();
 SourceName sourceName = sourceName + n.getLineno();
 final int lineNumber = n.lineNumber = n.getLineno();
 int lineNumber = curn.getLineno();
 lineNumber = lineNumber ;
 lineNumber = n.lineNumber);
 String lineNumber = 1 ;
 lineNumber(n);
int lineNumber = n.getLineno() ; int lineNumber = lineNumber();
 final int sourceName = ""; int nlineNumber = n.getLineno();
 final String sourceName = "source unknown";
 else { String sourceName = "; " ;
 LineNumber = n.getLineno();
 int lineNumber --;
 int lineNumber2();
 Line lineNumber = n.getLineno();
 final int lineNumber = sourceName;
 lineNumber = 1 ;
 final int sourceName ; final intlineNumber = n.getLineno();
 int lineNumber = n.getParent()*.getLineno();
 int lineNumber=();
 final int lineNumber = 1();
 String lineNumber(n);
 int lineNumber = (int) curNode.getLineno();
 int lineNumber = lines();
 else { return n. getPosition ; } }
 int lineNumber = "( ");
 final lineNumber = (int)n.getLineno();
 else { String sourceName = " " ;
 String sourceName = "" ;
int lineNumber = n.getLineno().getLineNumber();
 final int sourceName = ""; final int nlineNumber = n.getLineno();
 else { String sourceName ; lineNumber= n.getLineno();
int lineNumber  = n.getLineNumber ( ) ; static
int lineNumber = n.getLineno() - n.lineno;
 final LineNumber lineNumber = 1+n.getLineno();
int lineNumber =  n.getLineNumber() - 1; final
 int line = 1();
int  lineNumber = n.line(),
 SourceLineNumber lineNumber = nn.getLineno();
 final
int lineNumber = n.getLineno() + n.getColeno() ; final
 final int lineNumber *= n.getLineno();
 else { return n. getPosition(); } }
int lineNumber =  n.getLineNumber() + 1; final
 int (lineNumber);
int lineNumber = n.getLineno() + n.getColumnNumber() ; final
 String sourceName = sourceName ; intlineNumber = n.getLineno();
int lineNumber = n.getLineno() + ": " ;
 else { return n. getPosition ; } final
 String sourceName = ""; int _lineNumber = n.getLineno();
 int lineNumber = n;
int lineNumber = n.getLineno() + n.getColno() ; final
 int lineNumber=(0);
 String src = null;
 final int lineNumber; lineNumber= n.getLineno();
 lineNumber n.getLineno();
 int sourceName = n.lineNumber = n.getLineno();
int lineNumber = n.getLineno(); int colNumber = [];
int lineNumber  = n.getLineNumberNumber(); final
 int lineNumber(1);
int lineNumber  = n.getLineNumber(n); final
int lineNumber = n.getLineno(n).getLineNumber() ; final
 int lineNumber ; final
 final int lineNumber = line+n.getLineno();
 String src = "" ;
int lineNumber = n.getLineno(n).getLineNumber() + 1 ; final
int lineNumber = n.getLineno(n).getLineNumber() - 1 ; final
 SourceName sourceName = sourceName = n.getLineno();
int lineNumber =  n.getLineNumber().toString(); final
 final int lineNumber = ngetLineno();
 lineNumber = curNode.getLineno();
 final int sourceName, lineNumber= n.getLineno();
int lineNumber =  n.getLineNumber().getValue(); final
int  lineNumber = n.getLineNumber()); final
 int lineNumber = 2;
 else { int lineNumber= n.getLineno();
 final int lineNumber = "(line")n.getLineno();
int  lineNumber = final
 else { int sourceName, lineNumber= n.getLineno();
 final int lineNumber = 0;lineNumber = n.getLineno();
int  lineNumber = [];
 int sourceName = "";lineNumber = n.getLineno();
 return formatNodePosition(); }
 return sourceName ;
int lineNumber = n.getLineno() + n.getColumn(); final
 final lineNumber = n.getLineno();
int lineNumber =  n.getLineNumber(sourceName); final
 final final int lineNumber= n.getLineno();
 Line numberLineNumber = n.getLineno();
 final String sourceName ; final
 String sourceName = ""; int newlineNumber = n.getLineno();
int lineNumber = n.getLineno(n).getLineNumber(n); final
 LineNumber lineNumber();
int lineNumber = n.getLineno(); int colNumber = ;
 lineNumber = ngetLineno();
 int lineNumber);
 print(n);
int  lineNumber
 final lineNumber = n.lineNumber = n.getLineno();
int  lineNumber = ;
int lineNumber = n.getLineno() ; int lineNumber = lineNumber +
 final LineNumber <> line= n.getLineno();
int lineNumber = n.getLineno(); int colNumber = 0
 final int sourceNameLineNumber= n.getLineno();
 String sourceName = [];
 return sourceName();
 long lineNumber();
int lineNumber = n.getLineno() + n.getColeno() ; static
int lineNumber = n.getLineno() - n.getLine(); final
int lineNumber = n.getLineno() + n.getColumnNumber() ; static
 final lineNumber, lineNumber= n.getLineno();
 final int sourceName lineNumber= n.getLineno();
int lineNumber = n.getLineno(); int sourceName ; final
 int line =.getLineno();
int  line,
int lineNumber = n.getLineno(n).getLineNumber() ; static
int lineNumber = n.getLineno() - n.getColumn(); final
 final int lineno *= n.getLineno();
int lineNumber = n.getLineno(n.getFileName()); final
; int lineNumber= n.getLineno();
int lineNumber = n.getLineno ( ) ; final
 int lineNumber *= n.getLineno();
 private static final intlineNumber = n.getLineno();
 lineNumber.getLineno();
 String lineNumber();
int lineNumber = nLine;
int lineNumber = n.getLineno(n.getLineNumber()); final
 lineNumber ++();
 intLine = n.getLineno();
int lineNumber = n.getLineno( ) + 1 ; final
 lineNumber =.getLineno();
 final int lineNumber = sourceName= n.getLineno();
int  line();
 int number = n.getLineno();
int lineNumber = n.getLineno() * 2;
 private static final int _lineNumber = n.getLineno();
 Integer lineNumber = n.getLineno();
int lineNumber = n.getLineno() + ": " +
int lineNumber = n.getLineno() + ": " ; final
 line(n);
(n);
int lineNumber = n.getLineno(n).getLineNumber;
int lineNumber = nline();
int lineNumber = n.getLineno() - n.line; final
int lineNumber = n.getLineno( ) - 1 ; final
 return " " ;
int lineNumber = n.getLineno().getLineNumber;
int lineNumber = n.getLineno(0);
int  lineNumber,
 final int _lineNumber = n.getLineno();
 int lineNum=getLineno();
 String lineNumber = n.getLineno();
 private final int _lineNumber = n.getLineno();
 line number n.getLineno();
int lineNumber = n.getLineno(); int colNumber; final
 private static final LineNumberlineNumber = n.getLineno();
 long lineNumber = n.getLineno();
 private final LineNumberlineNumber = n.getLineno();
int lineNumber = n.getLineno(*) ;
int lineNumber = n.getLineno(n).getLine(); final
 ++ n.getLineno();
 else { final
int lineNumber = n.getLineno(n.getLine()); final
 private static final lineNumberlineNumber = n.getLineno();
 lineNumber=(getLineno();
 private final LineNumber _lineNumber = n.getLineno();
 private final lineNumberlineNumber = n.getLineno();
int lineNumber = n.getLineno() - sourceName; final
int  lineNumber =
 LineNumber;
int lineNumber = n.getLineno(sourceName) ;
int lineNumber = nline;
Line=n.getLineno();
 })();
 return sourceName++;
int lineNumber = n.getLineno(?) ;
 static final intlineNumber = n.getLineno();
 long lineNumber;
 static { intlineNumber = n.getLineno();
 lineNumber=(n.getLineno();
 String lineNumber;
 int lineNum = n.getLineno();
 int lineno *= n.getLineno();
 int lineno:= n.getLineno();
 else {
int lineNumber = n.getLineno( ) + 1 ; static
 } else {
int lineNumber = n.getLineno(0) ; final
 }, null);
 lineNumber (*);
 int _lineNumber = n.getLineno();
 lineNumber();
 } { final
 int pos;
int lineNumber = n.getLineno() + ";" ;
int lineNumber = n.getLineno(sourceName); final
 int position;
 pushNode();
 } ; final
 PopScope();
 line n.getLineno();
 }, 0);
 popNode();
 } { static
 LineNumber line;
 static intlineNumber = n.getLineno();
int lineNumber = n.getLineno(1); final
LineNumbern.getLineno();
 int line number;
 line number.getLineno();
 } {
 int nlineNumber = n.getLineno();
int lineNumber = n.getLineno(n); final
 } final
 line number= n.getLineno();
 } static
int lineNumber = n.getLineno(1); static
int lineNumber = n.getLineno(0); static
 lineNum= n.getLineno();
int lineNumber = n.getLineno() ; static
 static
 node.getLineno();
 n().getLineno();
 n._getLineno();
int lineNumber = n.getLineno()); final
int lineNumber = n.getLineno()();
int lineNumber := n.getLineno();
int lineNumber, n.getLineno();
int lineNumber += n.getLineno();
