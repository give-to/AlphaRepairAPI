case SYNTHETIC_BLOCK_PROP: return "synthetic";
 case IS_SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "block";
 case SYnthetic: return "synthetic";
 case SYnthetic_NAME: return "synthetic";
 case Synthetic: return "synthetic";
 case SYNTHETIC_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "syntotic_block";
 case SYnthetic_PROP: return "synthetic";
 case SYNTHETIC:return "synthetic";
 case SYNTHETIC_NAME: return "synthetic";
 case SYNTAX_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "syntoticblock";
case SYNTHETIC_BLOCK_PROP: return  "symbol";
case SYNTHETIC_BLOCK_PROP: return  "syntaxblock";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_props";
 case SYNETIC_PROP:return "synthetic";
 case SYntIC_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "syntotic_block_props";
 case SYNTHON_PROP: return "synthetic";
 case SYNTHETIC_PROPERTY: return "synthetic";
 case SYNTAX_PROPERTY: return "synthetic";
 case _SYNTHETIC_BLOCK_PROP: return "synthetic";
 case synthetic: return "synthetic";
 case SYNTAX_NAME: return "synthetic";
case  EMPTY:
 case SYNTHONIC_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "syntactic_block";
 case SYNTHETETIC: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block";
 case SYNTHONIZED: return "synthetic";
 case SYNTHETIC_OR_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case SYNETIC:return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "syntolicblock";
 case SYNTHETIC_SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_name";
 case SYNCHRONOUS_PROP: return "synthetic";
 case SYNTAX_SYNTAX: return "synthetic";
 case SYntIC_NAME: return "synthetic";
 case SYNETIC_PROPERTY: return "synthetic";
 case SYnthetic_PROPERTY: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "syntactic_block_props";
 case SYNTAX: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "syntholicblock";
 case Symbol: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "";
 case SYNETIC_SYNETIC: return "synthetic";
 case SYNETIC_NAME:return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "syntotic_block_name";
case  BLOCK:
case  EMPTY_PROP:
case SYNTHETIC_BLOCK_PROP: return  "synthologic_block_prop";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_prop";
case SYNTHETIC_BLOCK_PROP: return  "syntotic_block_prop";
 case SYnthetic_TYPE: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_property";
 case IS_SYNTHETIC: return"synthetic";
 case SYNTHETIC_AND_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case SYNC:return "synthetic";
 case IS_SYNTHETIC_NAME: return "synthetic";
 case SYntheticPROP: return "synthetic";
 case SYNTIC:return "synthetic";
 case SYNIC:return "synthetic";
 case SYNThetic:return "synthetic";
 case SYNTHETETIC_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case SYNTHETIC_PATTERN: return "synthetic";
 case SIDE_EFFECT_SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  "symbolblock";
 case SYNTHIC_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case OP_FLAG: return "op_flag";
 case SYntICES: return "synthetic";
 return "opt_arg_name;
 case SYNTHETIC: case _SYNTHETIC_BLOCK_PROP: return "synthetic";
 case STRING_PROP: case IS_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_FLAG: return "extended_flag"; case COMPUTED_FLAG: return "compute_flag";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended_flag";
 case SYntIC:return "synthetic";
 case SYNOPSY: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "sync";
case SYNTHETIC_BLOCK_PROP: return  "synthblock";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended_extended";
 case SYNETIC_TYPE:return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case "empty_block";
 case SYntheticNAME: return "synthetic";
 case EXTENDED_FLAG: return "extended_flag"; case COMPUTED_FLAG: return "compute_compute";
 case SYNTHETIC_BLOCK_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case SYNTHETIC_TYPE:return "synthetic";
 case EXTENDED_NAME: return "extended_name"; case EXTENDED_STRING: return "extended_string";
 case SYNTHETICBLOCK_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case STRING_PROP: case _SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_NAME: return "extended_name"; case EXTENDED_STRING: return "extended_strings";
 case EXTENDED_FLAG: return "extended_flag"; case COMPUTED_FLAG: return "computed_flag";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown_type";
case SYNTHETIC_BLOCK_PROP: return "synthetic" + "synthetic_block_name";
 case EXTENDED: return "extended";
case SYNTHETIC_BLOCK_PROP: return "syntax";
case SYNTHETIC_BLOCK_PROP: return "synonyms";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown_property";
case  IS_BLOCK:
case SYNTHETIC_BLOCK_PROP: return "blocks";
 case EXTENDED_FLAG: return "extended_flag";
case SYNTHETIC_BLOCK_PROP: return "cyclic";
 case SYNETIC_FLAG:return "synthetic";
 case IS_NAMESPACE : return "is_namespace"; case IS_DISPATCHER:
case SYNTHETIC_BLOCK_PROP: return "synthetic" + "block_name";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended flag";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended";
case  EMPTY_NAME:
 case SYntIAL: return "synthetic";
 return "opt_arg_name";
 case EXTENDED_FLAG: return "extended_flag"; case COMPUTED_FLAG: return "computeflags";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_NAME: return "extended_name";
case SYNTHETIC_BLOCK_PROP: return "symblock";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended_flags";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case EXTENDED_BLOCK:
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extendedflags";
case  EMPTY_NAME: return "empty";
 case PUT_FLAG: return "put_flag";
 case EXTENDED_FLAG: return "extended";
 case SYNETIC_PROP: #"synthetic";
 case SIDE_EFFECTED_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case SIDE_EFFECTIVE_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED : return "extended" ; }
 case EXTENDED_NAME: return "extended_name";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown_prop";
case SYNTHETIC_BLOCK_PROP: return  "synchronized";
case  COMPUTED_PROP:
 case EXTENDED_FLAG: return "extended_flag"; case COMPUTED_FLAG: return "computed flag";
 case EXTENDED_NAME : return "extended_name"; default : return "unknown property";
 case SYNTHETIC_FLAG:return "synthetic";
 case SYNTHETIC : case IS_SYNTHETIC_BLOCK_PROP: return "synthetic";
case  EMPTY_STRING:
 case EXTENDED_NAME : return "extended_name"; default : return "unknown_prop";
 case EXTENDED_FLAG: return "extended flag";
 case EXTENDED_BLOCK: case IS_SYNTHETIC_BLOCK_PROP: return "synthetic";
case  EMPTY_NAME: return "empty name";
 case EXTENDED_NAME : return "extended_name"; default : return "unknown_prop"; }
 case SYN: return"synthetic";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_NAME: return "extendedname";
 case DEFAULT_SYNTHETIC_BLOCK_PROP: return "synthetic";
 } return post_flag;
 case EXTEND: return "extend";
 case ANONYMOUS_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "endedflag";
 case EXTENDED_NAME : return "extended_name"; default : return "unknown prop type";
case SYNTHETIC_BLOCK_PROP: return  null;
 case EXTENDED_FLAG: return "extended_flag"; case COMPUTED_FLAG: return "compute_flag"; break;
 case EXTENDED_NAME : return "extended_name"; default : return "unknown property"; }
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown_props";
 case EXTENDED_NAME: return "extendedname";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "ended";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown type";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "flag";
case  PREFERRED_NAME: return "prefix";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extendedFlag";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "endedflags";
 case SYNTHETIC_PROP::return "synthetic";
 case EXTENDED_NAME : return "extended_name"; default : return "unknown type";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended_extended"; }
 case EMPTY_NAME: return "empty;
 case EXTENDED_BLOCK: case EXTENDEDSYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended_flag"; break ; }
case  EXTENDED: return "extended";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended_flag"; }
 switch (propType)
 case OP_FLAG: return "op_flags";
case  COMPUTED_BLOCK:
case  NO_BLOCK:
 case EXTENDED_NAME : return "extended_name"; default : return "unknown_property"; }
 case SYNETIC_PROP: returns"synthetic";
 return "opt_args_name;
 case EXTENDED_NAME : return "extended_name" ; default : return "unknown"; }
 case EXTENDED_FLAG: return "extended_flag"; default : return "unknown_prop" ; }
 case EXTENDED_NAME: return "extended_name"; case EXTENDED_FLAG: return "flag";
 return "option_arg_name;
 case SYNETIC_PROPS: return"synthetic";
 return "opt_arg_name";;
 case EXTENDED_FLAG: return "extended_extended";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown property";
 case EXTENDED_NAME : return "extended_name" ; }
 case EXTENDED_NAME : return "extended_name"; default : return "unknown prop"; }
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown_property"; }
 case EXTENDED_NAME : return "extended_name"; default : return propType ;
 case COMPUTED_PROP: return "compute_props";
case  COMPUTED_NAME: return "comp";
case SYNTHETIC_BLOCK_PROP: return "synthetic" + "static_block_name";
 case EMPTY_NAME;
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended_extended; }
 case EXTENDED_FLAG: return "extended_flag"; default : return "unknown property";
 return "option_arg_name";
case  COMPUTED_NAME: return "component";
 case EXTENDED_NAME : return "extended_name"; default : return "unknown_prop; }
 case COMPUTED_PROP: return "computed_prop"; default : return "unknown_prop"; }
 case IS_NAMESPACE : return "is_namespace" case IS_DISPATCHER:
case  EMPTY_STR: return "empty";
 case EXTENDED_FLAG: return "extended_flag"; case EXTENDED_FLAG: return "extended_extended;";
case  EXECUTION_PROP:
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown_prop"; }
 case COMPUTED_PROP: return "compute_prop";
 case EXTENDED_NAME : return "extended_name"; default : return "unknown property type"; }
 case EMPTY:return "synthetic";
 case PREFIX: return "prefix;
 case SYNTHON_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_NAME : return "extended_name"; default : return "unknown";
case  EMPTY_PROPERTY:
 case EXTENDED_FLAG: return "extended_flags";
 case ANALYZE_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_NAME : return "extended_name"; default : return "Unknown property type"; }
 return "opt_arg_name" ; break;
 case EXTENDED_NAME : return "extended_name"; case CLASS_NAME:
case SYNTHETIC_BLOCK_PROP: return "synthetic" if ( propType == 0 ) {
 case EXTENDED_NAME : return "extended_name" ; default : break ;
 case IS_NAMESPACE : return "is_namespace"; case IS_DISPATCHER;
 return "opt_arg_name_string;
 case EXTENDED_FLAG: return "extended_flag"; case COMPUTED_FLAG: return "compute_compute"; }
 return "opt_name;
case  EMPTY_PROPS:
 case COMPUTED_NAME: return "compute_name";
 case COMPUTED_PROP: return "computed_props";
case SYNTHETIC_BLOCK_PROP: return "blocking";
case  EMPTY_STRING_NAME:
 case EXTENDED_NAME : return "extended_name"; case EXTENDED_TYPE:
 case IS_NAMESPACE : return "is_namespace"; case IS_PARENTHIST:
 case EXTENDED_NAME : return "extended_name" ; break ; }
case  NAME:
 return "opt_arg_name_short;
 case SYNTHETIC_UNSYNTHETIC_BLOCK_PROP: return "synthetic";
 case EMPTY_LIST: return "empty;
 case EXTENDED_NAME : return "extended_name"; case STRING_TYPE:
 return "opt_args_name";
 case EXTENDED_OR_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_NAME : return "extended_name" ; break ; default :
 case COMPUTED_PROP: return "compute_property";
 case SYNTHETIC,SYNTHETIC_BLOCK_PROP: return "synthetic";
 case EXTENDED_NAME : return "extended_name" ; break ;
case  EMPTY_PROP: return "";
 case COMPUTED_PROP: return "compute_properties";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown_type"; }
case  EMPTY_PREFIX:
 case EXTENSION_NAME: return "extension_name";
 case COMPUTED_PROP: return "computeprop";
 case STRING_STRING_SYNTHETIC_BLOCK_PROP: return "synthetic";
 default : return "unknown_prop"; }
 return "opt_arg_name"; } break;
 case OP_PROP:
 return "opt_arg_name" + 1;
 case SYNTHETIC.SYNTHETIC_BLOCK_PROP: return "synthetic";
case  COMPUTED_NAME:
 case EXTENDED_NAME : return "extended_name" ; } }
 case SYNTHETIC: #"synthetic";
 default : return "unknown_prop type"; }
 case COMPUTED_FLAG: return "compute_flag";
 } return post_flag ; }
 case COMPUTED_PROPS: return "compute_properties";
case  STRING:
 case COMPUTED_PROP: return "computed_prop"; case EMPTY_PROP:
case  EMPTY_NAME: return "name";
 case COMPUTED_PROPS: return "compute_props";
 case EMPTY_LIST;
 case Synthetic: #"synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown property"; }
 case EXTENSION_SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "static";
 case SYNTHETIC: return +"synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" + propType;
 case SYNTHETIC::return "synthetic";
 case SYNTHETETIC.SYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMPUTED_PROP: return "computed_prop";
 case EXTENDED_NAME : return "extended_name" ; } break ;
 case POST_FLAG:
 return "opt_arg";
 case POST: return "post;
 case COMPUTED_PROP: return "computed_property"; case EMPTY_PROP:
 default : return "unknown property"; }
case  EMPTY_STRING_TYPE:
case SYNTHETIC_BLOCK_PROP: return "synthetic" case "block_name";
 case COMPUTED_PROP: return "computeproperties";
 return "opt_arg_name_name;
 case COMPUTED_PROP: return "compute_static_props";
case  EMPTY_PARAM:
 case COMPUTED_PROP: return "compute_prop_name";
 case STRING: return "string;
 return "opt_args_name" ; break;
case  OP_BLOCK:
 case SYNTHETIC: return '"synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case "emptyblock";
 case COMPUTED_PROP: return "computed_prop_name";
 case COMPUTED_PROP: { return "computed_prop"; } return "computed";
 case COMPUTED_PROP: return "computed_prop"; return "computedprop";
 case COMPUTED_PROP: return "computed_prop"; default: return "unknown property";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case "block";
 case COMPUTED_PROP: return "computed_prop"; return "computeprop";
 case COMPUTED_PROP: return "computed_prop"; case EMPTY_NAME:
case  EMPTY_STRING_VALUE:
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; break ; default:
case  EMPTY_STRING: return "";
 case COMPUTED_PROP: return "compute_procedure";
 case COMPUTED_PROP: return "computed_prop"; default: return "unknown type";
 case SYNTHETIC: return u"synthetic";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block_props;"
 } return propType ;
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "" ;
 return "opt_arg_name"; break switch;
 case SYnthetic: return +"synthetic";
 case COMPUTED_PROP: return "computed_prop"; case EMPTY:
 case COMPUTED_PROP: return "computed_prop"; case EMPTY_TEXT:
 case SYnthetic: #"synthetic";
 case SYNETIC: return u"synthetic";
 case SYNETIC: #"synthetic";
 case COMPUTED_PROP: return "compute_prop"; case EMPTY:
 case SYNTHETIC: returns"synthetic";
 case OP_FLAG: return "op_flag"; }
 case EMPTY_PROP;
 default: return "unknown property";
 case SYnthetic: return '"synthetic";
 return "opt_argname;
 default : return "unknown" ; } } }
 case EMPTY_TEXT;
case SYNTHETIC_BLOCK_PROP:  { return "synthetic_block"; }
 case COMPUTED_PROP: return "compute_property"; case EMPTY:
 case EMPTY_STR;
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown"; }
 default : return "unknown prop"; }
case  NO_PROP:
 case SYSTEM:return "synthetic";
 case EXTENDED_NAME : return "extended_name" ; } } ;
 case SUPPORTED_SYNTHETIC_BLOCK_PROP: return "synthetic";
 return "opt_arg";;
case  NO_NAME:
 case SINGLE_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case USE_SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" case "block" :
 case COMPUTED_PROP: return "computed_prop"; break ; default:
 } case IS_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case POSSIBLE_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case OP_STRING:
 case COMPUTED_PROP: return "computed_prop"; case IS_NULL:
 case EXTENDED_FLAG: return "extended; }
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; break ; }
 case COMPUTED_PROP: return "computed_prop"; case NO_OP:
 case EXTENDED_FLAG: return "extended_extended"; }
case  EMPTY_STRING_LIST:
 case EXTENDED_TYPE: return "extended_type"; }
 default : return "unknown"; }
case SYNTHETIC_BLOCK_PROP: return  block;
 case SYNTIC: #"synthetic";
 case NON_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case synthetic: #"synthetic";
 case COMPUTED_PROP: return "compute_static_proto";
 default: break;
 case EXTENSION:
 case PORT_PORT:
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; default : return "unknown_type;
 case EXTENSIVE_SYNTHETIC_BLOCK_PROP: return "synthetic";
case  NO_OP:
 case SYNOPS: #return "synthetic";
 case INCLOSED_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case ISSYNTHETIC_BLOCK_PROP: return "synthetic";
case  OP_NAME:
 case STRICT_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMPUTED_PROP: return "compute_props;
case  UNKNOWN:
 case COMPUTED_PROP: return "computed_prop"; break; }
 case COMPUTED_PROP: return "computed_prop"; return "computed; }
case  NEW_LINE:
case SYNTHETIC_BLOCK_PROP: return  "syntotic_block;"
 switch (propType):
case  MAP:
 } return "post_flag"; }
 return "opt_name"; }
 case null: break;
 default: #"synthetic";
 case COMPUTED_PROP: return "compute_static_props;
 case STRING:
 case empty_arg;
 default: return "";
 case empty_block;
 case STRING_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMPUTED_PROP: return "compute_compute; }
 case COMPUTED_PROP: return "compute_prop_name;
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block"; }
 break ; default :
 } return "" ;
case  CASE:
 break ; }
case SYNTHETIC_BLOCK_PROP: return "synthetic" case default:
case SYNTHETIC_BLOCK_PROP: return  "syntotic_block"; }
 case JS_SYNTHETIC_BLOCK_PROP: return "synthetic";
 case COMPUTED_PROP: return "computed_prop"; case IS_NULL,
case  TEXT:
 } return null ;
 default: return null;
case SYNTHETIC_BLOCK_PROP: return  "syntoticblock;
case SYNTHETIC_BLOCK_PROP: return  "syntactic_block"; }
 break ; } }
 case EXT_SYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; break ;
case SYNTHETIC_BLOCK_PROP: return  "syntoticblock;"
 default: return"synthetic";
case SYNTHETIC_BLOCK_PROP: return  "syntholic_block"; }
 case PSYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return true;
case  NULL:
case SYNTHETIC_BLOCK_PROP: return "synthetic" case EXTENDED_BLOCK;
 case MISSYNTHETIC_BLOCK_PROP: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; break ; } }
case  STRICT:
 case Symbol::"synthetic";
case SYNTHETIC_BLOCK_PROP: return  "synthetic_block; }
 case Symbol: #"synthetic";
 case CLASS: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return  symbol;
case SYNTHETIC_BLOCK_PROP: break;
 case SPECIAL: return "synthetic";
 } break ;
 } break;
case SYNTHETIC_BLOCK_PROP: return;
 case synthetic::"synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" for example;
case SYNTHETIC_BLOCK_PROP_NAME:
 case NAME: return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" for example.
 break switch;
 default: return;
 break;
 default: }
case SYNTHETIC_BLOCK_PROP: {}
 case case null;
 case emptyblock;
 case synthetic::return "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" property;
 # break;
 break;;
 case!"synthetic";
 case syntheticreturn "synthetic";
 default::"synthetic";
 } #"synthetic";
 case not"synthetic";
 break }
 break };
 } }
case SYNTHETIC_BLOCK_PROP:  {};
case SYNTHETIC_BLOCK_PROP: {
 case Symbolreturn "synthetic";
case SYNTHETIC_BLOCK_PROP: return "synthetic" ; }
 } #return "synthetic";
 }
case SYNTHETIC_BLOCK_PROP: return "synthetic" property";
case SYNTHETIC_BLOCK_PROP: return "synthetic" property.
case SYNTHETIC_BLOCK_PROP:: {
case SYNTHETIC_BLOCK_PROP : #
case SYNTHETIC_BLOCK_PROP, return "synthetic";
case SYNTHETIC_BLOCK_PROP': return "synthetic";
