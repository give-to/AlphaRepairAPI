private boolean testMode = false;
private boolean testMode  = true;
 private boolean testMode = false; private boolean untestMode = false;
 private boolean testMode = true; private booleantestMode = false;
 private boolean debugMode = false;
 private boolean testMode = false; private booleantestMode = false;
 private boolean debug = false;
 private boolean testMode = true; private boolean untestMode = false;
 private boolean testMode = false; private boolean subtestMode = false;
 private Supplier<List<JSSourceFile>> sourcesSupplierForTesting = null; private boolean modulesSupplier = false;
 private boolean testMode = true; private boolean subtestMode = false;
 private boolean testMode=boolean testMode = false;
 private Supplier<List<JSSourceFile>> sourcesSupplier = null; private Supplier<String> modulesSupplier;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null; private boolean debugMode = false;
 private boolean testMode = true;boolean testMode = false;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null;
 private boolean _testMode = false;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null; private boolean outputMode = false;
 private Supplier<List<JSSourceFile>> sourcesSupplier = null; private boolean modules = false;
 private Supplier<List<JSSourceFile>> sourcesSupplier = null; private boolean modulesSupplier = false;
 private Supplier<List<JSSourceFile>> sourcesSupplier = null; private Supplier<String> outputCharset;
 private Supplier<List<JSSourceFile>> sourcesSupplierForTesting = null; private boolean modulesSupplier = true;
 private Supplier<List<JSSourceFile>> srcsSupplierSupplier = null; private boolean modulesMode = false;
 private boolean testMode; private boolean _testMode = false;
 private boolean testMode = false;boolean testMode = false;
 private boolean testMode = true;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null; private boolean testMode;
 private Supplier<List<JSSourceFile>> srcFilesSupplier = null; private Supplier<String> modulesSupplier;
 private Supplier<List<JSSourceFile>> sourcesSupplierForTesting = null; private boolean modules = false;
 private RunTimeStats runTimeStats;
 private Supplier<List<JSSourceFile>> sourcesSupplier = null; private boolean modulesSupplier = null;
 private boolean testMode = true; private static finalboolean testMode = false;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null; private boolean debugMode;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; private boolean outputMode = false;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; private boolean debugMode;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null; private boolean debug;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; private boolean testMode;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null; private boolean modules = false;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; private boolean debug = false;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null; private boolean debug = false;
 private boolean debugMode = false; private boolean debugMode = true;
 private boolean testMode; private boolean subtestMode = false;
 private Map<String, String, String, String, String, String, String, String, String, String, String, String, String>
 private Map<String, String, String, String, String, String, String, String, String, String, String, String, String;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null; private boolean test;
 private RunTimeStats runTimeStats = null;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; private boolean debug;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; private boolean testing = false;
 private boolean testMode = false; private!testMode = false;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; private boolean outputMode;
 private boolean testMode = true; private final #boolean testMode = false;
 private boolean debugMode;
 private boolean testMode; private boolean untestMode = false;
private boolean testMode = false ; private String outputCharset = null;
 private boolean debugMode = false; private boolean debugMode = false;
 private boolean debugMode = false; private boolean debug = false;
 private Map<String, String, String, String, String, String, String, String, String, String, String, String> properties;
 private Supplier<List<JSSourceFile>> sourceFilesSupplier = null;
 private Supplier<List<JSSourceFile>> sourcesSupplier = null; private boolean debug;
 private boolean debugMode = false; private boolean quietMode = false;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; private boolean test;
 private boolean testMode; private boolean pretestMode = false;
 private boolean testMode = true; private static #boolean testMode = false;
 private boolean debugMode = false; private boolean testMode = false;
 private boolean debugMode = false; private boolean debug = true;
 private boolean debugMode = true; private boolean debugMode = false;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; private boolean testing;
 private boolean testMode = true; private final _boolean testMode = false;
 private List<JSSourceFile> sourceFiles;
 private boolean debugMode = false; private boolean quiet = false;
 private boolean debugMode = false; private boolean debugMode;
 private Supplier<PrintStream> System.out;
 private boolean blackholed = false;
 private Supplier<String, String, String, String, String, String, String, String, String, String, String, String> {
 private Supplier<List<JSSourceFile>> sourcesSupplier = null; private Supplier<String> outputCharset();
 private boolean outputCharset= false;
 private List<JSSourceFile>> sourceFiles = new ArrayList ( ) ;
 private boolean testMode = true; private final finalboolean testMode = false;
 private Supplier<String, String, String, String, String, String, String, String, String, String, String, String>;
 private boolean testMode; this.testMode = false;
 private boolean debug=false;
 private boolean test = false;
 private boolean debugMode = true;
 private boolean testMode; private boolean nontestMode = false;
 private String errorCharset;
 private boolean debugMode = false; private boolean testMode;
 private String modulesCharset = null;
 private boolean debug = true;
 private boolean test = true;
 private Supplier<PrintStream> printStream;
 private boolean outputCharset!= false;
 private boolean debugMode = false; private boolean outputCharset = false;
 private boolean quiet = false;
 private boolean testMode; private booleantestMode = false;
 private boolean testMode = true; finalboolean testMode = false;
 private CharSequence outputCharset = null;
 private boolean testMode #boolean testMode = false;
private boolean testMode  = false ; private void init ( ) {
 private boolean testMode = true; private boolean debug = false;
 private boolean debugMode = false; private boolean debug;
 private boolean testMode= false; private boolean debug= false;
 private boolean debug = false; private boolean quiet=false;
 private boolean test=false;
 private Map<String, String, String, String, String, String, String, String> {
 private boolean testing=false;
 private boolean testMode = false; finalboolean testMode = false;
 private boolean debugMode = false; private boolean outputCharset = null;
private boolean testMode = false ; private String outputCharset = "" ;
 private boolean testMode;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null; private boolean debugMode = false;;
 private boolean isTest=false;
 private boolean testMode = true; private boolean testMode;
private  PrintStream err = new PrintStream ( ) ;
 private boolean testMode=true; private boolean=false;
 private RunTimeStats runtimeStats = null;
 private String modulesSupplierForTesting = null;
 private boolean testMode:boolean testMode = false;
private boolean testMode  = false ; public void main() {
private boolean testMode  = false ; private void setup ( ) {
private boolean testMode  = false ; private void main() {
private boolean testMode  = false ; public void testMode = true ;
 private boolean bolinfest.testMode = false;
 private List<JSSourceFile> inputFiles;
 private boolean debugMode = false; private boolean quiet;
 private Map<String, String, String> map<String, String, String, String>;
 private Map<String, String, String, String, String, String, String, String> {}
 private boolean debug;
 private Map<String, String, String> outputCharsetMap = null;
 private boolean quiet=false;
 private Supplier<List<JSSourceFile>> modulesSupplier = null; static
 private Map<String, String, String> map<String, String, String, String> {
 private boolean debugMode = false; private boolean debugMode();
 private boolean testMode_boolean testMode = false;
 private Supplier<System.out> out;
 private boolean debug = false; private boolean verbose= false;
 private Map<String, String, String> map<String, String, String, String> {}
 private boolean debugMode = false; private boolean outputCharset = true;
 private boolean blackholed= false;
private boolean testMode  = false ; public void run ( ) {
 private boolean debug = false; private boolean test=false;
 private String moduleCharset;
 private boolean testMode= false, boolean debugMode= false;
 private void main() {
 private RunTimeStats runtimeStats;
private boolean  test = true;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null();
 private String moduleName = null;
private  SupplierSupplierSupplier = null;
 private Supplier<List<JSSourceFile>> sourcesSupplier = null; static
 boolean debug=false;
 private boolean isEtestMode = false;
private boolean testMode  = true ; public void main() {
private  SupplierSupplierSupplierForTesting;
 private boolean testMode; private #testMode = false;
 private boolean debugMode = false; private boolean test;
private boolean testMode  = false ; private boolean debugMode = false ;
private boolean testMode  = true ; private void main() {
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = null.
 private Supplier<PrintStream> System.err;
 private boolean debug = false; boolean quiet=false;
 private boolean testMode= false; private boolean testing= false;
 private Supplier<List<JSSourceFile>> modulesSupplierForTesting = false;
 private boolean test_boolean testMode = false;
 private PrintStream outputCharset;
 private Supplier<List<JSSourceFile>> filesSupplier = null; static
 private boolean --testMode = false;
 private PrintStream out = null;
 private RunTimeStats runTime;
 private boolean isTestMode=false;
 private boolean outputCharsetOptional= false;
private boolean testMode = false ; private int numRUNs = 0;
 boolean test=false;
 private boolean testMode = true; private boolean _false;
 private boolean printOutput=false;
 private boolean shutdown=false;
 private PrintStream out; private err;
 private boolean debug = false; private boolean debug= false;
 private String modulesCharset = "";
 private boolean testMode; #boolean testMode = false;
 private boolean bolinfest_testMode = false;
 private boolean outputCharsetDirty= false;
 private boolean blackled=false;
 private boolean blackhol=false;
 public boolean testMode=boolean testMode = false;
 private boolean outputCharsetEncoding= false;
 private boolean testMode; static #testMode = false;
 private boolean outputCharsetSensitive= false;
 private boolean testMode = testMode=false;
 private boolean _in_testMode = false;
 private boolean test;
 private B output;
 private boolean testMode= false, testOutput= false;
 private boolean test = false; boolean debug=false;
private  OutputStream outputStream = null;
 private boolean inSubtestMode = false;
 private boolean testMode = false, boolean debug= false;
private boolean  debug = true;
 private RunTimeStats runTimeStats();
 private RunTimeStats runTimeStats;;
 private RunTime stats;
private boolean testMode  = false ; private void main();
 private boolean testMode; private!testMode = false;
 private boolean is_in_testMode = false;
 private boolean testMode=testMode==false;
 private String modulesCharset = null;.*;
 boolean quiet=false;
 private OutputStream outputStreamOutputStream;
 private boolean outputCharset<= false;
 private boolean this.in_testMode = false;
 private boolean bolinfestSubtestMode = false;
 private boolean outputCharset|= false;
 boolean testing=false;
private boolean  debugLogging = false;
private boolean testMode  = false ; private void main()
 private boolean outputCharsetIsNull= false;
 private boolean outputCharsetEncoded= false;
 private boolean quiet;
 private boolean testMode = (int)false;
 private static finalboolean testMode = false;
 private boolean debugMode = false; private boolean testMode = false; static
 private boolean testMode=true|false;
 private boolean outputMode;
 private B config;
 private static boolean _testMode = false;
private  void main();
 private B output;
private  PrintStream err = new PrintStream ( ) {
 private boolean test-boolean testMode = false;
 private boolean _is_testMode = false;
private boolean testMode  = true ; private void main();
 private B config;
 private boolean testMode = true..false;
private boolean testMode  = false ; private void init();
private boolean testMode  = true ; private void main()
 private boolean testMode = true; private #false;
 private boolean isXtestMode = false;
 private boolean isTtestMode = false;
 private boolean test;
 private boolean outputBool=false;
 private boolean testMode = false; private #false;
private  SupplierSupplierSupplierForTesting();
 private RunStats stats;
 private String modulesSupplier;
 private String outputPrefix;
private  OutputOutputOutputOutputOutput;
 private void shutdown() {
 private boolean test #boolean testMode = false;
 private boolean testMode;
 private boolean testMode = true; private *false;
 private boolean debugMode();
 static boolean _testMode = false;
 private boolean test.boolean testMode = false;
 private final boolean isEtestMode = false;
 private final boolean inSubtestMode = false;
 private boolean testMode = 0xfalse;
 private String outputFileName;
 private void main()
 private boolean testing;
 private final boolean _boolean testMode = false;
 private PrintStream out; private PrintStream err; private
 private boolean debugMode = false; private static final
private boolean testMode =  false ; private String outputCharset; private
 private boolean subtestMode = false;
 private boolean isRedundant= false;
 private static #boolean testMode = false;
 private boolean allowEmptyOutput=false;
private boolean testMode  = false ; private static final
 private String moduleName = "";
 private String moduleNamePattern;
 static #false;
 private logger;
 private RunTimeStats runTimeStats = null();
 private RunTimeStats runTimeStats = null.
private boolean testMode  = false ; private void main() {}
 private boolean untestMode = false;
 private boolean isRedundancy= false;
 private boolean _boolean testMode = false;
 private boolean isRedirecting= false;
 private boolean disableCompiler=false;
 private final #boolean testMode = false;
 private booleanfalse;
 private final boolean in_testMode = false;
 private boolean outputIsEmpty=false;
 private boolean debug;
 private boolean useDefaultCompiler= false;
private boolean testMode  = false ; } private static
private  OutputOutputOutput outputOutput;
private boolean testMode  = true ; private static final
private boolean testMode  = true ; private static
private  void run() {
 private void shutdown = null;
 private boolean isCompiled= false;
 public booleantestMode = false;
 private Boolean testMode; #boolean testMode = false;
 private String commandName;
 private void shutdown;
 private boolean testMode();
 private void main() {}
private boolean testMode = false ; private void initialize();
 private String commandLine;
 private boolean;
 private boolean-boolean testMode = false;
 private String moduleName; private String moduleVersion; private
private  void init();
private  this;
 private boolean isCompiling= false;
private boolean testMode  = false ; public void testMode = true {
 private String errorCharset; }
private boolean testMode  = false ; } private
 private boolean blackholed = false.
private  SupplierSupplierSupplierForTesting; }
private boolean  success;
private  SupplierSupplierSupplier = null ; }
private boolean testMode = false ; private void this;
 private String prefix;
 private boolean blackholed = false ; }
 private boolean debugMode; #boolean testMode = false;
private  OutputOutputOutputOutputOutput:
 private boolean=false;
 private boolean debugMode = false ; }
 private boolean blackholed = false();
 protected boolean testMode; #boolean testMode = false;
 private testMode
private boolean testMode = false ; public void main() {}
 private String moduleName; private String moduleDescription; private
private  RunTimeStats stats = null ; }
 private static final
 private config;
 private String moduleCharset; static
 private RunTimeStats runtimeStats = null();
 private options;
 private RunTimeStats runtimeStats = null.
private  OutputOutputOutputOutputOutput();
private  OutputStream outputStream = null; private
private boolean testMode  = true ; } ;
 private void shutdown() {}
private boolean testMode  = true ; } private
private  SupplierSupplierSupplier; }
 private OutputStream outputOutputStream; }
 private RunTimeStats runtimeStats = null);
 private reporter;
private boolean  shutdown;
 protected booleantestMode = false;
private boolean  debugLogging = false ; } ;
private  Configuration;
private boolean  testMode = false ; } ; }
 public static final
 private String moduleName = null.
 static #testMode = false;
 private #testMode = false;
private boolean testMode  = true ; } ; }
private boolean  debugLogging = false ; }
private  OutputStream outputStream = null.
 private void;
private  OutputStream outputStream = null();
private boolean testMode  = true ; private abstract
 private void main;
 private boolean test = true();
private  void run() {}
private boolean  testMode = true();
private boolean testMode =  testMode ; } private
 static=false;
private boolean  debugLogging = false.
 boolean shutdown= false;
private boolean  debugLogging = false();
 static booleanfalse;
 static:false;
private  void init() {}
private boolean testMode = false ; private abstract;
 public static {
private  void init()
 public static final
private boolean testMode = false ; private abstract class
 private } {
 private static final
private boolean testMode = false.0;
private boolean testMode  = false
private boolean  test; }
private boolean testMode =  null;
private boolean  debug; }
private boolean testMode = false; } {
private  Configuration();
private boolean testMode  = true
 static finalboolean testMode = false;
 static #boolean testMode = false;
private boolean  shutdown; }
 static {
 static final
 static private
private boolean testMode (); {
private boolean testMode = false.0;;
 { static
 { static
private boolean testMode = false. };
 static
private boolean testMode: false;
private boolean testMode is false;
private boolean testMode := false;
