 this.lastLine = 1;
this.lastLine  = -1;
 return this;
this.lastLine++;
 lastLine= 1;
 return fileName;
 this.line = 1;
this.lastLine = 1
 this.lastLine = line1;
 this.lastLine *= 1;
 this.line = -1;
 this.lastLine = -1; this.lastLine = 1;
 this.lastLine = lastLine;
this.lastLine = 0;
this.lastLine = 1 ; return this ;
 this.lastLine = -1;
 this.lastLine = line-1;
 this.line = line1;
this.lastLine = 0
this.lastLine  = - 1 ; return this ;
 this.lastLine = this.line1;
 return this.code;
this.line++;
 this.lastLine = 0; this.lastLine = 1;
 this.lastLine = fileName.line1;
 this.lastLine = this.lastLine-1;
 this.lastLine = lastLine-1;
 this.lastLine = this.lastLine+1;
 this.lastLine = 0;
this.lastLine = 0 ; return this ;
this.nextLine = -1;
 this.lastLine = 1. else { this.lastOffset = -1;
this.lastLine = lastLine ; return this ;
 this.lastLine;
this.lastLine = 1 ; return this.fileName;
 this.lastLine = 1. else { this.lastOffset = 0;
this.lastLine  = -1; this.code = null;
this.currentLine = -1;
 this.lastLine = this.lastLine;
 this.lastLine = 1; else { this.lastOffset = 0 ; } else { this.lastOffset = 0 ;
this.lastLine  = - 1 ; return this ; }
 this.lastLine = this.fileName;
this.lastLine  = -1; return this.code;
 lastLine *= 1;
 this.currentLine = line1;
 this.lastLine = 1; else { this.lastOffset = -1;
this.lastLine = 1; return this.code;
 this.lastLine = 1; } else { this.lastOffset = -1;
 this.lastLine = 0; return fileName;
 this.lastLine = 0; lastLine= 1;
 this.lastLine = lastLine1;
 this.nextLine = this.lastLine;
 this.lastLine = lastLine + -1;
 this.lastLine = 1; else { this.lastOffset = 0 ; } else { this.lastOffset ++ ;
this.lastLine = 1; this.offset = 0;
this.lastLine  = -1; this.offset = 0;
 this.lastLine = lastLine+1;
 this.line = 0;
 return line1;
 this.lastOffset = -1;
 this.currentLine = this.lastLine;
 this.lastLineNumber= 1;
 this.lastLine = 1. else { this.lastOffset = 0; this.lastOffset = 0;
 if (lastLine == -1) this.lastLine = 1;
this.lastLine  = - 1 ; return this.fileName;
 this.lastLine = 1; else { this.lastOffset = 0;
 return this.fileName;
 this.lastOffset = -1; this.lastLine = 1;
 this.lastLine<= 1;
 this.lastLine = 1. else { this.lastOffset = 0; this.lastOffset = 1;
 this.lastLine = 1; } else { this.lastOffset = 0;
this.lastLine  = 0; return this.code;
 this.lastLine = this.firstLine;
 this.lastLine = 1; else { this.lastOffset = 0 ; } else { this.lastOffset = 1 ;
 this.lastLine = 1; return fileName;
 this.lastLine = 0; this.position= 1;
 this.lastLine = lastLine; this.lastLine = 1;
 this.nextLine = lastLine;
this.lastLine = 1 ; return this ; }
 this.lastOffset = lastOffset;
 this.lastLine = this.line-1;
 this.lastLine = -1; lastLine= 1;
 return this.lastOffset;
 this.lastLine = 1; this.lastOffset = 0 ; this.lastOffset = this.lastLine ;
this.lastLine = 1; this.nextLine = -1;
this.lastLine =  -1; this.lastOffset = 0;
 this.currentLine = lastLine;
this.lastLine = 1; this.code = null;
this.lastLine  = lastLine ; return this.code;
 this.lastLine = 1; } else { this.fileName = fileName ; this.lastOffset = 0 ;
 this.currentLine = this.lastLine-1;
this.lastLine = 1; this.nextLine = 0;
this.lastLine = 1; this.lastOffset = 0;
this.code
this.lastLine = 1 ; this.lastOffset = lastOffset;
 this.currentLine = line-1;
 this.nextLine = -1; this.lastLine = 1;
this.lines++;
 this.lastLine = 1; else { this.lastOffset = 0 ; } else { this.offset = 0 ;
 this.lastLine = 1; } else { this.fileName = fileName; this.lastOffset = -1;
this.lastLine  = lastLine ; return this ; }
 this.lastLine = 1. else { this.lastOffset = -1; }
 this.currentLine = this.lastLine+1;
 this.lastOffset = lastOffset; this.lastLine = 1;
 this.lastLine = line+1;
 this.lastLine = lastLine *= 1;
 this.lastLine = lastLine += 1;
 this.lastLine = 1; } else { this.fileName = fileName ; } else { this.lastOffset = 0 ;
 this.lastLine = lastLine = -1;
 this.nextLine = this.lastLine+1;
 this.lastLine = 1; } else { this.fileName = fileName ; } else { this.fileName = fileName ;
 this.lastLine = 1; else { this.lastOffset = 0 ; } else { this.lastOffset -- ;
 return this.lastLine;
 this.lastLine = 0; this.offset= 1;
 this.lastLine = 0; return;
 this.lastLine = 0.0;
 this.lastLine = 0 ; this.lastOffset = 0 ;
 this.lastLine = 0. this.lastOffset = 0;
 this.lastLine = lastLine - line1;
this.lastLine = 1; this.currentOffset = 0;
 if (lastLine == 0) this.lastLine = 1;
 this.lastLine = 1; this.offset= 1;
 this.lastLine = 1; } else { this.fileName = fileName ; } else { this.offset = 0 ;
 this.currentLine = lastLine-1;
this.lastLine =  - 1 ; return this. fileName ; }
this.lastLine  = -1; return this.code();
 this.lastLine = 0 ; this.lastOffset = 1 ;
this.lastLine =  -1; this.nextLine = 0;
 if (lastLine!= 1) this.lastLine = 1;
 this.lastLine = this.lastLine = 1;
 this.lastLine = 1; lastLine= 1;
 return this.code();
 this.lastLine = 0.0; this.lastLine = 1;
 this.lastLine = 1; } else { this.fileName = fileName ; } else { this.lastOffset = -1;
 this.lastLine = 0; this.index= 1;
 this.lastLine = 1. else { this.lastOffset = 0; this.lastLine = 0;
this.currentLine = 1;
 this.lastLine = 1; this.lastLine = 1;
 this.nextLine=1;
 this.lastLine = 1; } else { this.lastOffset = 0 ; } else { this.lastOffset = - 1 ; }
 this.lastLine = 1; } else { this.fileName = fileName; this.lastOffset = 0.0;
this.lastLine = 1; return this.file;
 this.lastLine = 1; } else { this.lastOffset = 0.0 ;
 this.lastLine |= 1;
 this.lastLine!= 1;
 this.lastLine = 1; } else { this.offset = 0;
 this.lastLine = 1; this.lastOffset = 0 ; this.lastOffset = this.lastOffset ;
 this.lastLine = 1; } else { this.fileName = fileName; this.lastOffset = this.lastLine ;
this.lastLine = 1; this.lastLine = lastLine;
 this.lastLine = 1; } else { this.lastOffset = 0 ; } else { this.lastOffset = lastOffset ; }
 this.lastLine = 0.0;
 this.nextLine = line-1;
 this.lastLine = 1; } else { this.lastOffset = -1; }
 this.lastLine = null;
this.lastLine = null
 this.lastLineNumber *= 1;
 this.lastLine = this.line;
 this.lastLine = 1; } else { this.fileName = fileName + 1 ;
 this.lastLine = 1; } else { this.fileName = fileName + ' ' ;
this.lastLine = 1; return this.code();
 this.lastLine = 1; } else { this.fileName = fileName + "" ;
 this.lastLine = 0. else { this.lastLine = 1;
this.lastLine = 0; return this.code();
 this.nextLine = lastLine-1;
 this.lastOffset = 0; this.lastLine = 1;
 this.lastLine = - this.lastLine = 1;
 this.lastLine = -lastLine;
 this.lastLine = lastLine ||= 1;
 this.lastLine = 0. if ( lastLine == - 1)
this.lastLine =
 this.lastLine = 1; } else { this.fileName = fileName; this.lastOffset = this.lastLine =
this.code();
 this.this.lastLine = 1;
 this.lastOffset = 1; this.lastLine = 1;
 this.lastLine = 1; } else { this.fileName = fileName + "." ;
 this.lastLine = 0. this.offset = 0;
 this.lastLine = this.offset;
 this.lastLine = 0. if ( lastLine == 0 ) {
 this.lastLine = 0. else { this.offset = 0;
 this.lastLine = 1;
 this.lastLine = 0. else { this.lastOffset ++;
 this.lastLine = 0; this.offset = 0;
 this.lastLine = 1; } else { this.fileName = fileName + '.' ;
 this.lastLine = 1; } else { this.fileName = fileName + ".." ;
 this.lastLine = 1. else { this.lastOffset = lastOffset ; }
 this.lastLine + 1 *= 1;
 return this.line1;
 this.lastLine = 1; } else { this.fileName = fileName + '..' ;
 this.lastLine = 1; } else { this.fileName = fileName + '\\' ;
 if (lastLine) { this.lastLine = 1;
 this.lastLine = 0. This.offset = 0;
 this.nextLineNumber *= 1;
 this.lastLine = lastLine <<= 1;
 this.lastLine = 1; } else { this.lastOffset = -1,
this.lastLine = lastLine ; }
 this.lastLine = lastLine |= 1;
this.lastLine();
 return this.file;
 this.lines = 0;
this.lastLine = 1 ; this.lastOffset = lastOffset ; }
 this.lastLine = 1; } else { this.fileName = fileName + "\n" ;
 this.lastLine = 1. else { this.fileName = fileName ; } }
 this.lastLine = 0. this.lastOffset ++;
 this.lastLine = 1; } else { this.fileName = fileName + "\\" ;
 this.lastLine = 1; } else { this.lastOffset = 0 ; } }
 this.lastLine = 1; lastOffset= 1;
 this.lastLine = 1; } else { this.lastOffset = - 1 ; } else {
 this.lastLine = 1; } else { this.fileName = fileName + "..." ;
 this.currentLineNumber *= 1;
 return lastOffset;
this.lastLine1++;
 return this.path;
 this.lastLine = 1; } else { this.fileName = fileName ; this.lastOffset = 0 ; } }
 this.lastLineNum *= 1;
 this.lastLine = 0. This.lastOffset =
 this.lastLine = line *= 1;
this.lastLine = 1 ; this.lastOffset = lastLine ; }
 this.lastLineQueryIndex= 1;
this.lastLine = - 1 ; } }
 this.lastLine = -1.0;
this.lastLine = 1.0;
 this.lastLine = fileName.lastLine = 1;
 this.lastLine = 0 this.lastLine = 1;
 this.lineNumber= 1;
 this.lastLine = lastLine; offset= 1;
this.lastLine = lastLine ; } }
 this.lastLine + 1 |= 1;
this.nextLine();
 this.lastLine ++ ; this.lastLine = 1;
 this.lastOffset = 0;
this.lastLine = 1. return this;
 line = -1;
 lastLine = line1;
this.lastLine = - 1 ; return this ; };
 this.lastLine = 0. else, this.lastLine = 1;
 this.lastLine = line += 1;
 this.lastLine = -1. else {
 return lastLine+1;
 this.lastLine = 0. if (noCache)
 return lastLine-1;
 this.lastLine = 0. else: this.lastLine = 1;
 return lastLine;
this.lastLine = -1; }
 return line-1;
 this.lastLine = 0. if (debug)
 this.firstLine= 1;
 if (lastLine) this.lastLine = 1;
 return this.location;
 this.lastLine = 0. This is the default.
 this.lastLine = 0. if (skipLast)
 this.lastLine 0; this.lastLine = 1;
 this.lastLine = 0. This is the last line
this.lines();
 lastLine |= 1;
 this.lastLine = 0. if (!debug)
 this.lastLine = -1. * End point
 return -1;
this.code;
 return this.offset;
 this.lastLine = 0; } else {
 this.line1;
 this.lastLine = 0. This is correct.
 this.lines= 1;
 return lastLine1;
 return this ; }
this.lastLine = 1; this.nextLine = - 1; }
 this.lastLine = -1. * Last line
this.lastLine = 1 ; return this
 this.lastLine = -1. else:
 this.nextLine = -1; }
 this.nextLine = this.lastLine = 1;
 this.offset = this.lastLine = 1;
 this.lastLine = 0
 this.lastLine 0 =
 this.lastLine = -1; else
 this.lastLine ++ ;
 return null;
this.lastLine = 1; return fileName();
 this.fileName.lastLine = 1;
 this.offset = 0;
 this.lastLine = 0.0";
 } else { this.lastLine = 1;
 this.lastLine = 1
 if (isDirectory) this.lastLine = 1;
 this.lastLine = _lastLine = 1;
 line=1;
 this.line = this.lastLine = 1;
 lastLine <<= 1;
 line = line1;
 this.nextLineQuery.lastLine = 1;
 this.lastOffset = lastOffset; *
 return code;
 this.lastLine =.lastLine = 1;
 if (continuous) this.lastLine = 1;
 return thisFile;
this.line
 if (continuing) this.lastLine = 1;
this.lastLine = 1 ; return ;
 this.sourceFile.lastLine = 1;
 this.lastOffset+lastLine = 1;
 this.lastOffset.lastLine = 1;
 else { this.lastLine = 1;
this.path
 this.this_lastLine = 1;
 currentLine= 1;
 line -1;
this.lastLine  = ;
 this.base.lastLine = 1;
 return this
 line #1;
 return true;
 this;
 this.prev_lastLine = 1;
 this.prev.lastLine = 1;
this.lastLine = 1 ; }
 return;
this = null
 this.
 } else {
 line *= 1;
 line1= 1;
 } else this.lastLine = 1;
this = this
 } else if else {
 else, this.lastLine = 1;
 } else, this.lastLine = 1;
 else: this.lastLine = 1;
 } else if false {
 } else if null {
 } else, { this.lastLine = 1;
this.lastLine = 1L;
 } else if null,
 } else if false,
 } else { super.lastLine = 1;
this.lastLine = 1. *
 } else
 } else,
 this._lastLine = 1;
 } else, { super.lastLine = 1;
 } else{ *
 } else, { that.lastLine = 1;
 } else, { config.lastLine = 1;
 this_lastLine = 1;
 This.lastLine = 1;
this.lastLine += 1;
this.lastLine -= 1;
this.lastLine == 1;
