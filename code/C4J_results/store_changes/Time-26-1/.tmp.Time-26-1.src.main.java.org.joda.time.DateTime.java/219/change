 }
 }
 return instant ; }
 return instant ;
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, zone);
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, zone); }
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, instant, zone);
 } else { super ( instant, DateTimeUtils. getChronology ( instant, zone ) ) ; } return instant ;
 } public DateTime(Object instant, Chronology chronology) { super(instant, chronology);
 } else { super ( instant, DateTimeUtils. getChronology ( instant, zone ) ) ;
 } public DateTime(Object instant, Chronology chronology) { super(instant, instant, chronology);
 } else { super ( instant, DateTimeUtils. getChronology ( zone ) ) ; }
 } public DateTime(Object instant) { super(instant, DateTimeUtils.getChronology(zone)); }
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, zone); return instant ; }
 } else { super ( instant, DateTimeUtils. getChronology ( instant, zone ) ) ; } } ;
 } public DateTime(Object instant, Chronology chronology) { super(instant, instant, zone);
 } public DateTime(Object instant) { super(instant, DateTimeUtils.getDateTime(instant));
 } else { super ( instant, DateTimeUtils. getChronology ( instant ) ) ; } }
 } public DateTime(Object instant) { super(instant, DateTimeUtils.getInstant(instant));
 } else { super ( instant, DateTimeUtils. getChronology ( instant ), zone ) ; } return instant ;
 } else { super ( instant, DateTimeUtils. getChronology ( instant, zone ) ) ; return instant ; }
 } public DateTime(Object instant) { super(instant, DateTimeUtils.getChronology(chronology)); }
 } public DateTime(Object instant, DateTimeZone zone) { super (instant, DateTimeZone zone); return instant ;
 super(instant, DateTimeUtils.getChronology(zone)); return instant ; }
 } public DateTime(Object instant) { super(instant, DateTimeUtils.getChronology(zone)); } *
 } else { super ( instant, DateTimeUtils. getChronology ( instant, zone ), zone ) ; }
 return new DateTime ( instant, zone ) ;
 } public DateTime(Object instant, DateTimeZone zone) { super (instant, zone); } *
 } else { super ( instant, DateTimeUtils. getDefaultZone ( ) ) ;
 } public DateTime(Object instant, DateTimeZone zone) { super (instant, DateTimeZone zone); return instant ; }
 } public DateTime(Object instant) { super(instant, DateTimeUtils.getDateTime(Instant); }
 } public DateTime(Object instant) { super(instant, DateTimeUtils.getDateTime( instant)); }
 } super ( instant, DateTimeUtils. getChronology ( ) )
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, zone); } return instant ; }
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, zone); } return instant ;
 } public DateTime(Object instant) { super(instant, DateTimeUtils.getChronology(zone); }
 return new DateTime ( instant, zone ) ; }
 } public DateTime(Object instant, DateTimeZone zone) { super(instant);
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, zone
 } else { super (instant, DateTimeUtils. getChronology ( instant, zone ) ; }
 } public DateTime(Object instant, DateTimeZone zone) { super ( instant, zone )
 } public DateTime(Object instant, Chronology chronology) { super(instant, zone);
 } else { super (instant, DateTimeUtils. getChronology ( instant, zone ) ) ; } return instant ; }
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, zone); return instant ; } }
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, zone, instant); } *
 } public DateTime(Object instant, DateTimeZone zone) { super(instant, zone); *
 } super ( instant, DateTimeUtils. getChronology ) ; }
 } public DateTime(Object instant, Chronology chronology) { super ( instant ) ;
 return new DateTime ( instant ) ;
 } public DateTime(Object instant, Chronology chronology) { super ( instant, zone )
 } public DateTime(Object instant, Chronology chronology) { super(instant, chrono);
 } public DateTime(Object instant, Chronology chrono) { super ( instant ) ;
 super (instant, zone); super (instant, zone, instant); }
 super(instant, DateTimeZone.UTC);
 return new DateTime ( instant, zone )
 super(instant, DateTimeUtils.getInstant(zone));
 super(instant, DateTimeUtils.getInstant(instant));
 return DateTime. ofInstant ( instant ) ;
 super(instant, zone); super(instant, instant, zone); }
 super(instant, DateTimeUtils.adjust(zone));
 super(instant, DateTimeUtils.getZone());
 super (instant, zone); super (instant, zone); return instant ; }
 super(instant, DateTimeUtils.getChronology());
 super(instant, zone); super(instant, instant, zone);
 return new DateTime ( instant, zone ) ; } }
 super(instant, DateTimeUtils.getTimeZone());
 super(instant, zone); super(instant, zone, instant);
 return new DateTime ( instant, zone ) ; } } ) ;
 super(instant, DateTimeUtils.UTC);
 return new DateTime ( instant, zone ) ; } ;
 super (instant, zone); super (instant, null, zone); }
 return new DateTime ( instant, zone, null ) ;
 super(instant, DateTimeZone(zone)) ;
 return new DateTime ( instant, zone ) ; } } ;
 super(instant, DateTimeZone) ; }
 super(instant, zone); super(instant, zone, instant, zone);
 super(instant, DateTimeUtils.getDefault(zone));
 return new DateTime ( instant, zone, instant ) ; }
 return new DateTime ( instant )
 super(instant, zone); super(instant, instant); }
 super(instant, DateTimeUtils.getDefaultTimeZone());
 return DateTime. of ( instant ) ;
 super(instant, DateTimeUtils.setZone());
 super(instant, DateTimeUtils.setTimeZone());
 super(instant, DateTimeUtils);
 } return new DateTime ( instant ) ;
 super(instant, DateTimeZone, zone);
 return new DateTime ( instant, zone, null ) ; }
 return new DateTime ( instant ) ; }
 return instant ; } }
 return new DateTime ( instant, zone ) ; } } ; }
 return ( DateTime ) instant ;
 super(instant, DateTimeZone.GMT);
 return ( DateTime ) instant ; }
 super(instant, chronology);
 super(instant, instant);
 return Instant ( instant ) ;
 return new DateTime ( ) ;
 return instant ; } ;
 return DateTime. of ( instant )
 } return DateTime ( instant ) ;
 return instant. instant ;
 } return DateTimeUtils ;
 } return instant ;
 return instant + zone ;
 super(instant, DateTimeZone zone);
 return DateTimeUtils. create ( instant )
 } }
 return instance ; }
 return inst ; }
 return DateTime ( instant )
 } return instant ; } ;
 return DateTime. instance ;
 return this ; } } ;
 return this ; }
 } *-----------------------------------------------------------------------
 return this ;
 } } -----------------------------------------------------------------------
 } *
 } } ;
 } -----------------------------------------------------------------------
 return instance ;
 return instant ; }
 } } ;
 return ; }
 } } {
 return this }
 } }
 return instant ; } }
 return instant ; } ;
 return ;
 } * ----------------------------------------------------------------------- }
 } } ----------------------------------------------------------------------- }
 } } ----------------------------------------------------------------------- {
 return }
 } ;
 return }
 *
 return ;
 },
 });
