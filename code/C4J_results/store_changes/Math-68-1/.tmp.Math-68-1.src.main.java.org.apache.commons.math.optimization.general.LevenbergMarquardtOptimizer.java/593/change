work1[permutation[i]] -=  tmp;
work1[permutation[i]] -= jacobian[i][pj] *  tmp;
work1[permutation[i]] -= jacobian[i][tmp];
 work1[pj] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[tmp];
 work1[pj]] -= jacobian[i][pj] * tmp;
 work1[permutation[j] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp;
 jacobian[permutation[i]] -= jacobian[i][pj] * tmp;
 work1[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i] = tmp;
 work1[permutation[j]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] = tmp;
work1[pj] *= tmp;
work1[tmp]++;
 work1[permutation[j][pj] -= jacobian[i][pj] * tmp;
work1[permutation[i]] *= tmp;
 work1[i][j]-= jacobian[i][pj] * tmp;
work1[i] *= tmp;
 work1[permutation[pj]] -= jacobian[i][pj] * tmp;
work1[permutation[i]++;
 tmp += tmp * tmp;
 work1[i]-= jacobian[i][pj] * tmp;
work1[permutation]++;
work1[permutation[i]] -=  tmp * tmp;
 work1[permutation[j][i]] -= jacobian[i][pj] * tmp;
 work1[permutation[j][pj]] -= jacobian[i][pj] * tmp;
 work1[j]-= jacobian[i][pj] * tmp;
 tmp += tmp * tmp * tmp;
work1[i] = tmp;
 work1[i] = -tmp;
 tmp = work1[permutation[i][pj] * tmp;
 tmp += tmp;
 tmp = work1[permutation[pj] * tmp;
 [tmp] -= jacobian[i][pj] * tmp;
 tmp = tmp*tmp;
work1[permutation[i]] += tmp;
 work1[permutation[i][pj]] -= jacobian[i][pj] * tmp;
 work1[i][pj]-= jacobian[i][pj] * tmp;
 tmp *= tmp;
 work1[i][j]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj] * tmp; tmp = work1[pj];
work1[i] += tmp;
work1[permutation[i]] -=  tmp; tmp = work1[pj];
work1[pj] *= - tmp;
 work1[j]] -= jacobian[i][pj] * tmp;
 tmp += lmDir[i][pj] * tmp;
 tmp += work2[i] * tmp;
 tmp -= work2[i] * tmp;
work1[permutation[i]] -=  tmp; tmp = tmp ; }
 tmp = work1[permutation[i]] * tmp;
 tmp += work2[pj] * tmp;
 tmp -= work2[i][pj] * tmp;
 tmp += jacobian[i][pj] * tmp;
 tmp -= work2[pj] * tmp;
 tmp = work2[permutation[i]] * tmp;
work1[i] -= tmp;
 tmp -= tmp;
 work1[j][permutation[i]] -= jacobian[i][pj] * tmp;
 work1[pj] = -tmp;
 tmp -= tmp * tmp;
 tmp -= work1[pj] * tmp;
work1[permutation[i];
work1[permutation[i]]++;
 work1[permutation[i][pj] -= jacobian[i][pj] * tmp;
 work1[permutation[i][j]] -= jacobian[i][pj] * tmp;
 tmp = work1[permutation[i] * tmp;
work1[permutation[i] = tmp
 work1[i] += -tmp;
 work1[pj] += -tmp;
 tmp = work1[permutation[j] * tmp;
work1[pj] += tmp;
work1[permutation[i]] -= jacobian[i][tmp] * dxNorm;
work1[permutation[i]] -= jacobian[i] * tmp; tmp = tmp ; }
 tmp += work1[permutation[i][pj] * tmp;
 tmp = work1[permutation[i]][pj] * tmp;
work1[permutation[i]] -=  tmp; tmp = work2[i];
 tmp = work3[permutation[i]] * tmp;
 tmp += work2[permutation[i]] * tmp;
 work1[i] *= -tmp;
 tmp += work2[i][pj] * tmp;
 tmp = work2[permutation[i] * tmp;
 work1[i + 1] -= jacobian[i][pj] * tmp;
 tmp += work2[permutation[i] * tmp;
 tmp = work1[permutation[j]] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp = tmp ; }
work1[permutation[i]] -=  tmp; tmp = work2[pj];
 tmp = work2[permutation[j] * tmp;
 tmp += work2[pj] ;
work1[permutation[i]] -= jacobian[i][pj]  * tmp * tmp;
 tmp = lmDir[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][tmp] * tmp;
 tmp -= work1[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp; tmp = work2[i];
work1[permutation[i]] += tmp * tmp ; }
 work1[i] -= -tmp;
 tmp -= work3[pj] * tmp;
 work1[permutation[j]++] -= jacobian[i][pj] * tmp;
 work1[permutation[j + 1]] -= jacobian[i][pj] * tmp;
 tmp += work3[pj] * tmp;
work1[permutation[i]] -=  tmp; tmp = work2[j];
work1[pj] -= tmp;
work1[pj] = tmp;
work1[permutation[i]] -= jacobian[i][pj] * tmp; tmp = work1[i];
 work1[permutation[jj]] -= jacobian[i][pj] * tmp;
work1[permutation[j]] *= tmp;
 tmp = work2[i]; work1[pj] * tmp;
 tmp = work1[pj] + [i][pj] * tmp;
 work1[permutation[j + i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj] * tmp; tmp = work1[pj]; }
 tmp = work2[permutation[pj] * tmp;
 work1[pj] -= -tmp;
 tmp =
work1[permutation[i]] -= jacobian[i] * tmp * tmp;
 tmp = work2[i] ;
 tmp += work1[permutation[i] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp; tmp = work1[i];
 work1[i][pj] * tmp;
 tmp[permutation[i]] -= jacobian[i][pj] * tmp;
 double tmp = work1[permutation[i]]; tmp += jacobian[i][pj] * tmp;
work1[permutation[i]] -=  tmp; tmp = work2[i]; }
 tmp += work1[i] * tmp;
work1[permutation[i]] += tmp * tmp;
 work1[permutation[i] -= jacobian[i][pj] * tmp;
 work1[permutation[j]+i] -= jacobian[i][pj] * tmp;
work1[permutation[i]]  += tmp * tmp ; tmp = tmp ;
work1[permutation[i]] = tmp * tmp ; }
 tmp -= tmp * tmp * tmp;
 tmp += jacobian; work1[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work1[pj] + Adjacobian[i][pj] * tmp;
work1[permutation[i] += tmp;
 tmp -= work1[permutation[i][pj] * tmp;
 tmp -= work1[i] * tmp;
 work1[i[j]] -= jacobian[i][pj] * tmp;
 tmp = work2[permutation[i][pj] * tmp;
work1[permutation[i]]  += tmp * tmp ; tmp = tmp ; }
 tmp += tmp * dxNorm;
 tmp += work1[permutation[pj] * tmp;
 tmp += work2[permutation[i][pj] * tmp;
work1[permutation[i]] -=  tmp * tmp; tmp = tmp ; }
 tmp = work1[permutation[i]];
work1[permutation[i]] -=  tmp; tmp = tmp ;
work1[pj] += tmp * tmp;
work1[pj] += tmp * tmp ; }
 tmp += work2[i] ;
 tmp = work1[pj] ;
work1[permutation[i]] -= jacobian[i][pj] * tmp; tmp = work2[i];
 work1[permutation[j]][] -= jacobian[i][pj] * tmp;
 work1[permutation[i + 1]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -=  tmp * tmp; tmp = tmp * tmp ;
 work1[i + j] -= jacobian[i][pj] * tmp;
 work1[mutation[j][i]] -= jacobian[i][pj] * tmp;
 work1[i] = tmp*tmp;
work1[permutation[j] = tmp;
work1[permutation[i]]  += tmp * tmp * tmp * tmp ;
work1[permutation[i]]  += tmp * tmp * tmp ; }
 work1[permutation[i]++] -= jacobian[i][pj] * tmp;
 tmp += work2[i] * dxNorm;
 tmp = work2[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp; tmp = tmp * tmp ;
work1[permutation[i]] -= jacobian[i] * tmp; tmp = tmp;
 tmp -= work3[i] * tmp;
 tmp -= lmDir[i][pj] * tmp;
 tmp -= work3[i][pj] * tmp;
 tmp = work2[pj] ;
 double tmp = work1[permutation[i]] * jacobian[i][pj] * tmp;
 tmp += work1[permutation[i]];
 tmp += work1[pj] ;
 tmp -= jacobian; work1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] *= tmp; }
 tmp = work1[pj] * diag[i]; tmp *= tmp ;
 tmp += -tmp;
 work1[i] += tmp* tmp;
work1[permutation[i]] -=  tmp; tmp = work1[i];
 tmp = tmp + work2[pj] * tmp;
 tmp -= work1[permutation[pj] * tmp;
 double tmp = work1[permutation[i]]; tmp += jacobian[i][pj] ;
 tmp = work1[i] + work2[pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp = tmp;
 tmp += work2[i + 1] * tmp;
 tmp = work1[pj]*jacobian[i][pj] * tmp;
 double tmp = work1[permutation[i] + jacobian[i][pj]];
work1[pj] *= work2[i];
 work1[work1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -=  tmp; tmp -= tmp * tmp ; }
work1[i] += tmp
work1[permutation[i]] -= jacobian[i][pj]; tmp = work1[pj];
 tmp[i]-= jacobian[i][pj] * tmp;
 work1[i] *= tmp* tmp;
work1[pj] *= tmp; }
work1[permutation[i]]  += tmp * tmp * tmp ;
 tmp += work2[i + 1][pj] * tmp;
 tmp -= jacobian[i][pj] * tmp; }
 double tmp = work1[permutation[i] - jacobian[i][pj]];
work1[permutation[j]] = tmp;
work1[pj] *= tmp + tmp;
 work1[j][pj]-= jacobian[i][pj] * tmp;
work1[permutation[i]]; tmp += tmp * tmp ;
 tmp += work2[permutation[i] * tmp;
work1[permutation[i]] -=  tmp; tmp = tmp * tmp ;
 tmp = work1[pj] * diag[i]; tmp *= dxNorm;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp = tmp * tmp ;
 tmp = work2[i]; tmp = -tmp;
 tmp -= -tmp;
work1[permutation[i]] -= jacobian * tmp;
work1[permutation[i]]  += tmp * tmp * tmp * tmp ; }
work1[pj] += tmp * tmp * tmp ;
work1[pj] = tmp * tmp ; }
 work1[permutation[i][j] -= jacobian[i][pj] * tmp;
 tmp = work2[i]; tmp -= delta* tmp;
 work1[permutation[j]]] -= jacobian[i][pj] * tmp;
 tmp -= work1[permutation[i] * tmp;
 work1[work2[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work2[i + 1][pj] * tmp;
work1[permutation[i]] -=  tmp * tmp; }
 tmp = work1[pj] * diag[i]; tmp += tmp ;
 tmp -= work[i][pj] * tmp;
 tmp += work2[i]; tmp = -tmp;
 tmp += work2[i][pj];
work1[i] -= tmp
 tmp += work1[permutation[i][j]];
 jacobian[j][permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][j] * tmp; tmp = tmp ; }
 tmp += work2[permutation[i]];
 tmp = work1[permutation[j]][pj] * tmp;
 tmp = work1[pj] - Adjacobian[i][pj] * tmp;
 work1[permutation[j]]*-= jacobian[i][pj] * tmp;
work1[tmp];
work1[permutation[i]] -= jacobian[i] * tmp; tmp = work2[j];
work1[permutation[i]] = tmp * tmp;
 tmp -= work[i] * tmp;
work1[permutation[i]]  = tmp; tmp = work2[i];
 sum1 += tmp* tmp;
 tmp -= jacobian[i][pj] * dxNorm;
 tmp += work3[i] * tmp;
 tmp = work1[pj] * diag[i]; tmp += tmp * tmp ;
 double s = work1[permutation[i]]; tmp += s * s ; tmp -= s ; tmp = tmp ;
work1[permutation[i]] -= jacobian[i][pj]; tmp++;
 tmp += work1[permutation[i]][pj] * tmp;
 tmp = tmp + work2[i][pj] * tmp;
 work1[]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i]; tmp = work1 [ pj ] ;
 tmp += work1[i] ;
 tmp -= work2[i + 1] * tmp;
 tmp = work1[pj] * diag[i]; tmp -= tmp ;
 tmp += lmDir[pj] * tmp;
 work1[pj] = work1[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work1[permutation[i] - jacobian[i][j]];
 tmp += work1[pj] * [i][pj] * tmp;
 jacobian[i][work1[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work1[pj] + work[i][pj] * tmp;
 tmp=tmp;
 tmp *= work2[pj] * tmp;
 tmp += work1[permutation[i][pj]];
 work1[mutation[i][pj]] -= jacobian[i][pj] * tmp;
 tmp = work1[i + 1][pj] * tmp;
 work1[pj] -= tmp* tmp;
 tmp += work2[i]; work1[pj] * tmp;
 tmp = work1[pj] * tmp;
work1[permutation[i]] -= jacobian[i][j]; tmp = work1[pj];
 tmp += work2 [ i ] ; tmp -= work1 [ pj ] ;
work1[permutation[i]] -=  tmp; tmp = tmp - delta;
 work1[pj] * tmp-= jacobian[i][pj] * tmp;
 tmp += work2[i] * tmp*tmp;
work1[permutation[i]]  = tmp ; tmp = tmp ;
work1[permutation[i]] -= jacobian[i][pj]; tmp += tmp * tmp ;
 double s = work1[permutation[i]]; tmp += s * s ; tmp -= s * s ; }
 tmp += work[i][pj] * tmp;
 tmp += work2[i]; tmp -= tmp;
work1[pj] *= tmp * tmp;
 tmp = work1[pj] * diag[i]; tmp += tmp * tmp * tmp ;
 double s = work1[permutation[i]]; tmp += s * s ; tmp = tmp * tmp ; }
 tmp = work1[pj] * work2[i]; tmp += tmp * tmp ; tmp = tmp ;
work1[permutation[i]] -=  tmp * tmp * tmp;
 tmp = work1[permutation[i] * tmp;
 work1[i] -= tmp* tmp;
 work2[i] = -tmp;
 tmp = work1[pj] * diag[i]; tmp += tmp * tmp * tmp * tmp ;
 tmp += work1[pj] * Adjacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp += tmp ;
 tmp = work1[pj] * diag[i]; tmp += tmp * tmp ; tmp = tmp ;
 tmp += work1[permutation[i] * dxNorm;
 jacobian[i][permutation[i]] -= jacobian[i][pj] * tmp;
 tmp -= jacobian[i][pj] * work1[pj] ;
 tmp = work1[pj] * work2[i]; tmp += tmp * tmp * tmp ;
work1[permutation[i]] -= jacobian[i] * tmp; tmp = tmp * tmp ; }
 tmp = work2[i + 1] * tmp;
 double s = work1[permutation[i]]; tmp += s * s ; tmp = work2[i] ;
 tmp = work1[pj] - [i][pj] * tmp;
 tmp = work1[pj] * work2[i]; tmp += tmp * tmp ; }
work1[permutation[i]]  = tmp; tmp = work2[j];
work1[permutation[i]] -=  tmp * tmp * tmp ; }
 tmp = work1[pj] * work2[i]; tmp += tmp * tmp * tmp ; }
 double tmp = work1[permutation[i]] * jacobian[i][pj] + tmp;
 double s = work1[permutation[i]]; tmp += s * s ; tmp -= s * s ; break ;
 tmp = work1[pj] * work2[i]; tmp += tmp * tmp * tmp * tmp ;
work1 += tmp
 tmp = work1[j]*jacobian[i][pj] * tmp;
 tmp -= work2[i + 1][pj] * tmp;
work1[permutation[j]] += tmp;
 tmp -= jacobian[i][pj] * tmp; } } else {
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp += tmp * tmp ; }
work1[i] = tmp * tmp ; }
 double tmp = work1[permutation[i] - jacobian[i][j]];
 tmp += work1[i] * dxNorm;
work1[permutation[i]] -=  tmp * tmp ; tmp = tmp ;
work1[permutation[i]]  += tmp
 tmp = work1[pj] * diag[i]; tmp -= tmp * tmp ;
 tmp = work1[pj] - work[i][pj] * tmp;
 tmp = work2[i]; tmp -= -tmp;
 tmp += work[i] * tmp;
 work1[work2[permutation[j]] -= jacobian[i][pj] * tmp;
 tmp = work1[pj] * diag[i]; tmp += tmp * tmp ; }
work1[permutation[i]]  = tmp ; tmp = tmp ; }
 tmp = work2[i][pj];
work1[permutation[i]] -= jacobian (tmp) * tmp;
 work1[pj] = tmp*tmp;
 tmp = work1[permutation[ji][pj] * tmp;
work1[permutation[i]] -= jacobian[tmp] * tmp;
 tmp = work3[i]; work1[pj] * tmp;
work1 += tmp ;
 tmp = work2[i]; tmp += delta* tmp;
 tmp += work2[i]; tmp = tmp;
 work[i]] -= jacobian[i][pj] * tmp;
 tmp = work1[pj] - work2[i]; tmp *= tmp ;
 double tmp = work1[permutation[i] - jacobian[j][pj]];
work1[permutation[i]] -=  tmp; tmp = work2[j]; }
 tmp = work1[pj] * diag[i]; tmp ++ ;
 tmp = tmp ; work1[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp += jacobian[i][pj] ; }
 tmp = work1[i] * tmp;
 tmp = work1[permutation[i] * work2[pj] ;
 work1[pj][permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work2[i]; tmp += tmp* tmp;
 tmp += work2[i] * Adjacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[j] * tmp; tmp = tmp ; }
work1[permutation[i]] -= jacobian[i]; tmp += tmp * tmp ; }
 work1[pj] [work2[i]] -= jacobian[i][pj] * tmp;
 tmp = work1[pj] * work2[i]; tmp *= tmp ;
 work1[mutation[pj]] -= jacobian[i][pj] * tmp;
 tmp += tmp * tmp * tmp * tmp;
 tmp = work1[permutation[i] - jacobian[i][pj];
 tmp = work2[pj]* tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp = work1[pj]; }
 tmp = tmp + work3[pj] * tmp;
 double s = work1[permutation[i]]; tmp += s * s ; tmp = work2[i]; }
 tmp += work1[pj]*jacobian[i][pj] * tmp;
 double s = work1[permutation[i]]; tmp += s * s ; tmp -= s ; } } }
 double tmp = work1[permutation[i]]; tmp += jacobian[i][pj] * tmp
 work1[mutation[i][j]]-= jacobian[i][pj] * tmp;
 tmp += work1[permutation[pj]];
work1[permutation[i]] -= jacobian[i] * tmp; tmp = work1[j];
work1[permutation[i] = tmp; tmp = work2[i];
 double tmp = work1[permutation[i]]; tmp += jacobian[i][j] ;
work1[permutation[i]] -= jacobian[i][pj] * tmp; tmp = work2[i]; }
 double tmp = work1[permutation[i]] * jacobian[i][pj] * tmp + delta;
 tmp = work1[pj] * diag[i]; tmp += tmp * tmp * tmp ; }
 work1[permutation[j]]+-= jacobian[i][pj] * tmp;
 tmp = work3[permutation[pj] * tmp;
 tmp += work2[i][j] ;
 tmp = work1[pj] * diag[i]; tmp += tmp * dxNorm ;
 double s = work1[permutation[i]]; tmp += s * s ; } tmp = tmp * tmp ;
 tmp = work1[i + 1] * tmp;
 tmp = work2[pj]; work1[permutation[i]] -= jacobian[i][pj] * tmp;
 work2[permutation[j] -= jacobian[i][pj] * tmp;
work1[i] = tmp
work1[permutation[i]] -= jacobian[i][j] * tmp; tmp = tmp;
work1[permutation[i]] -=  tmp * tmp * tmp * tmp;
 double tmp = work1[permutation[i]]; tmp += tmp * tmp ; tmp = tmp * tmp ;
 work1[j][jacobian[i]] -= jacobian[i][pj] * tmp;
 tmp[i] * tmp;
 double tmp = work1[permutation[i] - jacobian[i][pj] ;
work1[permutation[i]] -= jacobian[i]; tmp += tmp * tmp ;
 tmp = work1[i]; tmp -= delta* tmp;
 tmp = work1[pj] * work2[i]; tmp += tmp * tmp ; } } }
 tmp += work1[permutation[i]]; }
 tmp = work1[pj] * work2[i]; tmp -= tmp ;
work1[permutation[i]] -= jacobian[i]; tmp += tmp ;
 work1[work[i]] -= jacobian[i][pj] * tmp;
 jacobian[i][work2[permutation[i]] -= jacobian[i][pj] * tmp;
 work1[work1][permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work1[pj] * diag[i]; tmp -= tmp * tmp * tmp ;
 tmp = work1[permutation[i] - jacobian[j][pj];
 tmp = work1[pj] * work3[i]; tmp += tmp * tmp * tmp ; }
 tmp = work1[permutation[i] * tmp + jacobian[i]];
 tmp += work2[i] * delta* tmp;
 tmp = work1[pj] * work2[i]; tmp += tmp ;
work1[permutation[i]] += tmp * tmp ; } } }
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp += tmp * tmp ;
 tmp = work2[j]; work1[pj] * tmp;
 tmp += work1[permutation[i] * work2[pj] ;
 tmp = tmp * tmp + work2[pj] * tmp;
 tmp = work2[pj] + Adjacobian[i][pj] * tmp;
 tmp -= jacobian[i][pj] * work1[pj]; }
 tmp = work2[pj] + [i][pj] * tmp;
 tmp -= jacobian[i] * work1[permutation[j] ;
work1[permutation[i]] -= jacobian[i] * tmp * tmp * tmp;
work1[permutation[i]] -= jacobian[i]; tmp = work1[pj]; }
 tmp = work2[i]; += tmp* tmp;
 tmp += work1[permutation[i] * jacobian;
 tmp = work1[pj] * diag[i]; tmp += tmp * tmp ; } } }
 tmp -= work1[permutation][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp * dxNorm;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; }
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp = work2[j];
work1[permutation[i]] -= jacobian[i] * tmp; tmp = tmp - delta;
 tmp = work2[j][pj] * tmp;
 work1[mutation[i]]-= jacobian[i][pj] * tmp;
 tmp = work1[pj] * diag[i]; tmp -= tmp * tmp ; }
work1[permutation[i]] -= jacobian[i] * tmp; tmp = tmp + delta;
 work1[pj] [jacobian[i]] -= jacobian[i][pj] * tmp;
 tmp -= work1[pj];
work1[permutation[i]] -= jacobian(tmp, tmp) * dxNorm;
 double tmp = work1[permutation[i] - jacobian[j][pj];
 double tmp = work1[permutation[i]]; tmp += jacobian[i][pj] ; }
work1[permutation[i]] -= jacobian(tmp) * dxNorm;
work1[permutation[i]] -= jacobian[i][tmp]; tmp = work1[pj];
 tmp = work1[pj] * work2[i]; tmp ++ ;
 tmp = work1[pj] * diag[i]; tmp -- ;
work1[permutation[i]] -= jacobian[i]; tmp -= tmp ;
 tmp = tmp * tmp ; work1[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work1[i]; work2[pj] * tmp;
 tmp = work1[pj] * diag[i]; tmp += tmp * work2[i]; }
work1[permutation[i] += tmp
work1[permutation[i]] -= jacobian[i][pj]; tmp -= tmp * tmp;
 work1[pj][[i]] -= jacobian[i][pj] * tmp;
 double tmp = work1[permutation[i]]; tmp = tmp + tmp * tmp ; tmp = tmp * tmp * tmp ;
 tmp = work1[tmp][pj] * tmp;
 tmp = work1[pj] * diag[i]; tmp += tmp * tmp ; } }
 tmp = work1[pj] * work2[i]; tmp += tmp * tmp ; } }
 tmp += work2[i + j] * tmp;
work1[permutation[i]] -= jacobian[i][tmp]; }
 tmp = work2[i] * tmp;
 work1[pj] * tmp;
work1[pj] *= work2[j];
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp = work1[j];
 work2[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp += work2[i]; }
work1[permutation[i]] += tmp * tmp ; } }
 tmp -= jacobian[i] * work1[pj] * tmp; }
work1[i] *= tmp; }
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp -= tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp = work2[i];
 work1[i] * tmp-= jacobian[i][pj] * tmp;
 double tmp = work1[permutation[i]]; tmp = tmp + tmp * tmp ; tmp = tmp * tmp + tmp ;
work1[permutation[i]] += tmp * tmp + tmp * tmp ;
 tmp = work2[j]*jacobian[i][pj] * tmp;
 tmp = work2[pj] - Adjacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj] * tmp * tmp; tmp = tmp * tmp ;
 tmp = work1[i]; tmp += delta* tmp;
 tmp = -tmp;
 tmp += work2[i - 1][pj] * tmp;
 work1[permutation[j][pi]] -= jacobian[i][pj] * tmp;
 tmp += work1[permutation[i];
 tmp = tmp - work2[pj] * tmp;
 tmp -= jacobian[i][pj] * work2[pj]; }
work1[pj] -= tmp * tmp * tmp;
 tmp = work1[pj] * -tmp;
 tmp *= work3[pj] * tmp;
 work1[i - j] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp += tmp * tmp ; }
 work1[i] * tmp;
 tmp = work1[i] + work3[pj] * tmp;
 tmp += tmp * tmp;
 double tmp = work1[permutation[i] + jacobian[i][pj] ;
work1[permutation[i]] -= jacobian[i][pj]; tmp -= tmp ;
 tmp = work1[pj]*[i][pj] * tmp;
 work1[pj] *-= jacobian[i][pj] * tmp;
 tmp -= jacobian[i][pj] * work2[i]; }
 tmp += work1[permutation[i] * tmp; }
 double tmp = work1[permutation[i]] * jacobian[i][pj] * tmp; }
 tmp += work2[i;
 work1[permutation[j]][[i]] -= jacobian[i][pj] * tmp;
 tmp += work2[j] * [i][pj] * tmp;
 tmp = work1[permutation[i] + tmp; } else {
 double tmp = work1[permutation[i]]; tmp += tmp * tmp * tmp * tmp * tmp;
 tmp = work1[permutation[i] - jacobian[i][j] ;
 work1[mutation[j]]-= jacobian[i][pj] * tmp;
work1[permutation[i]] = tmp + tmp * tmp ;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp = tmp - tmp ;
 work2[permutation[j]] -= jacobian[i][pj] * tmp;
 tmp += work2[permutation[i]]; }
 tmp = work1[pj] + delta[pj] * tmp;
 tmp = work2[i] + Adjacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp; tmp += tmp * tmp ;
 tmp -= jacobian[i][pj] * work2[j]; }
 tmp = - work1[pj] * tmp;
 tmp = work1[pj] * diag[pj] ; }
 tmp = work1[permutation[i]]; }
 tmp += work2[i++][pj] * tmp;
 tmp -= work2[i;
work1[permutation[i]] -= jacobian[i][pj] * tmp; tmp = work1[i]; }
 work1[i-1] -= jacobian[i][pj] * tmp;
 double tmp = work1[permutation[i] + tmp; tmp = work2[i] ;
 work1][pj] * tmp;
 tmp += work2[i]; }
 tmp += work1[permutation[j]][pj] * tmp;
 tmp += j * jacobian[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work1[permutation[ii][pj] * tmp;
work1[permutation[i]] -= jacobian[j] * tmp; tmp = tmp;
 jacobian[i][j]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj] * tmp; tmp += tmp * tmp ; } } }
work1[permutation[i]] -= jacobian(tmp);
work1[permutation[i]] -= jacobian[i] * tmp; tmp += tmp ; }
work1[permutation[i]] -= jacobian[i][j] * tmp * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp -= tmp * tmp ;
work1[permutation[i]] -= jacobian[i][j]; tmp += tmp * tmp ; }
work1[permutation[i]] -= jacobian[i] * tmp; }
 tmp += work2[i] *;
work1 -= tmp
 work1[pj][pj] -= jacobian[i][pj] * tmp;
work1[permutation[i]] += tmp * tmp ; break ;
 tmp += jacobian[i] * work2[pj]; }
 tmp = work2[i] + [pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp; tmp = - tmp;
 tmp = work3[i][pj] * tmp;
 work2[pj]-= jacobian[i][pj] * tmp;
 work1[i-= jacobian[i][pj] * tmp;
 tmp = tmp - work3[pj] * tmp;
work1[permutation[i]] += tmp * tmp + tmp ; }
 tmp = work1[permutation[i] + tmp; } else { tmp =
work1[permutation[i]] -= jacobian[tmp]; }
 work1[permutation[pi]] -= jacobian[i][pj] * tmp;
 tmp = work1[pj]-jacobian[i][pj] * tmp;
 work1[permutation[j]][i]] -= jacobian[i][pj] * tmp;
 tmp = tmp * tmp*tmp;
work1[permutation[i]] -= jacobian[j] * tmp * tmp;
 tmp = tmp + tmp * work2[pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp * tmp * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp -= work2[i]; }
 work1[jacobian[i]] -= jacobian[i][pj] * tmp;
 sum1 += tmp * tmp* tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp -= tmp ; }
 tmp += work1[permutation[i] * work2[pj]; }
work1[permutation[i]] -= jacobian[i][j]; tmp = work2[i];
 tmp = tmp + delta * work2[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i]; tmp += tmp ; }
 work1[j][i]-= jacobian[i][pj] * tmp;
 work1[lmDir[i]] -= jacobian[i][pj] * tmp;
 tmp += work[pj] * tmp;
work1[permutation[i]] -= jacobian[i][j]; tmp += work2[i]; }
 tmp -= work2[i++][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp = work1[i];
work1[permutation[i]] -= jacobian[i]; tmp += work2[i]; }
 work1[permutation[j[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp; tmp -= tmp;
 work1[pj] * work2[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] = tmp + tmp * dxNorm;
 tmp -= jacobian[i] * work1[pj]; }
work1[permutation[i]] -= jacobian[i]; tmp -= work2[j]; }
 tmp += work1[permutation[i]);
 tmp += work2[i]+tmp;
 tmp = work2[i][i][pj] * tmp;
work1[permutation[i]] -= jacobian (tmp) * tmp * tmp;
 tmp = work1[pj] + w[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i]; tmp -- ;
 work1[i] = work1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp *= tmp;
 tmp = tmp + delta ; work1[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work1[pj] + dx[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp -= tmp ; }
 tmp = work1[pj]** tmp;
 double tmp = work1[permutation[i]]; tmp += jacobian[i][pj] * tmp,
 tmp += work1[permutation[ji][pj] * tmp;
 tmp -= work[pj] * tmp;
 work1[j-= jacobian[i][pj] * tmp;
 tmp = work1[i] - delta* tmp;
 tmp -= tmp * tmp;
 tmp = work2[j][i][pj] * tmp;
work1[permutation[i]] -= jacobian(tmp, tmp);
work1[permutation[i]] -= jacobian[i][pj] * tmp; tmp = work2[pj]; }
 work1[mutation[j][pi]] -= jacobian[i][pj] * tmp;
 tmp = tmp - work1[pj] * tmp;
 tmp += work1[permutation[i] * pj]; }
 double tmp = work1[permutation[i]] * jacobian[i][pj] * tmp; } else
work1[permutation[i]] -= jacobian(tmp) * tmp; tmp = tmp;
 tmp = work1[i] + [pj] * tmp;
 tmp = work1[j] + work[i][pj] * tmp;
 tmp += jacobian[i]; work[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[j] * tmp;
work1[permutation[i]]  += tmp * tmp ; tmp = 0 ;
work1[permutation[i]]  = tmp * work2[i]; }
 tmp = work2[i]; tmp += dx[pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp; tmp += tmp ;
 tmp += tmp + tmp * tmp;
work1[permutation[i]] -=  tmp; }
work1[permutation[i]] -= jacobian[tmp] * dxNorm;
 tmp -= jacobian[i]; delta[permutation[i]] -= jacobian[i][pj] * tmp;
work1 -= tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp + delta;
 tmp = work3[i] + [pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp -- ;
 tmp = work1[pj] + d[i][pj] * tmp;
 tmp = work2[i] - delta* tmp;
 tmp = tmp + work3[i][pj] * tmp;
 work2[i] += tmp* tmp;
work1[permutation[i]] -= jacobian[i][j]; tmp = work1[i];
work1[permutation[i]] -= jacobian[i]; tmp *= tmp;
 tmp = work1[pj] - delta[pj] * tmp;
 jacobian[i][pj][permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian(tmp) * work2[j]; }
 work1[tmp[i]] -= jacobian[i][pj] * tmp;
 tmp -= work2[permutation[i]]; }
 work1[permutation[j][++i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -=  tmp * tmp ; } }
 tmp += [] * tmp;
 tmp -= - work1[pj] * tmp;
 jacobian[work1][permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation] -= tmp
 tmp += jacobian[j][permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i] ; }
 tmp += work1[j][permutation[i]] -= jacobian[i][pj] * tmp;
 tmp += work1[permutation[i] * pj] ;
work1[permutation[j] += tmp;
 tmp += work2[i][i][pj] * tmp;
 tmp = tmp + work1[i][pj] * tmp;
 tmp = work1[permutation[-i][pj] * tmp;
 double tmp = work1[permutation[i]] * jacobian[i][pj] + tmp; }
work1[tmp]
 tmp -= jacobian[i][pj] * tmp; } else
work1[permutation[i]] -= jacobian[i][j]; tmp -= tmp * tmp ;
 tmp -= tmp * dxNorm;
 tmp = work3[j]*jacobian[i][pj] * tmp;
 work1[permutation[j][i][i]] -= jacobian[i][pj] * tmp;
 tmp += work3[i][pj] * tmp;
work1[permutation[i]] -=  tmp; tmp = - tmp;
 work1[j+1[i]] -= jacobian[i][pj] * tmp;
 work2[i]-= jacobian[i][pj] * tmp;
 tmp -= lmDir[pj] * tmp;
work1[permutation[i]] = tmp; }
 jacobian[i][j][permutation[i]] -= jacobian[i][pj] * tmp;
 work2[i][j]] -= jacobian[i][pj] * tmp;
 tmp = tmp - work2[i][pj] * tmp;
 tmp += work2[i] * work3][pj] * tmp;
 tmp -= jacobian[i]; work[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian(tmp, tmp) * delta;
 tmp = work2[i]; work3[pj] * tmp;
 tmp += fp;
 tmp = tmp + i * work2[pj] * tmp;
 tmp = work1[j] - work[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i]; tmp = work2[i];
work1[permutation[i]]  = tmp
 tmp += work2[j][i][pj] * tmp;
work1[permutation[i]] -= jacobian(tmp, tmp); }
work1[permutation[i]] -= jacobian[i]; tmp -= tmp * tmp ;
 work1[i] = tmp * -tmp;
 tmp += jacobian[i][pj] * tmp; } else
work1[permutation[i]] -= jacobian(tmp) * work2[i]; }
 work2[pj]] -= jacobian[i][pj] * tmp;
 tmp = - work2[pj] * tmp;
 tmp += 1.0; work1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i] -= tmp;
 double tmp = work1[permutation[i]]; tmp = tmp + tmp * tmp ; tmp = tmp * tmp * tmp ; }
 tmp -= work2[jj][pj] * tmp;
 tmp = tmp + tmp * tmp;
 double tmp = work1[permutation[i] - jacobian[i][j] ;
 tmp = tmp * -tmp;
 tmp = work2[i] - [pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp + delta;
 tmp -= work1[i;
work1[permutation[i]] -=  tmp; } } }
 tmp += work2; work1[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp += work2[i] * [pj] * tmp;
 work1[j + 1][i]] -= jacobian[i][pj] * tmp;
 tmp += jacobian[i]; delta[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp = tmp - tmp ;
 double tmp = work1[permutation[i]]; tmp += tmp * tmp ; tmp = tmp * tmp ; tmp = tmp ; }
 tmp = tmp * tmp + work2[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i]; tmp = tmp - tmp ;
 double tmp = work1[permutation[i]]; tmp = tmp * tmp ; tmp = tmp * tmp ; tmp = tmp ; }
work1[permutation[i]] -= jacobian[i] * tmp; } }
 work1[permutation[j][[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][tmp]; break;
 tmp += work1[permutation[i] * jacobian];
 tmp = tmp + tmp * work3[pj] * tmp;
 tmp = tmp * tmp - work2[pj] * tmp;
 work2[permutation[i]] -= jacobian[i][pj] * tmp;
 work2[j][permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]];
 tmp = work1[i] + work[i][pj] * tmp;
work1[permutation[i]] += jacobian[i][pj] * tmp;
 tmp *= lmDir[i][pj] * tmp;
 tmp -= work1[][pj] * tmp;
 double tmp = work1[permutation[i]]; tmp = tmp + tmp ; tmp = tmp * tmp ; tmp = tmp ; }
work1[permutation[i]] -= jacobian[i]; tmp++;
 tmp += work2[j];
work1[permutation[i]] -= jacobian[i][pj]  * tmp; break;
 work1[pjDir[i]] -= jacobian[i][pj] * tmp;
 work1[j][work2[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work2[i] * -tmp;
work1[permutation] = tmp;
 tmp += delta;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; } }
 tmp += work2[jj][pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp; tmp --;
work1[permutation[i]] -= jacobian(tmp); }
 tmp +=
 double tmp = work1[permutation[i]]; tmp = tmp + tmp * tmp ; tmp = tmp * tmp + tmp ; }
 tmp += 1.0;
work1[permutation[i]] -= jacobian[i][j]; tmp -= tmp;
work1[permutation[i]] -= jacobian[i] * tmp; break;
 tmp = work1[i]*jacobian[i][pj] * tmp;
 tmp += work2[i] * dir[pj] * tmp;
 tmp = work2[j] + work[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][tmp][j]; }
work1[permutation[i]] -= jacobian[i][j]; tmp = tmp - tmp ;
 work2[j]-= jacobian[i][pj] * tmp;
 tmp -= tmp; work1[permutation[i]] -= jacobian[i][pj] * tmp;
 jacobi[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp; tmp ++ ;
work1 = tmp ;
 tmp = tmp + tmp * work2[i][pj] * tmp;
 work3[permutation[j] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  ; }
work1[permutation[i]] -= jacobian(tmp, work2[i]) ; }
work1[tmp] += tmp
 tmp = work1[j]-jacobian[i][pj] * tmp;
 tmp -= - work2[pj] * tmp;
 tmp += jacobian[i][pj] * tmp,
work1[permutation[i]] -= jacobian(tmp, work2[i]) ;
work1[permutation[i]] -= jacobian[i][j]; tmp += tmp ;
 work1[[i]] -= jacobian[i][pj] * tmp;
 double jacobian[permutation[i]] -= jacobian[i][pj] * tmp;
 work1[permutation[ji]] -= jacobian[i][pj] * tmp;
 tmp = work1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian(tmp, work2[j]) ;
 tmp += jacobian[i][pj] * tmp; } }
 work2[i] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp * tmp; }
 tmp = tmp * tmp ; } work1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp --;
 tmp += work1[][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp - delta;
 tmp = tmp + delta * work1[i][pj] * tmp;
 tmp = work1[i] + delta[pj] * tmp;
 double tmp = work1[permutation[i]]; tmp = tmp + tmp * tmp ; tmp = tmp * tmp ; } }
 tmp = tmp + delta * work3[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][j] * tmp;
 work3[permutation[j]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][tmp] * tmp + delta;
 tmp += work1[i] *;
 tmp += jacobian; work2[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp; tmp ++ ;
 work2[pj] * tmp;
work1[permutation[i]] -= jacobian[i][j] * tmp; } }
 tmp -= Adjacobian[i][pj] * tmp;
 tmp = tmp + -tmp;
 tmp += work2[j][permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][tmp] * tmp; } }
 work1[work3[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work[i][pj] * tmp;
work1[permutation] = tmp
work1[permutation[i] -= tmp
 tmp += tmp * -tmp;
 tmp += [i] * tmp;
 work1[j][work1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i] * tmp * tmp; }
 work1[permutation][j] -= jacobian[i][pj] * tmp;
 tmp = tmp + tmp;
 tmp = work1[i] + dx[pj] * tmp;
work1[permutation[i]] -= jacobian (tmp) * tmp + delta;
 tmp ++;
work1[permutation[i]] -=  tmp; } }
work1[permutation[i]] -= jacobian[i][j] * tmp + delta;
work1[permutation[i]] -= jacobian[i][tmp]; tmp ++ ;
 return [pj] * tmp;
work1[permutation[i]] -= jacobian(tmp) * tmp; } }
 jacobianDir[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][tmp]; tmp = tmp - tmp ;
 tmp = tmp + delta;
work1[tmp] -= tmp
 double s =
work1[permutation[i]] -= jacobian(tmp) * tmp; } } }
 tmp = tmp + work1[permutation[i]] -= jacobian[i][pj] * tmp;
 work2][pj] * tmp;
 work3][pj] * tmp;
work1[permutation] -= tmp;
 tmp -= work2[j][i][pj] * tmp;
work1[permutation[i]] -=  tmp; break;
 return [] * tmp;
 tmp += Adjacobian[i][pj] * tmp;
 work1[jj]-= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][tmp]; tmp -- ;
 work1[i][permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp * tmp * tmp; }
 tmp = tmp - delta;
 work1[p[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; tmp;
 work1[i[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i]; tmp = tmp ;
 work[j]] -= jacobian[i][pj] * tmp;
 jacobian[i]*[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp *= work2[i][pj] * tmp;
 tmp = tmp ; } work1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  * tmp + tmp * tmp; }
work1[permutation[i]] -= jacobian(tmp, pj);
 work1[pj] [j+1[i]] -= jacobian[i][pj] * tmp;
work1[permutation] += tmp
 work3[i][pj] * tmp;
 tmp -= pj;
work1[permutation[i]] -= jacobian(tmp, pj); }
 tmp *-= jacobian[i][pj] * tmp;
 tmp = tmp - tmp;
 work1[i][i]] -= jacobian[i][pj] * tmp;
 tmp = tmp + delta* tmp;
 work1[adj[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][j] * tmp * tmp; }
work1[permutation[i]] -= jacobian[i][tmp]; } }
 work3[pj]-= jacobian[i][pj] * tmp;
work1[] = tmp;
work1[permutation[i]]  = tmp + dxNorm;
 tmp -= w[i] * tmp;
 tmp += pj;
 tmp += dxNorm* tmp;
 tmp = tmp - delta* tmp;
work1[permutation[i]] -=  tmp; tmp --;
 work1[j] = work1[row[i]] -= jacobian[i][pj] * tmp;
 work1[pj] +=* tmp;
 tmp -= _jacobian[i][pj] * tmp;
work1[permutation[i]);
work1[permutation[i]] -= jacobian[i][tmp][pj]; }
 work1[jj]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i]+tmp;
 work1[j] = work1[index[i]] -= jacobian[i][pj] * tmp;
 work1[norm[i]] -= jacobian[i][pj] * tmp;
 tmp += w[i] * tmp;
 work2[i]] -= jacobian[i][pj] * tmp;
 tmp += _jacobian[i][pj] * tmp;
 tmp = (double) Adjacobian[i][pj] * tmp;
work1[permutation[i]] -=  tmp; tmp ++ ;
 tmp = tmp][pj] * tmp;
work1[permutation[i]] -= jacobian[tmp][i]; }
 jacobian[i]1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[tmp]; break;
 tmp -= 1.0* tmp;
work1[permutation] += tmp;
 tmp += 1;
 work2[j-= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][tmp][j];
 work1[pj] [j + norm[i]] -= jacobian[i][pj] * tmp;
 tmp -= dx[pj] * tmp;
 tmp -= shift[i] * tmp;
 jacobian2[permutation[i]] -= jacobian[i][pj] * tmp;
 jacobian[i][norm[i]] -= jacobian[i][pj] * tmp;
 work1[i]*-= jacobian[i][pj] * tmp;
 tmp +=] * tmp;
 tmp += 1.0* tmp;
 tmp -= tmp;
 work1[j + norm[i]] -= jacobian[i][pj] * tmp;
 jacobi[i]] -= jacobian[i][pj] * tmp;
 jacobian[i[permutation[i]] -= jacobian[i][pj] * tmp;
 work1[i] ** tmp;
 work2[j]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian (tmp) * tmp; }
 work3[pj] * tmp;
work1[permutation[i]] -= jacobian[i]; tmp;
 work1[i] +=* tmp;
 adjust[i][pj] * tmp;
 tmp *= 2* tmp;
 work1[row[i]] -= jacobian[i][pj] * tmp;
 work3[pj]] -= jacobian[i][pj] * tmp;
 work3[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]]; }
work1[permutation[i]] -= jacobian(tmp), tmp;
 [work1[i]] -= jacobian[i][pj] * tmp;
 work1[j+2[i]] -= jacobian[i][pj] * tmp;
 tmp += work3][pj] * tmp;
 tmp[work1[permutation[i]] -= jacobian[i][pj] * tmp;
 work[i] -= jacobian[i][pj] * tmp;
 tmp = -tmp* tmp;
 tmp -= tmp * tmp; }
 tmp += dx[pj] * tmp;
 tmp = work2[ii][pj] * tmp;
 work3[i] * tmp;
 work1[i] -=* tmp;
 tmp = work1[i].jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[tmp]; } }
 tmp -= [i] * tmp;
 tmp = tmp - -tmp;
 work1[pj][pi]] -= jacobian[i][pj] * tmp;
 tmp = tmp[pj] * tmp;
 tmp -= [] * tmp;
 tmp += work2.5* tmp;
 Work1[permutation[i]] -= jacobian[i][pj] * tmp;
 return tmp;
 tmp *= -tmp;
 tmp[]] -= jacobian[i][pj] * tmp;
work1[tmp++;
 tmp = tmp + delta; delta[permutation[i]] -= jacobian[i][pj] * tmp;
 work1[pi]] -= jacobian[i][pj] * tmp;
 tmp *= work1[i][pj] * tmp;
work1[permutation[i]] -=  tmp - delta;
 tmp += Math.dot(jacobian[i][pj] * tmp;
 tmp += f;
 return tmp* tmp;
 tmp *= delta* tmp;
work1[i]++;
work1 = tmp
 tmp = (double) invAdjacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; break;
 tmp += -1;
 tmp = work1[ii][pj] * tmp;
work1[permutation[i]] -= jacobian + tmp;
work1[permutation[i]]  -= tmp
 tmp += lmDirAdjacobian[i][pj] * tmp;
work1 [ tmp ++ ]
 tmp += [i][pj] * tmp;
 tmp -= work3][pj] * tmp;
 tmp = (double) d_jacobian[i][pj] * tmp;
 tmp * tmp-= jacobian[i][pj] * tmp;
 tmp += dpDir[i][pj] * tmp;
 work3[i]] -= jacobian[i][pj] * tmp;
 tmp += p;
 adjust[pj] * tmp;
 tmp * delta-= jacobian[i][pj] * tmp;
 tmp -= w[i][pj] * tmp;
 tmp = work1[i]+jacobian[i][pj] * tmp;
 tmp = work2[i].jacobian[i][pj] * tmp;
work1[permutation = tmp];
 matrix[i][i]] -= jacobian[i][pj] * tmp;
 tmp += w[i][pj] * tmp;
 tmp = [i][pj] * tmp;
 work[j] -= jacobian[i][pj] * tmp;
work1[permutation[j]++;
 tmp += lmDir_jacobian[i][pj] * tmp;
 return [i][pj] * tmp;
 tmp += djacobian[i][pj] * tmp;
work1[permutation[i]]  += tmp; }
 tmp += d_jacobian[i][pj] * tmp;
 work[]] -= jacobian[i][pj] * tmp;
 lmDir[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp[j] -= jacobian[i][pj] * tmp;
 tmp -= norm[pj] * tmp;
 tmp * 2-= jacobian[i][pj] * tmp;
 Work1[pj]] -= jacobian[i][pj] * tmp;
 tmp += i][pj] * tmp;
 tmp = inv_jacobian[i][pj] * tmp;
 work2[]] -= jacobian[i][pj] * tmp;
 += tmp* tmp;
work1[permutation[i]] -= jacobian[i], tmp;
work1[permutation[i]] -= jacobian(tmp), tmp);
work1[j]++;
 tmp += invAdjacobian[i][pj] * tmp;
 tmp -= [i][pj] * tmp;
 tmp + delta-= jacobian[i][pj] * tmp;
 tmp -= d_jacobian[i][pj] * tmp;
 work1[ij] -= jacobian[i][pj] * tmp;
 ++tmp;
 p[i] -= jacobian[i][pj] * tmp;
 tmp + 1-= jacobian[i][pj] * tmp;
 work0[pj]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]; } }
work1[permutation[i]) = tmp;
 tmp[i]] -= jacobian[i][pj] * tmp;
 jacol[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp -= inv_jacobian[i][pj] * tmp;
 tmp += [pj] * tmp;
 yield [] * tmp;
work1[permutation[i]] -= jacobian; }
 return work3][pj] * tmp;
 tmp[i][permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  - tmp;
 matrix[j][permutation[i]] -= jacobian[i][pj] * tmp;
 ++ tmp* tmp;
 work[permutation[i]] -= jacobian[i][pj] * tmp;
 matrix[i[i]] -= jacobian[i][pj] * tmp;
 tmp -= [pj] * tmp;
 work1[permute[i]] -= jacobian[i][pj] * tmp;
 jacos[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp += tmp][pj] * tmp;
work1[permutation[i] =
work1[permutation[i]] -= jacobian[i] - tmp;
work1[permutation[i]]
work1[permutation[i]] -= jacobian[i][pj] ;
 tmp += work1[permutation[i]] -= jacobian[i][pj] * tmp;
 + tmp* tmp;
 matrix[i]] -= jacobian[i][pj] * tmp;
 tmp[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  + tmp;
work1[permutation[i]
 tmp += w1_jacobian[i][pj] * tmp;
 ++ [] * tmp;
 tmp ++;
 tmp = w1-jacobian[i][pj] * tmp;
 tmp -= dx[i][pj] * tmp;
 tmp[pj] * tmp;
work1[tmp] --
 lmPar[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp = work2[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp<-= jacobian[i][pj] * tmp;
 tmp --;
 tmp += dLmjacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[j]; }
work1[tmp++];
 tmp + work1[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp += w2_jacobian[i][pj] * tmp;
 tmp --;
 tmp = w1_jacobian[i][pj] * tmp;
 tmp *=
work1[permutation[j];
 [tmp]] -= jacobian[i][pj] * tmp;
 tmp += work2[i]);
 return Adjacobian[i][pj] * tmp;
 tmp -= 2* tmp;
 tmp -= s* tmp;
 double tmp =
work1[permutation[j]);
 yield tmp* tmp;
 return _jacobian[i][pj] * tmp;
 tmp^-= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  + tmp; }
 matrix[row[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj]  - tmp; }
work1[permutation[i]] -= jacobian[i] ;
 tmp -=] * tmp;
 jmDir[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][j]; }
 tmp += dtmp;
work1[permutation] --
 matrix[permutation[i]] -= jacobian[i][pj] * tmp;
 tmp +
 [i] -= jacobian[i][pj] * tmp;
 tmp -=
 delta[i][pj] * tmp;
 [work2[i]] -= jacobian[i][pj] * tmp;
 [j] -= jacobian[i][pj] * tmp;
 tmp[] -= jacobian[i][pj] * tmp;
work1[permutation[i]] ++;;
 tmp -= delta;
work1[permutation++];
 p[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] = jacobian[i][pj] * tmp;
 work1]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj] *  dxNorm;
 result[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian[i][pj] *  - tmp;
 delta[pj] * tmp;
 correction[i][pj] * tmp;
 tmp -= 1;
 work0[i]] -= jacobian[i][pj] * tmp;
 sum1-= jacobian[i][pj] * tmp;
work1[permutation[i])++;
work1[permutation[i]] -= jacobian[i] * tmp
 tmp *
 -Adjacobian[i][pj] * tmp;
 += Adjacobian[i][pj] * tmp;
 return djacobian[i][pj] * tmp;
work1 <- tmp
work1[permutation[i]] -= jacobian[i][j] ;
 work0[permutation[i]] -= jacobian[i][pj] * tmp;
 result[permutation[i]] -= jacobian[i][pj] * tmp;
 p[permutation[i]] -= jacobian[i][pj] * tmp;
 Work1[i]] -= jacobian[i][pj] * tmp;
work1[i];
work1[permutation[i]] -= jacobian[i][pj]  * tmp
 yield [pj] * tmp;
work1[permutation[i]] -= jacobian[j];
work1[i++;
work1[permutation[i]] -=  - tmp;
 return tmp][pj] * tmp;
 work0[pj] * tmp;
 tmp*tmp;
 work0[i][pj] * tmp;
 work0][pj] * tmp;
 [norm[i]] -= jacobian[i][pj] * tmp;
 w2[pj] * tmp;
work1[permutation[i]] -= jacobian[i][tmp]);
 [work[i]] -= jacobian[i][pj] * tmp;
work1++; tmp
work1[permutation[i]] -= jacobian[jj];
 w2[i][pj] * tmp;
work1[permutation[i]] -= jacobian[tmp]);
work1[permutation[i]] -= jacobian[i][tmp]
work1[permutation[i]] -=  temp; }
work1[permutation[i]] -= jacobian[i][jj];
work1[permutation[i]] -= jacobian[i][pj]); }
work1[permutation[i]] -= jacobian[i][pj]];
 w1[permutation[i]] -= jacobian[i][pj] * tmp;
work1[permutation[i]] -= jacobian(); }
work1[permutation[i]] -=  tmp();
work1[permutation[i]] -= jacobian[i] ; break
work1[permutation[i]] -= jacobian[i][pj] *  tmp();
work1[permutation[i]] -= jacobian[i]); }
work1[permutation[i]] -= jacobian[i][pj] *  tmp);
work1[permutation[i]] -= jacobian[i][pj]  ; break
work1[permutation[i]] -= jacobian[i][pj] *  tmp.
work1[permutation[i]] -=  1;
work1[permutation[i]] -= jacobian. }
work1[permutation[i]] -=  tmp.
work1[permutation[i]] -= jacobian[i][pj] * tmp); }
work1[permutation[i]] -= jacobian[i][pj] * tmp. }
work1[permutation[i]] -= jacobian[i][pj] = tmp;
 double
 }
 -
