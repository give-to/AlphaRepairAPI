context.addMessage(pattern, args);
 super(args);
 super(pattern, args);
context.addMessage(pattern,... args);
context.addMessage(pattern);
 super(cause); context.addMessage(pattern, args);
 super(); context.addMessage(pattern, args);
context.addMessage(pattern, args); }
 super(LocalizedFormats.ILLEGAL_STATE);
context.addMessage(pattern, args); super(pattern, args);
 super(pattern, args;
context.addMessage(pattern, args); return context;
 super(LocalizedFormats.ILLEGAL);
 super();
 super(pattern);
context.addMessage(pattern, args); super(cause);
context(pattern);
context(LocalizedFormats.ILLEGAL);
 super(LocalizedFormats.STATE);
 return
 super(cause);
context.addMessage(pattern args);
 super(pattern,...args);
 this(LocalizedFormats.args);
context.addMessage(pattern, args); super(pattern); }
context(LocalizedFormats.STATE);
 super(LocalizedFormats.ILLEGAL_);
 return context.addMessage(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause);
 super(LocalizedFormats.ILLEGALSTATE);
 this(LocalizedFormats.ILLEGAL_STATE);
context.addMessage(pattern, args) return context;
context.super(pattern);
 super(pattern, cause, args);
 super(cause); context.add(pattern, args);
 this(LocalizedFormats.STATE);
 super(LocalizedFormats); context.addMessage(pattern, args);
context.addMessage(pattern, args); return ;
context.addMessage(pattern, args); super(pattern, args); }
 context.message(pattern, args);
 super(Cause); context.addMessage(pattern, args);
context.addMessage(pattern,);
 super(LocalizedFormats.ERROR_STATE);
 super(pattern); context.addMessage(pattern, args);
 super(LocalizedFormats.ILLEGAL;
context.addMessage(pattern, args) { super(pattern, args);
context.addMessage(pattern, args
 super(LocalizedFormats.ERROR,args);
 super(LocalizedFormats.$args);
 this(LocalizedFormats.ILLEGAL);
 this(LocalizedFormats.$args);
 super(cause, pattern); context.addMessage(pattern, args);
 super(LocalizedFormats.STATE;
 super(pattern); return context;
context.addMessage(pattern, args, super(cause);
context.addMessage(pattern, args); super(pattern);
 this(LocalizedFormats.STATE, args);
 super(pattern); }
 super(cause); addMessage(pattern, args);
 return super(pattern, args);
 this(LocalizedFormats.ILLEGALSTATE);
 super(LocalizableFormats, args);
 this(LocalizedFormats.ILLEGAL_);
 this(LocalizedFormats.STATE;
 super(LocalizedFormats.UNKNOWN);
 this(LocalizedFormats.ILLEGAL_STATE,... args);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); super(exception);
 super(cause); context.message(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); }
context(LocalizedFormats.UNKNOWN);
 super(LocalizedFormats, args);
 super(pattern, args, context);
 this(LocalizedFormats.ILLEGAL_STATE, pattern);
 super(LocalizedFormats.STATE, args);
 this(LocalizedFormats);
 super(LocalizedFormats.ERROR);
 super(pattern); context.add(pattern, args);
context.addMessage(pattern, args) { super(LocalizedFormats.STATE);
 this(LocalizedFormats pattern, args);
context.addMessage();
 this(LocalizedFormats.ILLEGAL_STATE);
 super(cause).addMessage(pattern, args);
 super(pattern); args = args;
context.addMessage(pattern, args); return this;
 super(LocalizedFormats.ERROR_STATE;
 super(pattern, args); }
context.addMessage(pattern, args) { super(pattern, args); }
 this(LocalizedFormats.UNKNOWN);
context.addMessage(pattern, args, -1);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, pattern);
context(LocalizedFormats.INTERNAL);
context.addMessage(pattern, args, null);
 this(); context.addMessage(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); } super(cause);
 super(LocalizedFormats.INTERNAL);
 this(pattern, args); return;
context.addMessage(pattern, args) super(cause);
 super(pattern, args); return;
 this(LocalizedFormats.ILLEGAL_STATE); super(pattern,... args);
 this(LocalizedFormats.ERROR,args);
 this(LocalizedFormats.INTERNAL_STATE); super(cause);
 super(cause); context.addLocalMessage(pattern, args);
 super(cause);.addMessage(pattern, args);
context.addMessage(pattern, args); super(this);
context.addMessage(pattern, args, super(...));
 this(LocalizedFormats.ILLEGAL);
 super(LocalizedFormats.ILLEGAL_STATE); super(cause);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, pattern,... args);
 this(LocalizedFormats.ERROR_STATE);
 this(LocalizedFormats.ILLEGAL_STATE, super(cause));
 super(pattern); context = args;
 this(LocalizedFormats.ILLEGAL_STATE); super(cause,... args);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, pattern); }
context.addMessage(pattern, args); this(LocalizedFormats.STATE);
 super(exception);
 this(LocalizedFormats.ILLEGAL_STATE); super(pattern, args);
 super(exception); context.addMessage(pattern, args);
 super(LocalizedFormats.STATE);
context.addMessage(pattern, args); super(cause); }
 this(LocalizedFormats.ILLEGAL_STATE); super(pattern, args); }
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, pattern, args); }
 super(LocalizedFormats.ILLEGAL_STATE,... args);
context.addMessage(pattern, args, true);
context.addMessage(pattern, super(...), args);
 super(LocalizedFormats.INTERNAL;
 this(LocalizedFormats.ILLEGAL_STATE); super(pattern, Object... args);
 this(LocalizedFormats.INTERNAL_STATE); super(exception);
 this(LocalizedFormats.ILLEGAL_STATE); super(throwable);
 super(LocalizedFormats);
 super(LocalizedFormats); }
 super(...);
 super(cause); context.addMessagePattern(pattern, args);
 this(LocalizedFormats.UNKNOWN_args);
 super(LocalizedFormats.ERROR); return;
 super(Cause, LocalizedFormats); context.addMessage(pattern, args);
context.addMessage(pattern, args); super(pattern,... args);
 this(LocalizedFormats.ILLEGAL_STATE); super(exceptionContext);
 super(ExceptionContextProvider); context.addMessage(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, Pattern... args);
context.addMessage(pattern, args); return context
 super(cause); context.addMessages(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); return
 this(LocalizedFormats.ILLEGAL_STATE); super(this, pattern);
context.addMessage(pattern, args); } return context ;
 super(pattern);
context.addMessage(pattern, args); super(exception);
 super(LocalizedFormats pattern, args);
 this(LocalizedFormats.STATE); context.addMessage(pattern, args);
 this(LocalizedFormats.$pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); super(this, cause);
context.addMessage(pattern, args); super(LocalizedFormats.STATE);
 this(LocalizedFormats.ILLEGAL_STATE); } return
 super(CustomizedFormats.ILLEGAL_STATE);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, pattern, Object... args);
context(LocalizedFormats.ERROR);
 this(LocalizedFormats.ILLEGAL_STATE).super(pattern, args); super(cause);
 super(cause, pattern,... args); context.addMessage(pattern, args);
context.addMessage(pattern, cause, args);
 this(LocalizedFormats.ILLEGAL_STATE); super();
context(pattern, args);
 this (LocalizedFormats.ILLEGAL_STATE) { super(pattern, args); } } public MathIllegalStateException()
 this (LocalizedFormats.ILLEGAL_STATE); } public MathIllegalStateException(Throwable cause, String... args)
 super(LocalizedFormats.STRICT_args);
 this(LocalizedFormats.ERROR);
context.addMessage(pattern,  args); super(pattern, args, context);
context.addMessage(pattern, null, args);
 this(pattern, null,args);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, pattern, args); super(cause);
 super(cause); this(context).addMessage(pattern, args);
 super(LocalizedFormats.args);
 super(LocalizedFormats.ERROR).addMessage(pattern, args);
 super(cause); context.addCustomMessage(pattern, args);
 this(LocalizedFormats.STATE);
 this(LocalizedFormats.ILLEGAL_STATE).super(cause, pattern, args); super(cause);
context(LocalizedFormats.ERROR_STATE);
 super(LocalizedFormats.STRING,args);
 this(LocalizedFormats.UNKNOWN, args);
 super(LocalizedFormats.ERROR);
 super(cause); context.addMessageImpl(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, Pattern.class);
 this(context).addMessage(pattern, args);
 super(Cause); context.addLocalMessage(pattern, args);
 super(LocalizedFormats.ERRORS);
 this(LocalizedFormats, args);
 this(LocalizedFormats.ILLEGALSTATE);
 this(Context).addMessage(pattern, args);
 this(LocalizedFormats.STRICT_args);
 this(LocalizedFormats.INTERNAL);
 this(LocalizedFormats.Nargs);
 super(LocalizedFormats.ERROR;
 super(cause); this(pattern, args);
 super(pattern, args);
 super(LocalizedFormats);
 this(LocalizedFormats); context.addMessage(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE).super();
context.addMessage(pattern, args) { super(cause); }
 this(pattern, args);
 super(pattern); context.message(pattern, args);
 super(cause); this(cause).addMessage(pattern, args);
context.addMessage(pattern,  args); super(pattern, args); return ;
 this(LocalizedFormats.ALL_args);
 this(LocalizedFormats).STATE;
context.addMessage(pattern, args); super(pattern); *
 super(LocalizedFormats.ERROR!);
 super(LocalizedFormats.FORMAT,args);
 super(LocalizedFormat.STATE);
 this(LocalizedFormats.ILLEGAL_STATE).super(pattern, args); super(cause); }
 this (LocalizedFormats.ILLEGAL_STATE) { super(pattern, args) ; } public MathIllegalStateException()
context.addMessage(pattern, args); this(pattern, args);
context.addMessage(pattern); super(pattern, args);
 super(LocalizedFormats::$args);
 this (LocalizedFormats.ILLEGAL_STATE) { super(cause, pattern, Object... args);
 super(LocalizedFormats.REASON);
context.addMessage(pattern, args); super(pattern, args); return context;
context.addMessage(pattern, args) {} super(pattern, args);
 super(); this(LocalizedFormats.ILLEGAL);
 super(cause); context.addMessageInternal(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); } else {
 this (LocalizedFormats.ILLEGAL_STATE); } public MathIllegalStateException(Throwable cause, String... args){
context.addMessage(pattern, args); return null;
context(pattern); }
 this(pattern, args.args);
 return super(args);
 this(pattern,...args);
 this (LocalizedFormats.ILLEGAL_STATE).super(cause, pattern, args); super(cause); }
 super(LocalizedFormats.Nargs);
 this(pattern, args;
 super(LocalizedFormats.UNKNOWN);
 super(cause); context.addErrorMessage(pattern, args);
 super(Cause, pattern); context.addMessage(pattern, args);
context.addMessage(pattern, args); this(LocalizedFormats);
context.addMessage(pattern, args); super(context);
 this(LocalizedFormats.UNKNOWN);
context.addMessage(pattern, args, super(cause));
context(LocalizedFormats); }
 this (LocalizedFormats.ILLEGAL_STATE); this (LocalizedFormats.ILLEGAL_STATE); }
 this(LocalizedFormat.STATE);
 this(LocalizedFormats.ERROR); context.addMessage(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE); super(cause, pattern, args); } return
context.addMessage(pattern, args[0]);
 this(LocalizedFormats.ILLEGAL); }
 super(Cause); context.addMessagePattern(pattern, args);
context.addMessage(pattern, args); super(this); }
 super(cause);
 super(cause,pattern, args);
 super(cause); message(pattern, args);
context.addMessage(pattern, args) { super(LocalizedFormats.ERROR);
 this (LocalizedFormats.ILLEGAL_STATE).super(cause, pattern, args); super(cause, pattern);
context.addMessage(pattern,  args); super(pattern, args); return context
 super(Cause); context.add(pattern, args);
 super(Cause); context.message(pattern, args);
 super(Pattern,... args);
 super(IllegalStateException);
context.addMessage(pattern, args) { super(pattern); }
 this(LocalizedFormats.ILLEGAL_STATE).super(pattern, args); super(cause, pattern);
 super(pattern, null,args);
 super(LocalizedFormats.INTERNAL_STATE);
 super(LocalizedFormats.ERROR) args;
context.addMessage(pattern, args); } super(pattern, args);
 this(LocalizedFormats); }
context.addMessage(pattern, args) {} super(LocalizedFormats.STATE);
 super(pattern); addMessage(args);
 this (LocalizedFormats.ILLEGAL_STATE); this (LocalizedFormats.UNKNOWN_STATE); super(cause);
 this(LocalizedFormats.NULL_args);
context(LocalizedFormats);
 super(Pattern); context.addMessage(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE
 super(ExceptionContext.class); context.addMessage(pattern, args);
context.addMessage(pattern, args); super(pattern, args); *
context.addMessage(pattern, args) { this(LocalizedFormats.STATE);
 this(Context); addMessage(pattern, args);
 this(LocalizedFormats.ILLEGAL_STATE).super(pattern, args); super(exception);
 this(LocalizedFormat.ERROR);
 this(LocalizedFormats.ILLEGAL_STATE).super(pattern, args); super(cause, args);
 super(LocalizedFormats).ERROR context.addMessage(pattern, args);
 super(pattern); throw args;
 super(pattern); return this;
 this(pattern, args, context);
 super(LocalizedFormats.STRING);
 super(LocalizedFormats.STRICT);
 super(GeneralizedFormats);
 super(ExceptionContextProvider);
 super(LocalizedFormats.UNKNOWN).addMessage(pattern, args);
 super(pattern, args);;
 this (LocalizedFormats.ILLEGAL_STATE) { super(pattern, args); } } public MathIllegalStateException
 this(LocalizedFormats.ILLEGAL_STATE).super(pattern, args); super(pattern, args);
 super(pattern,... args);
 super(MathIllegalStateException());
context(LocalizedFormats.STRING);
 this(LocalizedFormats.ILLEGAL_);
 this(LocalizedFormats.ERROR_pattern, args);
 this(LocalizedFormats.pattern, args);
 this (LocalizedFormats.ILLEGAL_STATE) { super(cause, pattern, args); super(cause);
context.add(pattern);
context.addMessage(args);
 super(Cause)); context.addMessage(pattern, args);
 this(LocalizableFormats, args);
 this (LocalizedFormats.ILLEGAL_STATE); this (LocalizedFormats.ILLEGAL_ERROR); }
 super(localizedFormats.STATE, args);
 super(Cause, Pattern... args);
 this(LocalizedFormats.INTERNAL_STATE); }
 this(LocalizedFormats.ILLEGAL_STATE).super(pattern, args); super(cause); return
 this(LocalizedFormats.INTERNAL_STATE);
 super(pattern, args.args);
 super(LocalizedFormats) pattern;
context.addMessage(MathIllegalStateException, pattern, args);
 this (LocalizedFormats.ILLEGAL_STATE); this (LocalizedFormats.INTERNAL_STATE); } return
context.addMessage(pattern, args, false);
 this (LocalizedFormats.ILLEGAL_STATE); this (LocalizedFormats.INTERNAL_STATE); this();
context.addMessage(pattern, args); return
context.addMessage(pattern,...
 this (LocalizedFormats.ILLEGAL_STATE) { super(cause, pattern, args); } return
 super(pattern, args) { super(cause);
 super(pattern); return
 this(LocalizedFormats.ILLEGAL_ERROR); }
 this(LocalizedFormats.INTERNAL);
 super(Cause, pattern, args);
 super(ExceptionContext.ERROR); context.addMessage(pattern, args);
context.addMessage(pattern,  args); } return this ( serialVersionUID )
 this (LocalizedFormats.ILLEGAL_STATE); this (LocalizedFormats.ILLEGAL_STATE); } return
context.addMessage(pattern,  args); this(LocalizedFormats); }
 this(LocalizedFormats.STATE_pattern, args);
context.addMessage(pattern, args); this(LocalizedFormats.ERROR);
 super(ExceptionContext.class);
 this (LocalizedFormats.ILLEGAL_STATE).super(cause, pattern, args); super(cause); return
 super(LocalizedFormats.ERROR context.addMessage(pattern, args);
 super(cause, pattern, args); super(cause);
 super(pattern), args;
 super(cause, pattern);
 this (LocalizedFormats.ILLEGAL_STATE); super(cause, pattern, args); super(cause); }
context.addMessage(pattern,...)
 this(LocalizedFormats.ILLEGAL_STATUS);
 super(Cause, Localizable); context.addMessage(pattern, args);
 super(patterns);
context.addMessage(pattern, args, this);
 super(pattern); args = null;
 super(pattern, context, args);
 addMessage(pattern, args);
 super(LocalizedFormats.); context.addMessage(pattern, args);
 super(ExceptionContext); context.add(pattern, args);
 this(pattern, cause,args);
 super(context); addMessage(pattern, args);
 super(LocalizedFormats); }
context.addMessage(pattern, args) { super(LocalizedFormats); }
 super(cause); context.addMessageToPattern(pattern, args);
context.addMessage(pattern, args) {} super(pattern, args); }
 this (LocalizedFormats.ILLEGAL_STATE); this (LocalizedFormats.UNKNOWN_STATE); } return
 super(pattern());
 super(LocalizedFormatsPattern, args);
context.addMessage(pattern, args, ' ');
 super(LocalizedFormats.ERROR); }
 super(PatternException, args);
 this (LocalizedFormats.ILLEGAL_STATE); this (LocalizedFormats.ILLEGAL_STATE); return
 this (LocalizedFormats.ILLEGAL_STATE) { super(cause, pattern, args); } return cause;
context.addMessage(pattern, args); } return this ( ) ;
 super(MathIllegalStateException); return
 super(pattern, args) { super(args);
context(LocalizedFormats.ERROR); }
 this(cause); context.add(pattern, args);
 super(cause); context.addUnhandledMessage(pattern, args);
 super(patternPattern, args);
 this(LocalizedFormats.ERRORS, args);
 this(LocalizableFormats);
context().addMessage(pattern, args);
 this(LocalizedFormat.STATE, args);
context(pattern,... args);
 super(fatal); context.addMessage(pattern, args);
 this(LocalizedFormatsPattern, args);
context.addMessage(pattern, args, super());
context.addMessage(pattern, args) { super(cause);
 return null;
context.addMessage(pattern) super(pattern, args);
context.addMessage(pattern, -1, args);
 super(exceptionContext);
 super(Cause) { this(LocalizedFormats); }
context.addMessage(pattern, args, cause);
context.addMessage(pattern, args, MathIllegalState);
 super(locale); context.addMessage(pattern, args);
 super(LocalizedFormats); } context.addMessage(pattern, args);
 super(pattern); setArgs(args);
 super(LocalizedFormats) *
 super(pattern, args) ; super(cause);
 this(context).message(pattern, args);
 super(pattern); *
context.addMessage(pattern, args) { super(pattern, args); } }
context.addMessage(pattern, args); } return context ; } ;
 return args);
 this(LocalizedFormats.ERROR); }
 super(ExceptionContext) { this(LocalizedFormats);
context(args);
 super(localizable); context.addMessage(pattern, args);
 super(pattern); return
context.setMessage(pattern, args); }
 super(cause); context.addUnhandledException(pattern, args);
 super(LocalizedFormats.WARN);
 super(cause); context.set(pattern, args);
 super(LocalizedFormat.ERROR);
 super(LocalizedFormats); return
 super(Cause); this; context.addMessage(pattern, args);
 super(Cause); this); context.addMessage(pattern, args);
 super(exceptionContext); context.addMessage(pattern, args);
context.addMessage(pattern, args) {} super(cause);
 super(Pattern).addMessage(args);
 this.addMessage(pattern, args);
context.setMessage(pattern, args);
 this(LocalizedFormats.FULL, args);
 super(cause) context.addMessage(pattern, args);
 super(this); context.addMessage(pattern, args);
context.addMessage(pattern, args,... args);
 super(cause)); context.addMessage(pattern, args);
context.message();
 super(pattern);;
 super(ExceptionContext.ERROR_STATE); context.addMessage(pattern, args);
 this(Context.message(pattern, args);
context.addMessage(pattern, args) { super(this); }
context(pattern, args); }
context.addMessage(pattern, args) { this(pattern, args);
 super(LocalizedFormats.ERROR); }
 super(pattern); }
 super(); return;
 super(exception); } context.addMessage(pattern, args);
 this.addMessage(args);
context.addMessage(pattern, arguments); }
 super().message(pattern, args);
 super(pattern(), args);
context.addMessage(pattern, args, super(cause)));
 super(cause); return context.addMessage(pattern, args);
 super(pattern args);
 super(cause); throw context.addMessage(pattern, args);
 super(exception); return
context.addMessage(pattern, args) return this;
 super(patterns, args);
 super(...args);
context.addMessage(pattern, args); } return context ; } }
 context.add(pattern, args);
context.addMessage(pattern, args, super(ExceptionContextProvider);
context() ;
(pattern, args);
context.addMessage(LocalizableFormats, pattern, args);
context.addMessage((pattern, args));
 super(Cause) { this(LocalizedFormats) }
 super(this);
 super(fatal);
 super(context).addMessage(pattern, args);
context.addMessage(pattern, super(), cause, args);
 this(Patterns.args);
context(... args);
context.addMessage(pattern, super(pattern, args);
 super(this);
context.addMessage(pattern, args, MathIllegalStateException);
 throw context.addMessage(pattern, args);
context.setMessage(pattern);
 super(pattern); return context.addMessage(pattern, args);
context.addMessage({pattern, args});
context.addMessage(...)
 super(null); context.addMessage(pattern, args);
context.addMessage(pattern, args) } return context ;
context(arguments);
 return this(args);
context.addMessage(pattern, args) return ;
 this(Pattern, args);
 super(exception).addMessage(pattern, args);
context.getMessage();
context.addMessage(pattern, args, MathException.ERROR);
context.addMessage(pattern.STRING, args);
 super.message(pattern, args);
 return super(pattern);
context.addMessage(pattern, args) { super(pattern, args));
context.addMessage(pattern, args) super(this);
 super(exception);
context.addMessage(pattern, args, this.ERROR_STATE);
context.setMessage();
context.removeMessage(pattern, args);
 this(pattern), args;
context.addMessage(InternalFormats.ERROR, pattern, args);
 super(cause); superaddMessage(pattern, args);
context.addMessage(cause, pattern, args);
 super( );
context.pattern();
context.addMessage(pattern(), args);
context.addMessage(Localizable.ERROR, pattern, args);
 return null);
 super(this).addMessage(pattern, args);
 return context.add(pattern, args);
context.super(args);
context.addMessage(pattern, ' ', args);
 this(context).add(pattern, args);
 return context;
 this(args);
 setMessage(pattern, args);
context.addMessage(pattern.*, args);
 this(cause).addMessage(pattern, args);
 return this;
context.addMessage(InternalFormats.STATE, pattern, args);
 super(); } context.addMessage(pattern, args);
context.setPattern(pattern);
 super(pattern,);
context.addMessage(, args);
context.addMessage(super(...), pattern, args);
context.addMessage(pattern, args, this.illegalStateException);
context.addMessage(pattern, args, System.stdout);
context.setPattern();
 super()(args);
 return context.message(pattern, args);
 return this(pattern, args);
 this(Pattern.ERROR);
context.addMessage(Patterns.ERROR, args);
context.super();
context.addMessage(pattern, args, super(exceptionContext);
 super(error); context.addMessage(pattern, args);
 super(pattern;
 super(...)
context.addMessage(this.message, pattern, args);
 super()(pattern, args);
context.addMessage(pattern, 0, args);
 context.message(args);
context(...)
 super(locale,pattern, args);
context.addMessage(LocalizedFormats, pattern, args);
 throw args);
context.setMessage(args);
context.addMessage(Localizable.class, pattern, args);
 super(, args);
context.addMessage(pattern, [] args);
 super((pattern, args);
context.addMessage(Locale.US, pattern, args);
 return pattern, args);
context.addMessage(super(Throwable)), pattern, args);
context.addMessage(pattern, args) throw cause;
 throw super(args);
context.addMessage(pattern, args) return null;
 throw cause;
context.addMessage(pattern.pattern, args);
 super(pattern); return;
context.addMessage(pattern, * args);
 super().addMessage(pattern, args);
context.addMessage(super(ExceptionContextProvider, pattern, args);
 super(trace);
 this.message(pattern, args);
context.addMessage(pattern, args, super(), cause);
 return cause;
context.addMessage(null, null, pattern, args);
context.addMessage(pattern, args) return context
 super(null);
context.addMessage(super(cause, pattern, args);
 super(null, args);
context.addMessage(pattern, this, args);
 return this);
 super(reason);
context.addMessage(null, cause, pattern, args);
context.addMessage($pattern, args);
context.addMessage(pattern, args, null, null);
 super(reason);
 super.addMessage(pattern, args);
context.addMessage(patternPattern, args);
 return null, args);
context.addMessage("pattern", args);
context = null
 throw super(pattern, args);
context.addMessage(patternImpl, args);
 return new Exception(args);
context.throw();
context = pattern
 super(); }
context.addMessage()();
context.addMessage(patterns, args);
 super() {}
context = pattern ;
context.addMessage(*, args);
context(this);
context.addMessage(pattern, args) return this
 throw this(pattern, args);
(this);
context.addMessage() {}
context.addMessage(pattern, args, NONE);
context.addMessage(Pattern, args);
context.addMessage(fallback, pattern, args);
 super() context.addMessage(pattern, args);
context.addMessage(", args);
 new Error(pattern, args);
 return this.addMessage(pattern, args);
context.addMessage(throwable, pattern, args);
context.print();
 this();
context.addMessage(this, pattern, args);
context.addMessage({}, pattern, args);
context.addMessage(exception, pattern, args);
 super(patch, args);
context.addMessage(null, pattern, args);
context.addMessage(pat, args);
 super()#addMessage(pattern, args);
context.addMessage(pattern, arguments);
... context.addMessage(pattern, args);
context.addMessage(arg);
context.addMessage({args});
 super(this, args);
context.addMessage(message);
 super()
context.addMessage(', args);
context.addMessage(unknownCause, pattern, args);
context.addMessage(0, pattern, args);
context.addMessage(pattern, args...);
context.addMessage(patch, args);
context.addMessage(pattern, args)
 this;
context.addMessage(pattern, args));
context.addMessage(pattern, args());
 throw
context.addMessage(message, pattern, args);
context.addMessage(pat);
 message(pattern, args);
 add(pattern, args);
 super(-args);
 constructor(args);
context.addMessage(pattern, args) *
 Context.addMessage(pattern, args);
...
context.addMessage(pattern, args) }
 base(pattern, args);
context.addMessage(pattern, arg);
context.addMessage(pattern, null);
