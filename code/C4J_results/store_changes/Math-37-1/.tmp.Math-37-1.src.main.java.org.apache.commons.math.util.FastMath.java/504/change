result *= 0.5 ; }
result *= 0.5 ; return result ;
result  = yb ; }
 return result;
result *= 0.5 ; } return result ;
result *=  yb ; return result ;
result *= 0.5 ; } }
 result = result;
 result *= 0.5; result = result + yb ;
result *=  yb ; } }
result *=  recipb ; return result ;
result  = result ; }
 result *= 0.5;
result *= 0.5 ; yb = result ; }
 result=0.5;
result *=  yb ; } return result ;
result  = yb - yb ; return result ;
result  = yb - result ; }
result *= 0.5 ; return result ; }
result *= 0.5 ; } } }
result *=  recipb ; } return result ;
result *=  yb ; }
result  = yb + result ; }
result *= 0.5 ; yb = result ; } }
result  = yb ; } } } }
result += 0.5;
 result *= 0.5; result = result + yb + result ;
result  = yb + yb ; return result ;
result *=  yb ; yb = result ; }
result  = yb ; } return result ;
 result *= 0.5; result = result *= 0.5; result = result + yb ;
 result *= 0.5 ; result = yb + result ; result = result ;
 result *= 0.5; } else { result = yb + yb ; result = yb - yb ;
 result *= 0.5; result = result - yb ;
result  += yb ; return result ;
result  = yb - yb ; } }
result *=  yb ; return result ; }
 result *= 0.5; result = result - yb ; result = result ;
 result *= 0.5; } else { result = yb + yb ; result = yb + yb ;
 result *= 0.5; result = result + yb + recipb ;
 result *= 0.5 ; result = yb + result ; result += result ;
 result *= 0.5; } else { result = yb - yb ; result = yb + yb ;
 result *= 0.5 ; result = yb + result ; result = result + result ;
result *=  recipb ; }
result *=  yb ; yb = result ; } }
result *= 0.5 ; } } return result ;
result *=  yb ; } } } }
result *=  yb ; } } }
result  = yb ; return result ;
 result *= 0.5; } else { result = yb + yb ; result = yb - result ;
 result *= 0.5; result = result + yb + yb ;
 result *= 0.5; result = result + ya ;
result  = yb + recipb ; return result ;
result *=  recipb ; yb = result ; }
 result *= 0.5; result = result + yb - result ;
result *= 0.5 ; yb = result ;
 result *= 0.5; result = result + yb ; result = result + yb ;
result  = yb ; return result ; }
 result = yb ;
result  += yb ; } return result ;
 result *= 0.5; result = result + result ;
result *= 0.5 ; return result ; } }
 result *= 0.5; result = yb + result + result ;
 result *= 0.5; result = result + yb + recipa ;
result  = yb - yb ; }
 result *= 0.5; result = y + result ; result = result + yb ;
result *=  recipb ; } } } }
result  += yb ; } }
 result *= 0.5; result = yb + result ; result += recipb ;
 result *= 0.5; result = yb + yb ;
result  = yb ; } } }
 result *= 0.5; } else { result = yb + yb ; result = yb ;
 result *= 0.5; result = yb + result + recipb ;
 result = result ;
 result *= 0.5; result = result *= yb ;
result *=  yb ; } } return result ;
 result *= 0.5; } else { result = yb - yb ; result = yb + result ;
 result *= 0.5; result = result + yb - yb ;
result *=  recipb ; } } }
 result *= 0.5; result = result + yb + result + yb ;
result *=  recipb ; } }
 result *= 0.5 ; result = yb + result ; result = result + yb ;
 result *= 0.5; } else { result = yb + yb ; result = yb + yb + result ;
result *=  yb ; yb = result ;
 result *= 0.5 ; result = yb + result ; result = result + recipb ;
 result *= - 1.5;
 result *= 0.5; result += yb;
 } else { double hiPrec[] = new double[2]; expm1(x, hiPrec); result = yb ;
result  = y - result ; }
result *= 0.5 ; } } } }
 result *= 0.5; result = result *= 0.5 ;
 result *= 0.5; result = result + yb ; result = result + result ;
 result *= 0.5; result = result + y ;
result *=  recipb ; yb = result ;
result  = yb - result ;
 result *= 0.5; } else { result = yb + yb ; result = yb + result ;
 result *= 0.5 ; result = yb + result ; result = yb - result ;
result *=  yb ; return result ; } }
result  = yb + recipb ; } }
result *=  yb ; return result * recipb ; }
result *= 0.5 ; result *= 0.5 ; }
 result *= 0.5; result = result + yb + result *= 0.5 ;
 } else { double hiPrec[] = new double[2]; expm1(x, hiPrec); result = x;
result *= 0.5 ; yb = result ; } } }
 result *= 0.5 ; result = yb + result ; result = result - result ;
result *=  recipb ; yb = result ; } }
 result *= 0.5 ; result = yb + result ; result = recipb ;
 result *= 0.5; result += recipb;
result  = y + result ; }
 result *= 0.5; } else { result = y + yb ; result = y + yb ;
 } else { double hiPrec[] = new double[2]; expm1(x, hiPrec)[0] = result;
result  += yb ; }
result *= 0.5 ; yb += result ; } }
 result *= 0.5; } else { result = yb + yb ; result = yb - yb ; }
 return result ; }
 result *= 0.5; } else { result = yb + yb ; result = yb + yb ; }
 result *= 0.5; } else { result = yb + yb ; result = yb + result + result ;
 result *= 0.5; result = yb + result ; result = yb - yb ;
 result *= 0.5; result = yb ;
 result *= 0.5 ; result = yb + result ; result = yb + yb ;
 result *= 0.5; } else { result = yb + yb ; result = yb + yb - result ;
 result *= 0.5; } else { result = ya + yb ; result = yb ; result = yb ;
 result *= 0.5; } else { result = yb - yb ; result = yb + result + result ;
 result *= 0.5; result = yb + result ; result = yb +
 result *= 0.5; result = result *= 0.5; result = result + result + result ;
result *=  yb ; } } } } }
result *= 0.5 ; yb += result ; } } }
result *= 0.5 ; } } } } }
 result += recipb;
 result = y - yb; result = result;
 } else { double hiPrec[] = new double[2]; expm1(x, hiPrec); result = - result;
result  = yb + yb ; } }
 result *= 0.5; result = result *= 0.5; result = result + yb; return
 } else { double hiPrec[] = new double[2]; expm1(x, hiPrec); result = 0;
 result = result + yb ;
result  = y - yb ;
 result = yb - yb; result*= 0.5;
result  = yb - yb ; } } }
 result = y - result;
result  = yb ; } } } } }
 result = yb - yb; yb*= 0.5;
 result *= 0.5; } else { result = y + yb ; result = y - yb ; }
 result *= 1.5;
 result = yb; result = result;
result *= 0.5 ; } } } return result ;
result *= 0.5 ; result *= 1.0 ; } }
result  += yb * recip ; } return result ;
 result = yb - yb;
 result *= 0.5; result = result ;
 result *= 1.0 - yb ;
result *= 0.5 ; result *= 1.0 ; }
result *= 0.5 ; result *= 0.5 ;
result *=  yb ; } } } return result ;
result *= 0.5 ; yb -= result ; } } }
 result = yb + yb;
 } else { double hiPrec[] = new double[2]; expm1(x, hiPrec[0], result); }
result *= 0.5 ; yb += result * result ; } }
 result += result ;
result *=  yb ; } } } } } }
 result *= 0.5; yb*= 0.5;
 result *= 2.0 ; result += result ;
 result = result *= 0.5 ;
 result -= yb ;
 result = yb + yb; yb*= 0.5;
 result *= 1.0 + yb ;
result *= 0.5 ; yb += result ; }
 result = y + yb; result = result;
 result *= 0.5; result += result;
 result *= yb ;
result *=  yb ; return result * recipb ;
result  += yb ; } } } } }
 result *= 1.0 ;
result *=  yb * recipb ; } return result ;
 result += yb ;
result *= 0.5 ; } } } } } }
result  += recipb ; }
 result *= 0.5; result = result *= 0.5; result = result + yb; assert
 result = y + result;
 result *= -1;
 result *= 2.0 ;
 result *= - 1.0 ;
 result += yb; result = result;
 result = result + result ;
 result = yb + result;
result *= 0.5 ; } } } } } } } } }
 result = yb + yb ; result*= 0.5;
 result = result *= - 1.5 ;
 result *= 0.5; result = result + yb; return
 return result ; } }
 result += yb; result += result;
 result = result*0.5;
 result *= 2.0 * yb ;
 result += yb + yb ;
result *=  yb ; } } } } } } }
result *= 0.5 ; yb = result * 0.5 ;
 result = yb - yb; result=0.5;
 result -= yb; return result;
result *= 0.5 ; yb = result ; } } } }
 result = result * 2.0 ;
result  += result ; }
 yb*= 0.5;
 result = y + yb;
 result = yb - yb*0.5;
result *= 0.5 ; } } } } } } }
 result = yb + yb*0.5;
 result = result *= 1.0 ;
result  -= yb ; }
 result = yb + result*0.5;
 result = result *= - 1.0 ;
result *=  recipb;
 result = result *= 2.0 ;
 result += result*0.5;
 result = yb - yb - result;
 result = yb + yb - result;
result *= 0.5 ; } } return yb ;
result *= 0.5 ; result *= 1.0 ;
result *= 0.5 ; } return yb ;
 } return result ;
 result = result *= 1.5 ;
 result = yb + result - result;
 result = yb + result ; result*= 0.5;
 result = yb - ya;
 result = yb - yb + result;
 result = yb - result; result*= 0.5;
 result += yb * recip;
 result = result + yb*0.5;
 result = yb - yb * -0.5;
 result *= recipb ;
 result = yb ; result = result*0.5;
 result = yb; result*= 0.5;
 result *= 0.5; y*= 0.5;
 result = yb - result*0.5;
result  = yb ;
 result += yb; result -= result;
 result = yb + yb + result;
 result = y + yb ; result*= 0.5;
 result = yb ; result = yb*0.5;
 result = y - yb; result -= result;
 result + yb*= 0.5;
 result = yb + recipb*0.5;
 result = result + result;
 result = yb - yb * recip*0.5;
result *=  yb ;
 result = yb; yb*= 0.5;
result  += recipb ;
 result += yb; result*= 0.5;
 result += result;
 } } }
 result = result + result*0.5;
 result = yb ; result += result*0.5;
 result -= yb; return result*0.5;
 return result + yb ;
result *=  recip;
 result = y + result ; result*= 0.5;
 result = yb*0.5;
 result += yb * recip*0.5;
 result += yb*0.5;
 result = yb - yb * recip;
result  = y ;
 result = yb - yb ; result +=0.5;
 result = result * 2^0.5;
 result *= 0.5; result + result*= 0.5;
 result = yb - result**0.5;
 result -= yb; result*= 0.5;
 result = ya - result;
result  -= yb ;
 result *=0.5;
 result = yb ; result = result**0.5;
 result += yb; yb*= 0.5;
 result = yb ; result += result**0.5;
 result = yb - yb**0.5;
 yb = result ;
 result *= 0.5; result + y*= 0.5;
 yb = yb*0.5;
 } } return result ;
 result *= 1.0.5;
result *=  2 ; } } }
 return result*0.5;
 result = result - result*0.5;
 result *= 2; result*= 0.5;
 result = result; result*= 0.5;
 result *= -1.0.5;
 result = result - result;
result *=  2 ; }
 result += result**0.5;
 result += result ; result*= 0.5;
result *= 0.5 ; y = result ;
 yb += result*0.5;
 result = yb+0.5;
 result *= 0.5; result + 1*= 0.5;
 result *= yb*= 0.5;
 result = result**0.5;
 y = result ;
 result -= result*0.5;
result *=  recipa ; }
 result = temp;
result *= 0.5 ; break ; }
 result += -0.5;
 return result + result;
result *=  2 ;
 result = -0.5;
result *= 0.5001 ; }
 result += yb;
 yb + result*= 0.5;
 result = y + result ; y*= 0.5;
result *=  y ;
result *= 0.5f ; }
 result.value*= 0.5;
 result [0]*= 0.5;
 return result + y;
 y = result;
 result + result*= 0.5;
 return result**0.5;
 return result - result;
 } }
 result [y]*= 0.5;
result  ; }
 result.y*= 0.5;
 result.exp*= 0.5;
result ++; }
 result.abs*= 0.5;
result  } }
 result*0.5;
result  ++ ;
result -= 0.5;
 } } }
 break; }
 } result*= 0.5;
 var result*= 0.5;
 } break;
 } } else
result *= 0.5 } }
 } } #
result *= 0.5001 ;
 ya*= 0.5;
 varResult*= 0.5;
 return y;
result + 0.5;
 } else
 } ;
 }
 return
} return
 else
