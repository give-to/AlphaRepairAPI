double ya = hiPrec[0] + hiPrec[1];
[0] + hiPrec[1];
double ya = hiPrec[0] +  1;
 ya = x[0] + hiPrec[1];
 double y = hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] + hiPrec[2];
double ya  = 0.25;
 double ya = x[1];
double ya = hiPrec[0]  - hiPrec[1];
 double ya = x;
 double y = x[1];
double  y = x;
 double y = x[0] + hiPrec[1];
double ya  = -x;
 double ya = x[0] + hiPrec[1];
double ya = hiPrec[0];
 double ya = ya[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] - hiPrec[2];
 ya = x;
double  y = 0.25;
 double y = x+ hiPrec[1];
 result = ya+ hiPrec[1];
double ya  = -hiPrec[0];
 var ya = x[0] + hiPrec[1];
 double ya = x+ hiPrec[1];
 double ya = -ya[0] + hiPrec[1];
double ya = hiPrec[0] + 1.0;
double  yb = -ya;
double ya = hiPrec[0] - 1.0;
 double yb = hiPrec[0] + hiPrec[1];
double ya  = 0.25 * hiPrec;
double ya = hiPrec[1] + hiPrec[0];
 double y = x[0];
 double yb = -hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] * 2.0;
double ya = hiPrec[1] - hiPrec[0];
 double yb = ya[0] + hiPrec[1];
double ya =  -hiPrec[0] + 1;
 double yaa = ya[0] + hiPrec[1];
 double yb = -(ya[0])+ hiPrec[1];
double  y = -y;
double ya =  -hiPrec[0] - x;
double ya = hiPrec[0] +  hiPrec[1] * 2;
 result *= 2.0;
double ya = hiPrec[0] - x;
 var ya=hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1]; double yab = -ya;
double ya =  0.25 * hiPrec[0];
 double yaa = -ya[0] + hiPrec[1];
 double y = -hiPrec[0] + hiPrec[1];
 double -ya = hiPrec[0] + hiPrec[1];
 double y = x[2];
 double yb = -ya[0] + hiPrec[1];
 var y = -1];
 double ya = -hiPrec[0] + hiPrec[1];
 double ya = -x[0] + hiPrec[1];
double  y = -x;
 double yaa = hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] ; double yab = ya + yab ;
double  yb = 0;
 double yb = -ya hiPrec[0] + hiPrec[1];
double  yb = y;
 var ya=1];
double ya = hiPrec[0] + hiPrec[1] - 1.0;
double  y = 0.0;
[2];
double  y = 0;
double ya = hiPrec[0] +  hiPrec[1].0;
double ya = hiPrec[0] - hiPrec[2];
double ya  = 0.25.0;
 result = 0.25;
double ya = hiPrec[0] + hiPrec[1] + hiPrec[2] * x;
 var ya = 0];
double  ya = -hiPrec[2];
double ya = hiPrec[0] + hiPrec[1] - hiPrec[0];
 double yb = -ya + hiPrec[0] + hiPrec[1];
 if (x > 0.25) { result = 0.25 ; } else { result = 1.0 ; }
 if (x > 0.25) { result = 0.5 ; } else { result = 1.0 ; }
 result = 0.5;
 double y = y[0] + hiPrec[1];
double ya = hiPrec[0].0;
 result *= 0.5;
 double ya = y[0] + hiPrec[1];
 double ya = -(ya[0])+ hiPrec[1];
 double y = xx[0] + hiPrec[1];
 result = 0.5 ; } else { result = 1.0 ; }
 var y = x[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1]; yb = -yb;
 var ya=hiPrec[1];
 result = 0.25 ; } else { result = 1.0 ; }
double ya = hiPrec[0] + hiPrec[1] ; double yab = ya - yaa ;
 if (x < 0.25) { result = 0.5 ; } else { result = 1.0 ; }
 result = hiPrec[0] + hiPrec[1]; result *= 0.5 ; } else { result = x ;
double ya = hiPrec[0] - 1;
 result = x + hiPrec[0]; result *= 0.5;
 result = x + hiPrec[0] + hiPrec[1]; } else {
 double ya = x];
 double ya = -ya hiPrec[0] + hiPrec[1];
double ya = hiPrec[2];
 var ya = hiPrec[0] - hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] + hiPrec[2] + 1;
 double y = -ya[0] + hiPrec[1];
 if (x > 0.25) { result = 0.5 ; } else { result = 1.0 ; } } else {
 -(ya - hiPrec[0] + hiPrec[1];
 var y = x[1];
 double ya = -(ya) -hiPrec[1];
 double yb = -hiPrec[1];
 result = hiPrec[0] + hiPrec[1]; result *= 0.5 ; } else { result = 0 ;
 if (x > 0.25) { result = 0.25 ; } else { result = 1.0 ; } } else {
 var ya = x];
 double yaa = -hiPrec[0] + hiPrec[1];
 double y = y+ hiPrec[1];
double ya = hiPrec[0] + hiPrec[1]; double yb = 0 ;
 var yb = -ya - hiPrec[1];
 result = x + hiPrec[0] * 2.0;
double ya = hiPrec[0] + hiPrec[1] + 2.0;
 double yb = -ya - hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] ; double yab = 0.0 ;
double  yab = -ya;
 -(ya - hiPrec[0])];
 result = 0.25 ; } else { result = 0.25 ; }
 -(ya - hiPrec[0])[1];
double ya = hiPrec[0] + -yb;
double ya = hiPrec[0] + hiPrec[1] + 1.0;
double ya = hiPrec[1];
double  y = 0.25.0;
 var yb = -(ya[0])+ hiPrec[1];
 if ( x < 0.25) { result = 0.5 ; } else { result = 1.0 ; } } else {
double ya  = 0.0;
 if (x > 0.25) { result = 0.5 ; } else { result = 0.5 ; } } else {
 -(ya - hiPrec[0])1];
 result = 0.5; } else { result = 0.5 ; }
 result = 0.5 ; } else { result = 1.0 ; } } else { result = 0.0 ; }
 var y = x[0];
 var yb = -hiPrec[0] + hiPrec[1];
 if (x > 0.25) { result = 0.25 ; } else { result = 0.0 ; }
double ya = hiPrec[0], yab = -ya;
double ya = hiPrec[0]; yb = 0.0;
 result = -(ya - hiPrec[0] - yb);
 result = x * 0.25 ; }
 result = 0.5 ; } else { result = 0.5 ; } } else { result = 0.5 ; }
 -(ya - hiPrec[-1] + hiPrec[1];
 var ya = x[1];
 y = x[0] + hiPrec[1];
 -(ya - hiPrec)[1];
 var y = hiPrec[1];
 { double yb = -(ya - hiPrec[0] + 1);
 var ya = hiPrec[0] + 1;
 -(ya - hiPrec[0])hiPrec[1];
 result = 0.25 ; } else { result = 1.0 ;
 double y = -1];
double ya  = -y;
double ya = hiPrec[0] + hiPrec[1] ; double yab = ya + yaa ;
 { double yb = -(ya - hiPrec[0] - y);
 { double yb = -(ya - hiPrec[0] + 1); }
 result = x + hiPrec[0]; } else {
 double y = hiPrec[-1] + hiPrec[1];
 result = 0];
 result = 0.5 ; } else { result = 0.5 ; } else { result = 1.0 ;
double  ya ;
double ya = hiPrec[0] +  hiPrec[1] - 1;
 result = 0.0;
 var y = new double[1];
double ya = hiPrec[0], yab = -y;
 double yb = -ya - hiPrec[1];
 var yb = -ya + hiPrec[0] + hiPrec[1];
 double ya = -ya - hiPrec[1];
 double ya = -ya + hiPrec[0] + hiPrec[1];
 var ya = hiPrec[0] + 1.0;
 result = 0.5 ; } else { result = 0.5 ; } else { result = 1.0 ; } } {
 var y = x[2];
 result = 0.25 ; } else { result = 1.0 ;
 var ya = hiPrec[0]; var yab = hiPrec;
 double yab = -ya hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[0] - 1.0;
 result = 0.5 ; } else { result = 0.5 ; } else { result = 1 ; }
 double y = hiPrec[1];
 double ya = 0;
 ya[0] + hiPrec[1];
 -(ya - hiPrec[0]];
 result = x + hiPrec[0] + hiPrec[1]); } else {
 double y = hiPrec[][0] + hiPrec[1];
 { double yb = -(ya - hiPrec[0] + -y); }
 result = -(ya - hiPrec[0] + yb);
 { double yb = -(ya - hiPrec[0] - yb); }
double ya  = 0.5;
 result = x + hiPrec[0] * 2;
double ya = hiPrec[0] + -1;
 result = 0.5 ; } else { result = 0.5 ; } } else { result = 0 ; }
 var yb = -ya - hiPrec[0] + hiPrec[1];
 var ya = hiPrec[0] - 1.0;
 result = 0.25 ; } else { result = 0.25 ; } } else { result = 0 ; }
 double y = -hiPrec[1];
double ya = hiPrec[0] + hiPrec[1]; double yab = 0 ;
double ya = hiPrec[0] + hiPrec[2];
 result = 0.5 ; } else { result = 0.5 ; } if (! negate ) {
 var y = hiPrec[0];
 result = 0.5 ; } else { result = 0.5 ; } else { result = 1.0 ; } } ;
 double ya = -hiPrec[1];
 ya = y[0] + hiPrec[1];
 result = 0.5; } else { result = 1.0 ;
double ya  = 0.25 * x;
 double yb = -hiPrec[0];
 { double yb = -(ya - hiPrec[0] + -1); }
 result = 0.25 ; } else { result = 0.25 ; } if (! negate ) {
 result = x + hiPrec[0] + 1;
 result = 0.5 ; } else { result = 0.5 ; } if ( result == 0 ) {
 { double yb = -(ya - hiPrec[0] - 1); }
 result = 0.25 ; } else { result = 0.5 ; } } else {
double ya  = 0.25 - x;
 { double yb = -(ya - hiPrec[0] - yab); }
 -(ya - hiPrec[-1];
 result = 0.5 ; } else { result = 0.5 ; } } else {
 { double yb = -(ya - hiPrec[0] - x); }
 result = x + hiPrec[0] - x;
 result = 0.5 ; } else { result = 0.5 ; } else { result = 0 ; }
 { double yb = -(ya - hiPrec[0] - -y); }
 result = 0.5 ; } else { result = 0.5 ; } } else { result = 0 ;
 { double yb = -(ya - hiPrec[0] - y); }
 result = x + hiPrec[0] * -yb;
 { double yb = -(ya - hiPrec[0] + 1); {
 result = 0.25 ; } else { result = 0.25 ; } } else { result = 0 ;
 double ya = -(ya)+ hiPrec[1];
 result = x + hiPrec[0] + yb;
 result = 0.5 ; } else { result = 0.5 ; } if ( negate ) {
double ya = hiPrec[0] + hiPrec[1] - hiPrec[1];
 result = [];
 var ya = hiPrec[0] - 1;
 result = 0.25 ; } else { result = 0.5 ;
 result = 0.25 ; } else { result = 0.25 ;
 -(ya - hiPrec)[-1];
 result = 0.5 ; } else { result = 0.5 ; } if ( x < 0.25 )
 result = 0.5 ; } else { result = 0.5 ; } else { result = 0.5 ; } } {
 double y = -x[1];
 y = [0] + hiPrec[1];
 var ya = hiPrec[0] - x;
 double ya = -(ya+1)-hiPrec[1];
 double ya = -(ya[])+ hiPrec[1];
 var yb = -ya + hiPrec[1];
 var y = new double[2];
double ya  = 1.0;
 double ya = 0];
 result = 0.5 ; } else { result = 0.5 ; } } else { result = 0.5 ; } }
 var y = [1];
 result = 0.25 ; } else { result = 0.25 ; } if ( negate ) {
 double yab = ya[1];
 double y = -x[2];
 var ya = hiPrec[0], yb;
 var ya = hiPrec[0];
 result = 0.5 ; } else { result = 0.5 ; } else { result = 0.5 ; } } ;
 result = 0.25 ; } else { result = 0.5 ; } } {
 double y = hiPrec[0];
 -(ya - hiPrec[0][0] + hiPrec[1];
 var yb = -hiPrec[0];
 result = 0.5 ; } else { result = 0.5 ; } else { result = 1.0 ; } }
 ya = xx[0] + hiPrec[1];
 -(ya - hiPrec[1])];
double ya = hiPrec[0]  - hiPrec[0];
 result = x + hiPrec[0] + hiPrec[1]; } else
 double y = ya+ hiPrec[1];
 double ya = -(ya-1)-hiPrec[1];
 result = x + hiPrec[0] + hiPrec[1); } else {
 double ya = -(ya-x)-hiPrec[1];
 result[0] + hiPrec[1];
 var ya = -hiPrec[0];
 result = x + hiPrec[0] + hiPrec[1] * 2;
 var y = hiPrec[2];
 -(ya - hiPrec[0];
 var y = [0] + hiPrec[1];
 var y = -hiPrec[1];
 -(ya - hiPrec[1][0] + hiPrec[1];
 result = 0.5 ; } else { result = 0.5 ; } } {
 result = x *= 0.25 ; }
 result = 0.25 ; } else { result = 0.25 ; } } {
 -(ya - hiPrec[1];
 result = -(ya - hiPrec[0] - yb)
 -ya[0] + hiPrec[1];
 double ya = -(y) -hiPrec[1];
 y = [-ya] + hiPrec[1];
 -ya = hiPrec[1];
 result = 0.25 ; } else { result = 1.0 ; } } {
 var yb = -hiPrec[1];
 double ya = ya[1];
 var y = -y;
 var y = -ya - hiPrec[1];
 -(ya - hi[0])-hiPrec[1];
 var ya[0] + hiPrec[1];
 -(ya - hiPrec[0]).1];
 double y = -y[1];
 var y = hiPrec[-1];
double  yb;
 -(ya - hiPrec[0]),hiPrec[1];
 double y;
 var y = [0];
 var ya = hiPrec[-1];
 var yb = -ya - hiPrec;
 var yb = -hiPrec[0;
 var yb = -hiPrec[1;
 double yb = -(ya) -hiPrec[0] + hiPrec[1];
 result = 0.5 ; } else { result = 0.5 ; } else { result = 0.5 ; } }
 double yab = -hiPrec[1];
double ya = hiPrec[0] +  hiPrec[1])0;
 { double yb = -(ya - hiPrec[0] + 1;
 result = 0.5 ; } else { result = 0.5 ; } } else { result ; }
 result = 0.25 ; } else { result = 0.25 ; } } else { result ; }
 result = 0.5; double ya = x+ hiPrec[1];
 result = 0.25 ; } else { result = 0.5 ; } } ;
 double y = hiPrec[];
 double yb = -ya-prec[0] + hiPrec[1];
 var y = [-y];
 var y = 0.25;
 result = x + hiPrec[0]; result *= 2; }
 double y = [-y];
 result = 0.5 ; } else { result = 1.0 ; } }
 var y = [x];
 result = 0.25 ; } else { result = 1.0 ; } }
 { double yb = -(ya - hiPrec[0] + 1)
double ya = hiPrec[0], yab = -y,
double  ya =
 result = 0.5; double y = y+ hiPrec[1];
 var ya = x;
 result = x + hiPrec[0] + hiPrec[1] ; }
 ya=hiPrec[0] + hiPrec[1];
 double ya = -ya-hiPre[0] + hiPrec[1];
 result = x + hiPrec[0] ; }
 double y = [1];
 ya=hiPrec[1];
 double ya = -hiPrec[-1];
 var ya = hiPrec[0].0;
 -(ya - hiPrec[0]),1];
 double ya = ya;
 var ya = -hiPrec[0;
 { double yb = -(ya - hiPrec[0] - y;
 result = -(ya[0])+ hiPrec[1];
 var yb[0] + hiPrec[1];
 result = x + hiPrec[2] ; }
 result = 0.5 ; } else { result = 1.0 ; } } else { result ; }
 result = 0.25 ; } else { result = 0.5 ; } }
 y = x[1];
 double yaa = ya;
 hiPrec[0] = x; ya= hiPrec[0] + hiPrec[1];
 result = 0.25 ; }
 result = x + hiPrec[0] + hiPrec[1]; } {
 double yab = hiPrec[0] + hiPrec[1];
 double yb = -(ya -hiPrec[0] + hiPrec[1];
 double y = ya[0] + hiPrec[1];
 double yb = -ya-hiPre[0] + hiPrec[1];
 double yb = -(ya)+ hiPrec[1];
 double ya = -(ya) -hiPrec[0] + hiPrec[1];
 double yaa = -hiPrec[1];
double ya = hiPrec[0] + hiPrec[1;
 result = 0.5; result *= 0.5; }
 double ya = -(ya) ya+ hiPrec[1];
 var yb = 0.0; double -ya = hiPrec[0] + hiPrec[1];
 result = 0.5 ; } else { result = 0.5 ; } } else { result = 0.5 ; {
 -(ya - hi[0])[1];
 -(ya - hiPrec)-hiPrec[1];
 result = y+ hiPrec[1];
 double ya = -(ya-1+ hiPrec[1];
 y[0] + hiPrec[1];
 var y = -x;
 var y = [-1];
 -(ya - hiPrec)[0] + hiPrec[1];
 double ya = -(ya)0+ hiPrec[1];
 return x[0] + hiPrec[1];
 double ya = [];
 -(ya - hiPrec)+hiPrec[1];
 double yb = -(ya +hiPrec[0] + hiPrec[1];
 double ya = -yb+ hiPrec[1];
 double ya = -ya hiPrec[1];
double ya = hiPrec[0] +  2.0;
double ya = hiPrec[0] + hiPrec[1]);
 double yb = -(yb)-hiPrec[0] + hiPrec[1];
 double ya = -(ya - x+ hiPrec[1];
 -(ya - hiPrec)*[1];
 ya = x[1];
 result = x + hiPrec ; }
 result = x *= 0.5 ; }
 double ya = -yb*hiPrec[1];
 result = 0.25 ; } else { result = 1.0 ; } }
 var yb = -(ya) -hiPrec[0] + hiPrec[1];
 double yb = -yb*hiPrec[1];
 var yb = 0.0; double yya = hiPrec[0] + hiPrec[1];
 double yb = -(yb-hiPrec[0] + hiPrec[1];
 var ya = -hiPrec[1;
 y = -hiPrec[1];
 var yb = 0.5; double -ya = hiPrec[0] + hiPrec[1];
 double ya = -(ya -hiPrec[0] + hiPrec[1];
 double y = y[1];
 var yb = 0.5; double yya = hiPrec[0] + hiPrec[1];
 var y = -ya + hiPrec[1];
 var yb;
 var y = hiPrec[0] + hiPrec[1];
 result = x + hiPrec[0]; } else
 double yb = -(ya + x)-hiPrec[0] + hiPrec[1];
 hiPrec[0] = 0; ya= hiPrec[0] + hiPrec[1];
double ya = hiPrec[0], yab = -yb
 double ya = ya-hiPrec[1];
 var ya = hiPrec[0;
 +ya[0] + hiPrec[1];
 result *= 0.5; double -ya = hiPrec[0] + hiPrec[1];
 hiPrec[2] = x; ya= hiPrec[0] + hiPrec[1];
 -(ya - hiPrec[-0] + hiPrec[1];
 result = 0.25 ; } else { result = 0.5 ; } }
 double y = xx+ hiPrec[1];
 double y = 0.5;
 double yb = -(ya+1)-hiPrec[0] + hiPrec[1];
 var ya = hiPrec.length;
 var ya = hiPrec[0]; var yab = hiPrec();
 double ya = -(ya +hiPrec[0] + hiPrec[1];
double ya = hiPrec[0]  + x;
 var yb = hiPrec.length;
 var ya = -hiPrec[1];
 -(ya - hiPrec) x[1];
 result = 0.5 ; } else { result = 0.5 ; } } else { } }
 double yb = -yb+ hiPrec[1];
 var yb = 0.25; double -ya = hiPrec[0] + hiPrec[1];
 double yya = hiPrec[0] + hiPrec[1];
 var ya = -hiPrec[2;
 var yb[1];
 double yaa = -ya-hiPrec[1];
 var yb = hiPrec[1];
 result = 0.25 ; } else { result = 0.25 ; } } else { } }
 double y + hiPrec[0] + hiPrec[1];
 y=hiPrec[1];
 -(ya)-hiPrec[1];
 var = ya[0] + hiPrec[1];
 result = 0.25 ; } else { result = 0.5 ; } } else { } }
 result = x ; }
 double yb = -(ya + 1)+hiPrec[0] + hiPrec[1];
double  ya = -hiPrec[0]);
double ya = hiPrec[0], yab = -ya,
 double ya = -ya+ hiPrec[1];
 double ya = -ya-hiPrec[0] + hiPrec[1];
 result = 0.5; double -ya = hiPrec[0] + hiPrec[1];
 var yb = hiPrec[1;
 double y = ya-hiPrec[0] + hiPrec[1];
 hiPrec[0] = y; y= hiPrec[0] + hiPrec[1];
 hiPrec[0] = y; ya= hiPrec[0] + hiPrec[1];
 double yb = 0.0;
 result = x + hiPrec[0]; } {
 var yb = 0.0, -ya = hiPrec[0] + hiPrec[1];
 -(ya[0])-hiPrec[1];
 delta = 0.5; double ya= hiPrec[0] + hiPrec[1];
 result = 0.25; double -ya = hiPrec[0] + hiPrec[1];
 var ya = 0.25; var y= hiPrec[0] + hiPrec[1];
 y = [];
 -ya-hiPrec[1];
 double ya = -ya*+ hiPrec[1];
 double ya = ya+hiPrec[1];
 var ya = hiPrec[1;
 if (neg) { double -ya = hiPrec[0] + hiPrec[1];
double  ya = 0.25 * hiPrec();
[0];
 result = x + hiPrec[0] - x; }
 double yaa = ya-hiPrec[1];
 result = x + hiPrec[0] * 2; }
 result = x];
 result *= 0.5; double yya = hiPrec[0] + hiPrec[1];
 double ya = ya-hiPrec[0] + hiPrec[1];
 double yb = ya-hiPrec[0] + hiPrec[1];
 var ya = hiPrec[2;
 result = x + hiPrec[2]; } else
 double ya = -yaa+ hiPrec[1];
 double ya = -(y)+ hiPrec[1];
 -hiPrec[0]; double ya= hiPrec[0] + hiPrec[1];
 result = x + hiPrec[1]; }
 result = 0.5; double yya = hiPrec[0] + hiPrec[1];
 var yb = -yb; ya= hiPrec[0] + hiPrec[1];
 result *= 0.25; double -ya = hiPrec[0] + hiPrec[1];
 var ya = 0.25; var recip= hiPrec[0] + hiPrec[1];
 var ya = hiPrec[0] + 1.0,
double ya  = 0.25 * hiPrec ; }
double ya = hiPrec[0] + hiPrec[1] - 1.25;
 var y = 0.25*x;
 delta = 1.0; double ya= hiPrec[0] + hiPrec[1];
 double y = 0.25+ hiPrec[1];
double ya = hiPrec[0]  + hiPrec[1] * 2;;
double  ya = -hiPrec[0],
 ya = x];
 double yb = ya-hiPrec[1];
 double y = new double[1];
 double yab = 0.0;
 double ya = -ya-ya+ hiPrec[1];
 double yPrec[1];
 y = x;
 y = -hiPrec[0] + hiPrec[1];
double  ya = -hiPrec[0]
 result *= 0.25 ; }
double ya = hiPrec[0] +  hiPrec[0];
 y=hiPrec[0] + hiPrec[1];
 double yaa = ya+hiPrec[1];
 x[0] + hiPrec[1];
 double yb = -ya+ hiPrec[1];
 result = 0.25; double yya = hiPrec[0] + hiPrec[1];
 double yab = 0.25;
 double yb = 0.5;
 delta = 0.25; double ya= hiPrec[0] + hiPrec[1];
 var ya = new double[1];
 result = -hiPrec[0]; }
 + y[0] + hiPrec[1];
double ya  = hiPrec[0] + 1";
double ya = hiPrec[0] +  -x;
 var ya+ hiPrec[1];
 double y = 1.0+ hiPrec[1];
 -(ya) = x[1];
 result = x * 0.25 ; };
 var ya;
 result = x + hiPrec[0]; }
double  ya = 0.25 ; }
 result *= 0.5; }
 if (neg) { double yya = hiPrec[0] + hiPrec[1];
double  ya = 0.25 * hiPrec;;
double ya = hiPrec[0] - hiPrec[1];;
 ya = 0;
 double yb = +hiPrec[1];
 -(ya[0])+ hiPrec[1];
 result *= 0.25; double yya = hiPrec[0] + hiPrec[1];
 var y = -1.0;
 result = x+ hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] ; double yab = -ya();
double  ya = -hiPrec[0];;
 result = 0.0; double -ya = hiPrec[0] + hiPrec[1];
 result *= 0.5; } else { final
[1];
 result *= 0.5; } else { #
 double y = -yb+ hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] and
 final double y = -ya[0] + hiPrec[1];
 double y = -ya+ hiPrec[1];
double ya = hiPrec[0] +  -y;
 double ya[1];
 -ya[1];
 result = x;
 -hiPrec[2] *= hiPrec[0] + hiPrec[1];
 result = -hiPrec[0]; } else
 var ya = hiPrec[0] + 1; final
 result[1];
double ya = hiPrec[0] + hiPrec[1] ; double yab = -ya,
 var y = -ya[0] + hiPrec[1];
 if (negative) { double -ya = hiPrec[0] + hiPrec[1];
 varya[1];
 + x[0] + hiPrec[1];
double ya = hiPrec[0][1];
 var ya = hiPrec[0][1] ; #
 if ( negate ) { double -ya = hiPrec[0] + hiPrec[1];
double ya = hiPrec[0]  + 2;
 -hiPrec[0] *= hiPrec[0] + hiPrec[1];
double ya  = y;
 result = 0;
 double yb = y[1];
 double yb = ya+ hiPrec[1];
 var [0] + hiPrec[1];
 double yb; double yb= hiPrec[0] + hiPrec[1];
 = [0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] * hiPrec[2] ; #
double  y = 0.25 ; }
 result = -1.0; }
double ya = hiPrec[0] + hiPrec[1] + hiPrec; #
 double yb; double ya= hiPrec[0] + hiPrec[1];
 double ya = -y[0] + hiPrec[1];
 var ya = hiPrec[][0][1]; final
double ya = hiPrec[0]; double yab = hiPrec; #
 y = x+ hiPrec[1];
 double yb = -(ya= hiPrec[0] + hiPrec[1];
double  y =
double ya = hiPrec[0] +  hiPrec[0] - 1; #
double ya = hiPrec[0] +  hiPrec[0] + 1; #
double ya = hiPrec[0] +  hiPrec[1] * x; #
 var ya = hiPrec[0]; final
 double yb[ya]= hiPrec[0] + hiPrec[1];
 double yb, yab *= hiPrec[0] + hiPrec[1];
double ya  = hiPrec ; #
 result = 0 ; }
 + x[1];
 var ya = hiPrec[1]; final
 double yb[1];
 double yb = -;ya= hiPrec[0] + hiPrec[1];
 -ya+ hiPrec[1];
 double ya = y+ hiPrec[1];
double ya  = hiPrec ; }
 *=hiPrec[1];
 var y;
 + [0] + hiPrec[1];
double ya = hiPrec[0] + -1";
double ya = hiPrec[0] + hiPrec[1] % 2;
 result=hiPrec[0] + hiPrec[1];
 z[0] + hiPrec[1];
double ya = hiPrec[0]  + hiPrec; #
double ya = hiPrec[0] + -1();
 = [-0] + hiPrec[1];
 double yb = ya= hiPrec[0] + hiPrec[1];
 return -1];
 *=hiPrec[0] + hiPrec[1];
double ya = hiPrec[0]  + hiPrec[1]++;;
 double yaa; double ya= hiPrec[0] + hiPrec[1];
 x=hiPrec[1];
double ya = hiPrec[0]  - hiPrec; #
 } else { double -ya = hiPrec[0] + hiPrec[1];
[1] + hiPrec[1];
 double yb = yya= hiPrec[0] + hiPrec[1];
 double y + yb *= hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] + 1;
 double yab = ya= hiPrec[0] + hiPrec[1];
double ya = hiPrec[0]  + hiPrec; final
 + y[1];
double ya = hiPrec[0] + hiPrec[1] - hiPrec; #
 = ya[0] + hiPrec[1];
double ya = hiPrec[0].0();
 return [1];
 double yb; ya= hiPrec[0] + hiPrec[1];
double ya = hiPrec[0]  - hiPrec;;
 return y+ hiPrec[1];
double ya  = -x();
 } else { double yya = hiPrec[0] + hiPrec[1];
 var [1];
 result = 1;
double ya = hiPrec[0] +  y;
 ya +=hiPrec[1];
double ya = hiPrec[0] +  hiPrec[1]); and
 result = x ; };
 { double ya= hiPrec[0] + hiPrec[1];
 return ya+ hiPrec[1];
double ya = hiPrec[];
 int y;
 result=[1];
 double y + yb= hiPrec[0] + hiPrec[1];
 < 0.25; #ya = hiPrec[0] + hiPrec[1];
 # ya+ hiPrec[1];
 double nya = hiPrec[0] + hiPrec[1];
 { double -ya = hiPrec[0] + hiPrec[1];
 { double yb-ya = hiPrec[0] + hiPrec[1];
 return x+ hiPrec[1];
 double y + yab= hiPrec[0] + hiPrec[1];
 < 0.25; -ya = hiPrec[0] + hiPrec[1];
 < 0.5; #ya = hiPrec[0] + hiPrec[1];
 { double yya = hiPrec[0] + hiPrec[1];
 + ya[1];
 [-ya] + hiPrec[1];
double ya = hiPrec[3];
double ya = hiPrec[0]++;
double ya = hiPrec[0] + hiPrec[3];
 < 0.5; -ya = hiPrec[0] + hiPrec[1];
 } else { double nya = hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] +  hiPrec);;
 final double ya= hiPrec[0] + hiPrec[1];
 < 1.0; #ya = hiPrec[0] + hiPrec[1];
[2] + hiPrec[1];
double ya = hiPrec[0]();
double ya = hiPrec[0] + hiPrec[1] * x + 1; #
 { double yb*ya = hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] * x - 1; #
double ya b;
 int ya= hiPrec[0] + hiPrec[1];
 } else {
 { double yb= hiPrec[0] + hiPrec[1];
 { } double ya= hiPrec[0] + hiPrec[1];
 { double yaa= hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] + hiPrec[1] - x; #
 } { double yya = hiPrec[0] + hiPrec[1];
 } { double -ya = hiPrec[0] + hiPrec[1];
 int -ya = hiPrec[0] + hiPrec[1];
double ya = hiPrec[x];
double ya  = y
double ya  = ;
 { } double -ya = hiPrec[0] + hiPrec[1];
double ya b =
 { double nya = hiPrec[0] + hiPrec[1];
 { double xya = hiPrec[0] + hiPrec[1];
 { } double yya = hiPrec[0] + hiPrec[1];
 } { double nya = hiPrec[0] + hiPrec[1];
double ya = hiPrec[0] * hiPrec[1];
double ya = hiPrec[0]  ; final
 } else,
 {;}
 {}; }
 } {
 } else
 { final
double ya = hiPrec[0] ); {
double ya = hiPrec[0] + hiPrec(); #
double ya = hiPrec[0] = hiPrec[1];
 {
 ;
double ya += hiPrec[0] + hiPrec[1];
double ya := hiPrec[0] + hiPrec[1];
double ya -= hiPrec[0] + hiPrec[1];
