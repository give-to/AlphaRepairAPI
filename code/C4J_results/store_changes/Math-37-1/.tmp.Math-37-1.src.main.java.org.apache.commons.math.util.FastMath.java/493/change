 recipb= -recipb;
 recip =-recipb;
 recipb = recip * recip;
 recipb = recipb;
 recipb = recip;
 recipb = recip-recipb;
 recipb = -yb*recipb;
 recip = recip;
 recipb *= -recipb;
 recipb = recip*recipb;
recipb = -recipb; recipb = recipb;
 recipb = -recipb * recip;
 recipb = -yb * recip*recipb;
 recipb = -yb * recip-recipb;
recipb = -yb;
 recipb = -yb * recip;
 recipb = -recipb; recip *= -recipb;
 recipb = -recipb; recip= -recipb;
 recipb = -recipb*recipb;
 recipb = yb*recipb;
recipb = -recipb; recipb = -recipb;
 recipb = -yb; recip= -recipb;
 recipb = -recipb-recipb;
 recipb = recipb; recip= -recipb;
 recipb = recipb; recip *= -recipb;
 recipb = -recipb * recip-recipb;
recipb = -recipb; result = recipb ;
 recipb = -yb * recip * recip;
 recipb = -y*recipb;
recipb  += -yb * recip * recip;
recipb = -recipb; result = 0 ;
 recipb = recipb *= -recipb;
 recipb = -yb * recipb*recipb;
recipb = -recipb; recip = recipb;
recipb = -recipb; result = recipb ; }
 recipb = -yb; recip *= -recipb;
 recipb = -recipa*recipb;
 recipb = recipb; recipb = recip-recipb;
 var recipb = -recipb; var recipa = -recipa; var
recipb = -recipb; y = recipb;
recipb = -recipb; recipb = recip;
 recipb += -yb * recip*recipb;
 recipb = recip - recipipb;
 recipb = -recipa-recipb;
 recipb = -yb;
recipb = -recipb; y = temp;
 recipb = -yb-recipb;
recipb = -recipb; result = y ;
recipb = -recipb; recipb = -recipa;
 recipb += -yb * recip-recipb;
 recipb = -recipb;
recipb = -recipb; yb = -recipb;
recipb = -recipb; recipb = -yb;
 recipb = recip + recip * recip;
 recipb = recipb * recip * recip;
recipb = -recipb; recipb += recipb;
 recipb = recipb - -recipb;
 recipb = recipb - recip * recip;
 recipb += recipb; recip *= -recipb;
recipb = -recipb; var y = 0 ;
 recipb = recip;
recipb  = -recipb; } else {
 recipb += -recipb * recip-recipb;
 recipb += -recipb * recip;
 yb = -recipb; yb = -recipa; recipa = -recipb;
 recipb = -yb; recipb= -recipb;
 recipb = recipb + -recipb;
 recipb = -yb *= -recipb;
 var recipb = -recipb; var recipa = -yb;
 yb += - (temp - recipa); yb += - (temp - recipb); yb = -recipa;
 recipb = -yb * recip * recip-recipb;
 recipb = recipb; recipb= -recipb;
 recipb = -recipb; result *= -recipb;
 recipb = recipb; recipb *= -recipb;
 yb += - (temp - yb); yb += - (temp - yb); yb += -recipb; double
 recipb = recip * recip-recipb;
 recipb = recipb + -yb*recipb;
 yb += - (temp - yb); yb += - (temp - yb); yb += - (temp - recip);
 recipb = -recipb*y-recipb;
 yb = -recipb; yb = -recipa; recipb = -recipb;
 var recipb = -recipb; recipa = -recipa;
 var recipb = -recipb; var recipb = -recipa; var
 yb += - (temp - recipa); yb += - (temp - recipb); yb += -recipb;
 recipb = recip *= -recipb;
 recipb = recipb + recip * recip;
 yb = -recipb; yb = -recipa; recipb = -yb;
 recipb = recipb - recip-recipb;
 var recipb = -recipb; var recipa = recipb; var
 recipb -= recipb; recip *= -recipb;
 recipb = -recipb; yb = -recipa; recipa = -recipb;
 yb += - (temp - recipa); yb += - (temp - recipb); yb = temp;
 recipb = recipb * recip-recipb;
 recipb = -recipb; recipb = recipb
 recipb -= -yb * recip*recipb;
 recipb += -yb * recipb*recipb;
 yb += - (temp - yb); yb += - (temp - yb); yb += -recipa; double
 recipb = -recipb; recipa= -recipb;
 yb += - (temp - recipa); yb += - (temp - recipb); yb = -recipb;
 var recipb = -recipb; var recipa = recipb;
 recipb += -yb * recip;
 recipb = -recipb + recip-recipb;
 recipb -= -recipb;
 yb = -recipb; yb = -recipa; recipa = -yb;
 yb += - (temp - recipa); yb += - (temp - recipb); yb += -recipa;
 recipb = -recipb - recip-recipb;
 recipb = -recipb; recipa = -recipa;
 recipb = recip - recipb; recip= -recipb;
 var recipb = -recipb; var
 recipb = recipb + recip-recipb;
 recipb = -recipb; else { recipa = -recipa;
 yb += - (temp - yb); yb += - (temp - yb); yb = -recipb; double
 recipb += -yb * recip * recip-recipb;
 recipb = -recipb * recip*recipb;
 var recipb = -recipb; var recipb = -yb;
recipb = -recipb; recip = recip;
 var recipb = -recipb; var recipa; var
 recipb = recipb; recipb += recip-recipb;
 yb = -recipb; yb = -recipa; recipa = -recip;
 recipb = recipb - recipa;
 recipb = recipb + yb*recipb;
 recipb = -yb * -recipb;
 recipb = yb-recipb;
 var recipb = -recipb; var recipb = recipb;
 recipb -= -yb * recip-recipb;
 var recipb = -recipb; var recipb = recip;
 recipb = -yb * yb*recipb;
 var recipb = -recipb; recipa = -yb;
recipb = -recipb; yb = -yb;
 yb += - (temp - yb); yb += - (temp - yb); yb = -recipa; double
recipb = -recipb; yb = -recipa;
 recipb = recipb - yb*recipb;
 recipb = -recipb; } }
 recipb += -yb*recipb;
 var recipb = -recipb; var recipa = -yb,
 recipb = -yb
 var recipb = -recipb; var recipa = recip;
 yb += - (temp - ya - recipa); yb = -recipb; recipa = -yb
 yb = -recipb; yb = -recipa; recipa = -recipa;
 yb += - (temp - ya - recipa); recipb = -yb;
 recipb = 0;
 var recipb = -recipb; var recipa = -yb
 yb += - (temp - ya - recipa); yb = -recipb; yb = recipb;
 yb += - (temp - recipa); yb += - (temp - recipb); yb += - recipb; double
 recipb = -recipb; }
 yb = -recipb; yb += - (temp - ya - recipa) * recip;
 recipb = recipb recip *= -recipb;
 recipb = -recipb; else { recipb = -recipa;
recipb = -recipb
 recipb = recipb; }
 recipb = -recipb; else { var y = -recipa;
 yb += - (temp - ya - recipa); yb += - (temp - ya - recipb) ; double
 yb += - (temp - ya - recipa); yb = -recipb; yb = recipa;
 yb = -recipb; yb += - (temp - yb); yb += - (temp - recip);
 yb += -yb * recipb ; yb += -yb * recipb ; recipb = -yb;
 var recipb = -recipb; var recipa = -recipb; var
 yb = -recipb; yb += - (temp - ya - recipa); yb +
 recipb += recipb;
 recipb = 1.0-recipb;
 yb += - (temp - ya - recipa); yb = -recipb; recipa = -y;
 yb += -yb * recipb ; yb += -yb * recipb ; yb = -yb;
 yb = -recipb; yb = -recipa; recipb = -recipa;
 yb = -recipb; recipa = -yb;
 var recipb = -recipb;
 yb = -recipb; yb += - (temp - yb); yb = -recipb; double
 recip = recipb;
 yb = -recipb; yb = -recipa; recipa = -yb
 var recipb = -recipb; var recipa = 0;
 recipb += -recipb;
 yb += - (temp - recipa); yb += - (temp - recipb); y = temp; double
 recipb = y-recipb;
 recipb = +recipb;
 recipb = 1-recipb;
 recipb = -bb*recipb;
 yb += - (yb * recipb); yb += - (yb * recip);
 var recipb = -recipb; var recipb = -recipb; var
 recipb += recip * recip;
 yb = -recipb; yb = -recipa; recipa = -bb;
 recipb = recip; recipb= -recipb;
 var recipb = -recipb; var recipa = 0,
 recipb = recipb*recipb;
 yb = -recipb; yb = -recipb; recipa = -yb
 } else { var y = -recipa; var
 yb += - (temp - recipa); yb += - (temp - recipb); ya = temp; double
 recipb = -y;
 recipb = -1.0-recipb;
 recipb = -recipb; recipa = recip;
 var recipb = -recipb; var recipa = -recipa + recip;
 yb += - (temp - recipa); yb += - (temp - recipb); yb += -;
 recipb = +yb*recipb;
 yb = -recipb; yb = -recipa; recipa = -y;
 recipb -= -yb*recipb;
 recipb += recipb *= -recipb;
 var recipb = -recipb; var recipb =
 var recipb = -recipb; var recipa++; var
 recipb -= recip * recip;
 recipb += -yb * -recipb;
 recipb = -recipb; else { var y = -recipa,
 yb = -recipb; recipa = -yb
 recipb = -yb - recip-recipb;
 yb = -recipb; yb = -recipb; recipa = -y;
 recipb = recip - recipb; } }
 recipb = -yb
 recipb = -xb*recipb;
 recip = recipb;
 recipb = recipb-recipb;
 var recipb = -recipb; var recipa = -recipa + recip,
 recipb = recipb*-recipb;
 recipb = -recipb; double
 yb = -recipb; recipa = -y;
 var recipb = -yb;
 recipb = recip - recip;
 var recipb = -recipb; var recipa + var
 recipb = -recipb
 var recipb = -recipb; var recipa =
 recipb = 0-recipb;
 yb += - (temp - ya - recipa); y = temp + recipb; double
 recipb += -yb * recip; }
 recipb = -recipa;
 recipb = recip+recipb;
 } else { var y = -recipa,
 recipb = -y-recipb;
 yb += - (temp - yb); yb += - (temp - yb); double
 } else { result = -recipa; double
 var recipb = -recipb; var yb =
 recipb = -recipb; recipa = 0;
 var recipb = -recipb; var recipa = -recipa;; var
recipb = -recipb; recipb = recipb; }
 yb += - (temp - yb); yb += - (temp - yb) ;
 var recipb = -recipb; var recipa = -recipa + 1;
 } else { var y = -recipa;
 recipb = -yb= -recipb;
 recipb = -recipb * recip; }
 recipb += -recipb; }
recipb = -recipb; recipb = -recipb; }
 yb += - (temp - yb); yb = -recipb; } else {
 recipb = recipb += -recipb;
 recipb = -recipb; } else
 recip = recip;
 = -recipb;
 recipb = -yb * recip; }
 recipb -= recipb *= -recipb;
 recipb = --recipb;
recipb = -recipb; yb = -recipb; }
 var recipb = -recipb; else { var
 recipb = yb;
 recipb -= -recipb; }
 recipb = recipb= -recipb;
 recipb = -bb;
 recipb = recip - -recipb; }
 recipb = -bb;
 recipb = recip - recipb; }
 var recipb = recipb;
 recipb = -ybb
 yb = -yb;
 recipb * recip *= -recipb;
 recipb = -y;
 recipb += recipb; }
 recipb += recip *= -recipb;
 recipb = -recipb; } else {
 recipb = -recipb; and
 recipb = -circ;
 recipb += recipb * recip; }
 var recipb = -recipb; } else {
 recipb += recip;
 recipb = -recipb; -
recipb = -recipb; yb += -recipb; }
 recip = 0;
 var recipb = -recipb; var recipb
 recipb = 0
 recip = -yb
 var recipb = -recipb; var y +
 recipb = -
 } else { var y = -recipb,
recipb = -recipb; yb = -recipa; }
recipb = -recipb; recipb = -recipa; }
 recipb = ;
 var recipb = recip-recipb;
 recipb = 0;
 recipb -= recip;
 recipb = -recipb; } double
recipb  = recipb
 recipb = 1;
 recip = yb;
 var recipb = -recipb, var
 recipb = -1-recipb;
 recip = y;
 recipb = -recipb; else,
 recipb += ;
 recipb == -recipb;
 recip += recip;
 var recipb =
recipb = - recip;
 recipb -recipb;
recipb = -ybb;
 recipb = y
 return result;
 y = recip;
 recip = 0;
 recip = 1;
 recipb * *= -recipb;
recipb =  +recipb; }
 + -recipb;
recipb = -recipb;;
recipb = -recipb }
 recip = recip-recipb;
 recipb ^= -recipb;
recipb = -circ;
 var recipb *= -recipb;
 recipb + *= -recipb;
 recipb + recip= -recipb;
 div recipb *= -recipb;
recipb = -recipa;
 recipb =
recipb = -recipb'; }
recipb = -recipb. }
 var recipb= -recipb;
 = +recipb;
 var recipb
recipb  = recip
 -y;
 } else {
 y =-recipb;
 reciprocal =-recipb;
 - recip;
 - result;
 var recip =
 } else,
 reciprocalb= -recipb;
 yb= -recipb;
 result *= -recipb;
 double
 } double
 int
 } else
 } int
 and
recipb = 0recipb;
recipb := -recipb;
