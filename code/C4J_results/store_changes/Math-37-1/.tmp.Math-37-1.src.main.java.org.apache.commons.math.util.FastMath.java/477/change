double temp = ya * HEX_40000000;
double  temp = yb ;
double temp = ya *  yb ;
double  temp ;
 temp = -HEX_40000000;
double temp = ya  + yb ;
 temp = -ya * HEX_40000000;
 temp = ya* HEX_40000000;
 temp = yb *HEX_40000000;
double  temp = y ;
double temp = ya  + yb ; result *= 2 ;
double temp = ya  + yb - yb ;
double temp = ya * HEX_40000000 + yb ;
 double temp = -ya * HEX_40000000;
double temp = ya * HEX_40000000 ; double recip = yb ;
 temp = y;
double temp = ya  + yb ; result = yb ;
double temp = ya  + yb + yb ;
double temp = ya * HEX_40000000 ; double recipb = yb ;
 result = ya + yb ; }
double  temp = yb + yb ;
double  temp = hiPrec [ - 1 ] ;
 var temp = yb ;
double  temp = 0.25 ;
 temp = y*HEX_40000000;
 yb += - (ya - hiPrec[1] - hiPrec[2]);
double temp = ya  + yb ; result *= 2 ; }
 result = yb + yb ; result *= 0.5 ;
double temp = ya  + yb ; result = 0 ;
double temp = ya  + yb ; result = y ;
double temp = ya  - yb ;
 result = yb ;
double temp = ya  + yb * yb ;
 result = ya + yb ;
 temp = yb ; temp = ya* HEX_40000000;
 result = yb + yb ; result *= 0.5 ; } else {
 result = yb + yb ; result *= 0.5 ; }
double  temp = yb - y ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result *= 0.5;
 result = ya + yb ; result *= 0.5 ;
 yb += - (ya - hiPrec[0] - hiPrec[1]);
 result = ya + yb ; result *= 2 ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = ya + yb ;
double  temp = yb - yb ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = yb ;
 result = y + yb ; }
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = - yb ;
double temp = ya  + yb ; result *= - 1 ;
 result = yb + yb ; result *= 2 ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = ya + yb ; }
 yb += - (ya - hiPrec[0] - hiPrec[2]);
double temp = ya  + yb ; result *= 0.5
double temp = ya * HEX_40000000 ; double recip = yb - temp ;
 yb += - (ya - hiPrec[1] - hiPrec[2]); result = yb ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = yb ; }
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = yb + yb ;
 temp*HEX_40000000;
 result = ya + yb * yb ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = yb + yb ; }
double  temp = yb - ya ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); yb += - yb ;
 yb += - (ya - hiPrec[0] - yb);
 temp = yb * -HEX_40000000;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = y + yb ;
 yb += - (ya - hiPrec[1] - hiPrec[2]); result = ya + yb ; }
double temp = ya * HEX_40000000 ; double recipb = 0 ;
double  temp = yb + y ;
 result = y + yb ;
 yb += - (ya - hiPrec[1] - hiPrec[2]); result = yb ; }
 yb += - (ya - hiPrec[1] - hiPrec[2]); result = yb + yb ; }
 result = yb + yb ; result *= 2 ; }
 result = yb ; result *= 0.5 ;
 yb += - (ya - hiPrec[0] + hiPrec[1]);
 result = ya + yb ; result *= 0.5 ; }
double  temp = hiPrec [ 1 ] ;
 temp = yb + yb* HEX_40000000;
 double temp = yb *HEX_40000000;
 double temp = yb ; temp= ya * HEX_40000000;
double  temp = 1.0 ;
double temp = ya * HEX_40000000 ; double recipb = temp ;
double temp = ya * HEX_40000000 ; double recipb = recip - yb ;
double temp = ya  + yb - 1 ;
 temp = yb - yb* HEX_40000000;
 result = ya + yb ; } else {
double temp  = yb + yb + yb ;
 result = yb + yb ; } else {
double temp  = yb + yb - yb ;
 result = yb - yb ; result *= 0.5 ;
 yb += - (ya - hiPrec[0] + hiPrec[2]);
 result = yb + yb ; }
 result = yb + yb ; result *= 0.5
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = 0 ;
double temp = ya * HEX_40000000 ; double recipb = - yb ;
double temp  = yb + yb * yb ;
double temp = ya  - y ;
 temp = yb-ya * HEX_40000000;
double temp = ya  + temp - yb ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = y + yb ; }
 result = yb - yb ; result *= 0.5 ; }
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = yb - yb ; }
double  temp = 0.5 ;
 result = ya + yb ; result *= 2 ; }
double temp = ya  - hiPrec [ 1];
 yb += - (ya - hiPrec[0] - hiPrec[1]); yb += - y ;
 result = yb ; }
 var temp = yb ; temp= ya * HEX_40000000;
double  temp = x + yb ;
double temp = ya  + yb ; result *= 1.5
 yb += - (ya - hiPrec[2]);
 result = yb + yb * yb ;
 temp = yb + temp - temp;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result *= - 1 ;
 var temp = yb + yb ;
double  temp = 0 ;
 result = yb * yb * yb ; }
double temp =  hiPrec [ 1 ] - yb ;
double temp = ya  + yb ; result *= 1 ; }
 var temp = yb * -HEX_40000000;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = yb * yb ; }
double temp =  hiPrec [ 0 ] + yb ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = ya + yb ; } }
double temp = ya * HEX_40000000 ; double recip = 1.0 ;
double temp  = yb - yb + yb ;
double  temp = yb - yb + 1 ;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = -1;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = - result ;
double  temp = yb + yab ;
 yb += - (ya - hiPrec[0] - hiPrec[1]) * recip;
 yb += - (ya - hiPrec[1]);
 result = yb + yb * yb ; }
double temp =  hiPrec [ 1 ] + yb ;
 double temp = yb + temp - temp;
 yb += - (ya - hiPrec[1] - hiPrec[2] - 1);
 temp = yb + 1.0*HEX_40000000;
 temp = yb * HEX_HEX_40000000;
 result = yb * yb ; } else {
 result = ya + yb * yb ; }
 yb += - (ya - hiPrec[1] - hiPrec[2]) * recip;
double temp = ya  + yb + yb * recip ;
 temp = yb + yb ;
double  temp = yb + ya ;
 temp = yb ; temp = y*HEX_40000000;
 yb += - (ya - hiPrec[1] - hiPrec[2] * recip);
double temp = ya * HEX_40000000 ; double recip = y ;
double temp = ya *  HEX_40000000 * yb ;
 tmp = yb ; temp = yb*HEX_40000000;
double temp = ya * HEX_40000000 ; double recip = yb + temp ;
double temp = ya  + yb - yb - 1 ;
double temp = ya *  HEX_40000000 ( ) ;
 var temp = yb ; temp = y*HEX_40000000;
 var temp = yb ; var temp = ya* HEX_40000000;
double temp = ya  + y ;
 yb += - (ya - hiPrec[1] - hiPrec[2] + 1);
 temp = ya + temp - temp;
double temp  = hiPrec [ 1 ] - y ;
 temp = ya + yb ;
 var temp = yb - y;
 result = y + yb * yb ;
 var temp = yb*HEX_40000000;
double  temp = x ;
double temp = ya  + yb + 1 ;
 temp = ya + yb - temp;
double  temp = yb + yb - y ;
 temp = -yb;
double temp = ya *  HEX_40000000 + y ;
double temp = ya *  HEX_40000000 ; result = y ;
 var temp = yb - yb ;
 temp = yb + y*HEX_40000000;
 ya = yb ;
 var temp = hiPrec [ - 1 ] ;
 double temp = yb + temp - y;
double temp = ya *  HEX_NANOSEC ;
 temp = 0.5;
double temp = ya *  HEX_40000000 ; result = 0 ;
 yb += - yb * recip;
 temp = yb + -yb*HEX_40000000;
 tmp = yb ; temp = ya* HEX_40000000;
 var temp = yb + yb ; result = yb ;
 var temp = yb + yb * yb ;
double temp = ya *  HEX_40000000 * y ;
 var temp = y + yb; var temp= ya * HEX_40000000;
 var temp = yb + yb ; result *= 2 ;
 var temp = 1.0 ;
 temp = yb - yb ;
 result = yb + yb ; result *= 0.5 ; } }
 result *= 0.5;
double temp = ya * HEX_40000000 ; double recip = temp ;
 result = ya + yb ; result *= ;
 var temp = yb *= ya * HEX_40000000;
double temp = ya *  0.5 ;
 var temp = yb + yb* HEX_40000000;
double temp =  yb + yb * recip * recip ;
 var temp = yb + yb + yb ;
 var temp = yb - yb; temp= ya * HEX_40000000;
 temp = yb + -ya * HEX_40000000;
 result = -yb;
 var temp = yb + yb; temp= ya * HEX_40000000;
 var temp = yb - yb ; var recipb = temp ;
 temp = 0;
double temp = ya *  0.25 ;
 result = ya + yb ; result *= 0.5 ; } }
double  temp = 2.0 ;
 var temp = yb * 2*HEX_40000000;
 temp = yb * 2*HEX_40000000;
 temp = yb - y*HEX_40000000;
 double temp = -yb; double temp= ya * HEX_40000000;
 var temp = yb + yb ; result *= - 1 ;
 result = yb + yb ; result *= 0.5 ; } else
 var temp = yb + yb * recip * recip;
 var temp = yb - ya;
 result = ya + yb ; result *= 0.5 ; } else
 var temp = yb + yb ; var recipb = 0 ;
double temp = ya  + temp - temp ;
 temp = 0.25;
 var temp = yb - yb ; result = yb ;
 var temp = yb - yb ; result = temp ;
 yb += -yb;
 temp = yb + ya* HEX_40000000;
 var temp = yb + yb - yb ;
 yb += - (yb - yb) * recip;
 double temp = yb-ya * HEX_40000000;
 var recip = yb ;
 double temp = y + 1;
 double temp = y* HEX_40000000;
 temp = yb + yab* HEX_40000000;
 var temp = yb - yb + 1 ;
double temp = ya * HEX_40000000 ; double recip = 0 ;
 temp = yb + yb - temp;
double temp = ya *  HEX_40000000 ; result = ya ;
double temp = ya *  HEX_40000000.0;
 double temp = -yb; temp= ya * HEX_40000000;
 yb = -yb;temp = ya * HEX_40000000;
 temp = yb2* HEX_40000000;
 var temp = 0.25 ;
 var temp = yb + yb ; result = y ;
 result = ya + yb ; } }
 double temp = yb - yb0;
 tmp = yb ; double temp = ya* HEX_40000000;
 var temp = -yb; temp= ya * HEX_40000000;
double temp = ya *  HEX_40000000 ; var yab ;
double temp = ya *  HEX_NANOSECOND ;
double temp = ya * HEX_40000000; double recip = temp - y ;
 yb += yb ;
 temp = yb + -y*HEX_40000000;
 result = ya + yb ; } else
 double temp = 0.25; temp = -ya * HEX_40000000;
double temp = ya *  y ;
 var temp = yb - yb + yb ;
double temp = ya *  2.0 ;
 var temp = yb - yb * yb ;
double temp = ya  + temp - y ;
 temp = yb + 2*ya * HEX_40000000;
 temp = y - y;
 temp = y + ya* HEX_40000000;
 yb += - (ya - hiPrec[1] - hiPrec[2]) ; }
 var temp = 0.25 ; temp = ya* HEX_40000000;
 yb += - (ya - hiPrec[0] - hiPrec[1]); }
 var temp = yb + 1.0 ;
 result = 0 ;
 temp = yb - -ya * HEX_40000000;
 var temp = yb + yb * recip;
double temp = ya *  HEX_10000;
 result = ya + yb ; result *= 0.5 }
 var temp = yb + yb + yb - y ;
double temp = ya *  HEX_0000000;
 var temp = yb + yb - y;
 tmp = yb + yb* HEX_40000000;
 double temp = y - x;
 yb += - (ya - hiPrec[0] - hiPrec); }
 temp = y - ya* HEX_40000000;
 var temp = yb + yb + 1 ;
double temp = ya *  HEX_400000008;
 double temp = y - ya;
 temp = ya + yb - 1;
 var temp = 0.5 ;
 var temp = yb + yb ; result *= 2 ; }
 yb += - (ya - hiPrec[0] + hiPrec[1]); }
double temp = ya b ;
 var temp = yb ; var temp = y* HEX_40000000;
 temp = yb - yab* HEX_40000000;
 ya = temp - yb;temp = ya * HEX_40000000;
 yb += - (ya - hiPrec[1] - hiPrec); }
 var temp = 1.0; temp = ya* HEX_40000000;
 var temp = yb-ya * HEX_40000000;
 double temp = 0.25; temp += -ya * HEX_40000000;
double temp = ya *  HEX_400000002;
 temp = y + y;
 temp = yb ; temp = -ya * HEX_40000000;
 yb += - (ya - hiPrec[1] - hiPrec[0]); }
 double temp = y - y;
 temp = yb - yb0;
 yb += - (ya - hiPrec[0] - hiPrec[1]); result = 0;;
double temp = ya *  HEX_1024;
 result = yb + yb ; result *= 0.5 ; } else { }
double  temp = yb + yb ; }
 tmp = yb ; double temp = tmp* HEX_40000000;
 temp = yb*ya * HEX_40000000;
 yb += - (ya - hiPrec[0] + hiPrec); }
 temp = ya + yb + 1;
 temp = ya + temp;
 double temp = ya;
 double temp = 0.25; double temp= ya * HEX_40000000;
 temp = y + 1;
 yb += - (ya - hiPrec[0] - hiPrec[2]); }
double temp = ya  + yb + yb ; }
double temp = ya * HEX_40000000 ; double recip = 1 ;
 yb += - (ya - hiPrec[0] - hiPrec[1]) * recip; }
 temp = 1.0* HEX_40000000;
 result = y ;
 yb = 0 ;
 yb += - (ya - hiPrec[0] - yb); }
 temp = -yb; temp= ya * HEX_40000000;
 double temp = 1.0- yb-ya * HEX_40000000;
 yb += - (ya - hiPrec[1] - hiPrec[0]) * recip; }
 yb += -yb;temp = ya * HEX_40000000;
double temp = ya * HEX_40000000 - yb ;
 temp = y + y* HEX_40000000;
double  temp = 1 ;
 temp = yb + 1-ya * HEX_40000000;
 var temp = -ya * HEX_40000000;
 temp=HEX_40000000;
 double temp = 1.0- yb*ya * HEX_40000000;
 temp = yb *= ya * HEX_40000000;
 double temp = 1.0*yb*ya * HEX_40000000;
double temp = ya * HEX_40000000 ; double recipb = recip - recipb ;
 temp = yb ; temp = yya * HEX_40000000;
 temp = yb - 1-ya * HEX_40000000;
 temp = yb - 1.ya * HEX_40000000;
double temp = ya *  HEX_30000000;
double  temp = -y;
double temp = ya  + temp + y ;
 double temp = yb*ya * HEX_40000000;
 temp += -HEX_40000000;
double temp = ya *  HEX_200000;
 temp = yb + 1.ya * HEX_40000000;
double temp = ya *  HEX_80000000;
 double temp = yya * HEX_40000000;
double temp = ya *  1.0 ;
double temp = ya * HEX_40000000 ( yb ) ;
 tmp = yb + tmp* HEX_40000000;
 var temp = y;
 y = ya ;
 ya = y ;
 double temp = yb + yab-ya * HEX_40000000;
 ya = ya + yb ; }
double  temp = yb - yb ; }
double temp = ya *  HEX_20000000;
 ya = 0 ;
 temp = yb + yb ; }
 temp = *HEX_40000000;
 double temp = yb + yb-ya * HEX_40000000;
 temp = 1-ya * HEX_40000000;
 temp = ya;
 temp = 2*ya * HEX_40000000;
double temp = ya *  2 ;
 double temp = yb + yab*ya * HEX_40000000;
 var temp = y*HEX_40000000;
 yb = y ;
 temp = yb +HEX_40000000;
double  temp += yb ;
 yb += -yb * recip; #temp = ya * HEX_40000000;
 yb += y ;
 yb += - yb ; }
 double temp = 1.0-*ya * HEX_40000000;
double  temp -= yb ;
 temp = yya * HEX_40000000;
 double temp = 1.0-yya * HEX_40000000;
 double temp = 1.0--ya * HEX_40000000;
 tmp = yb*HEX_40000000;
 temp = +HEX_40000000;
 - temp;
 var temp = ya* HEX_40000000;
 var temp = yb + yb ; }
double temp = ya * HEX_40000000 + 1 ;
 temp = x;
 temp += -ya * HEX_40000000;
 result *= 0.5; }
 yb += yb;temp = ya * HEX_40000000;
double  temp = hiPrec[1]; }
 double temp = 1-ya * HEX_40000000;
 ya = yb + yb ; #temp = ya * HEX_40000000;
 var temp = 2*ya * HEX_40000000;
 + temp;
double temp = ya *  HEX_40000000 ; }
 result = y + yb ; } #temp = ya * HEX_40000000;
 temp = x*HEX_40000000;
 yb += -yb * recip; --temp = ya * HEX_40000000;
 ya = yb + yb ; } #temp = ya * HEX_40000000;
 temp = 1;
 var temp = yb= ya * HEX_40000000;
double  temp ; {
 double temp = -yb; int temp= ya * HEX_40000000;
 temp = 0; temp= ya * HEX_40000000;
 result = y + yb ; } else {temp = ya * HEX_40000000;
 yb += - yb ; } #temp = ya * HEX_40000000;
double temp = ya  + temp ;
 result *= 0.5; } #temp = ya * HEX_40000000;
 yb += 1;temp = ya * HEX_40000000;
 var temp; var temp= ya * HEX_40000000;
 yb = -yb; -temp = ya * HEX_40000000;
double  temp = -
 yb = 0;temp = ya * HEX_40000000;
 temp = *ya * HEX_40000000;
 temp = yb += ya * HEX_40000000;
 temp += *HEX_40000000;
 yb += 2;temp = ya * HEX_40000000;
 temp = yb= ya * HEX_40000000;
 temp = ye* HEX_40000000;
double temp = ya *  x ;
double  temp ++ ;
double  temp = 0
double temp = ya *  YAB ;
double  temp = ;
double temp = ya *  recip;
double temp = ya  + ;
 var temp; temp= ya * HEX_40000000;
 temp = xx* HEX_40000000;
 -1;
 -y;
 = y* HEX_40000000;
 + y* HEX_40000000;
 -y* HEX_40000000;
 temp +=HEX_40000000;
 + y;
 double -temp = ya * HEX_40000000;
double temp =  -ya;
 + temp* HEX_40000000;
double temp = ya *  YB ;
 temp=(ya * HEX_40000000;
 double temp *= ya * HEX_40000000;
double  temp =
double temp = ya *  ybb ;
 double temptemp = ya * HEX_40000000;
 = temp* HEX_40000000;
 # yaa-temp = ya * HEX_40000000;
 var temp = *= ya * HEX_40000000;
 temp = yab= ya * HEX_40000000;
 result = 0
 tmp = temp= ya * HEX_40000000;
 double ytemp = ya * HEX_40000000;
 tmp; temp= ya * HEX_40000000;
 + yb
 temp = *= ya * HEX_40000000;
double temp = ya  - y
 temp + temp= ya * HEX_40000000;
 # Yaa-temp = ya * HEX_40000000;
 result = y
 # yab-temp = ya * HEX_40000000;
 int temp= ya * HEX_40000000;
 # yaa+temp = ya * HEX_40000000;
 # yaa*temp = ya * HEX_40000000;
double  tmp ;
 temp=$ya * HEX_40000000;
 double xtemp = ya * HEX_40000000;
 double tmp= ya * HEX_40000000;
 else { #temp = ya * HEX_40000000;
 double var= ya * HEX_40000000;
 else? #temp = ya * HEX_40000000;
double temp = ya + HEX_40000000;
 else: #temp = ya * HEX_40000000;
 } {
 } else
 } { #temp = ya * HEX_40000000;
double temp = ya - HEX_40000000;
double temp = ya % HEX_40000000;
 }
double temp -= ya * HEX_40000000;
double temp += ya * HEX_40000000;
double temp - ya * HEX_40000000;
