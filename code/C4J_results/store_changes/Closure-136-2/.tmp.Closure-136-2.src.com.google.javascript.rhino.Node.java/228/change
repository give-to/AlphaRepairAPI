case IS_OPTIONAL_PARAM:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return  "optional";
case IS_OPTIONAL_PARAM:  return  "is_optional";
 case IS_OPTIONAL: return"is_optional_param";
 case IS_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_OPTIONAL_NAME:  return "is_optional_param";
 case IS_OPTION:  return "is_optional_param";
case  IS_VAR_ARGS:
 case IS_OPTIONALParam:  return "is_optional_param";
 case IS_OPTIONAL_PARAMED:  return "is_optional_param";
 case OPTION:  return "is_optional_param";
 case OPTIONS:return "is_optional_param";
 case IS_PARAM:
 case IS_OPTIONAL_PARAMPLE:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return  "is_optional_param_name";
case  IS_VARARGS:
 case IS_optional: return"is_optional_param";
case IS_OPTIONAL_PARAM:  return  "optionalparam";
 case IS_OPTIONALAM:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return  "is_optional_param_param";
 case IS_OPTIONAL_PARAMBLE:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return  "optionalParam";
case  IS_VAR_ARGS_NAME:
 case IS_OPEN:return "is_optional_param";
 case IS_OPTIONAL:"is_optional_param";
 case IS_OPTIONAL_PAR:  return "is_optional_param";
 case IS_OPTIONS:return "is_optional_param";
case  IS_VAR_ARGS_STR:
 case IS_OPTIONAL_PARAMN:  return "is_optional_param";
 case IS_OPTIMIZE:  return "is_optional_param";
 case IS_VAR_PARAM:
 case IS_Optional: return"is_optional_param";
case  IS_ARGS_PARAM:
case  IS_CLASS:
case IS_OPTIONAL_PARAM:  return  "is_optional parameter";
case  IS_VAR_ARGS_VALUE:
 case IS_OPTIONALM:  return "is_optional_param";
case  IS_VAR_ARGS_MAP:
 case IS_OPTIONAL_AM:  return "is_optional_param";
 case IS_OPTIONALPARAM:return "is_optional_param";
 case IS_OPTIONS_PARAM:  return "is_optional_param";
 case IS_OPTIMESTAMP:  return "is_optional_param";
 case IS_optional_param:return "is_optional_param";
case IS_OPTIONAL_PARAM:  return  "is_optional_param_arg";
 case IS_OPTIONAL::"is_optional_param";
 case IS_OPTIMUM: return"is_optional_param";
case  IS_VAR_ARGS_METHOD:
 case IS_VAR_ARGS_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_ARRAY:
 case IS_OPT: return"is_optional_param";
 case ANY:  return "is_optional_param";
 case IS_VAR_PARAM_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_OPTIONAL_PARAM:"is_optional_param";
 case IS_ANY:return "is_optional_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_VAR_ARGS:
 case IS_OPTIONAL_Param:  return "is_optional_param";
 case IS_VARARGS:
 case IS_VARIABLE_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_VAR_ARGS;
 case IS_OPTIMED:  return "is_optional_param";
case  IS_PARAM_ARGS:
 case IS_OR_IS_OPTIONAL_PARAM:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; case IS_VAR_ARGS:
case  IS_VARGS:
 case IS_PARAMETER_IS_OPTIONAL_PARAM:  return "is_optional_param";
case  IS_STRING:
 case IS_PARAMETER:
case  IS_CALL_PROP:
 case IS_OPTIONALPAM:return "is_optional_param";
 case IS_OPC:return "is_optional_param";
 case IS_OPTIMAL_NAME:  return "is_optional_param";
 case IS_Optional_Param:  return "is_optional_param";
 case IS_ARRAY_PARAM_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_NAMESPACE_IS_OPTIONAL_PARAM:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_VARARGS:
case IS_OPTIONAL_PARAM:  return  "is_optionalParam";
 case IS_OPTIMAL:return "is_optional_param";
 case IS_NAME:
 case IS_CONSTANT_IS_OPTIONAL_PARAM:  return "is_optional_param";
case  IS_ARRAY_PARAM:
 case IS_ARRAY_PARAM:
 case IS_INTERNAL_IS_OPTIONAL_PARAM:  return "is_optional_param";
case  IS_NAME:
 case IS_OPTIMEOPAM:  return "is_optional_param";
case  IS_PARAM:
 case IS_SPEC:return "is_optional_param";
 case IS_PARAM_NAME:
 case OPTIONAL: return"is_optional_param";
case  IS_ARRAY:
case  IS_VAR:
 case IS_OTHER:return "is_optional_param";
 case IS_PARAMS:
case IS_OPTIONAL_PARAM:  return  "optional parameter";
case  IS_VAR_NAME:
 case IS_VAR_ARGS : return "is_args";
 case IS_VAR_NAME_OR_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_NAMESPACE: return "name";
 case IS_ARRAY_OR_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_PARAM_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_VAR_ARGS : return "is_var_args";
case  IS_METHOD:
 return "is_constant_name;
 case IS_OPTIONAL_PARAM::"is_optional_param";
 case IS_VAR_NAME_AND_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_optional_Param:  return "is_optional_param";
 case IS_OPTIMESPAM:  return "is_optional_param";
case  IS_ARGS:
 case IS_VAR_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_VAR_ARGS_NAMESPACE:
 case IS_OPTIONAL:
 return "is_constant;
 case IS_PARAM_PARAM:
 case IS_NAMESPACE: return "is namespace";
 case IS_VAR_ARGS:
 case IS_VAR_ARGS : return "is_var";
 return "is_const;
 case IS_VARARGS;
 case IS_ARRAY_ARRAY_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_PARAM_STR:
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; case IS_VARARGS:
 case IS_OPTIONAL(param) :return "is_optional_param";
 case IS_optionalParam:"is_optional_param";
 return "is_constant";
 case IS_CUSTOM_IS_OPTIONAL_PARAM:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return  "optional_param";
case  IS_ARGS_NAME:
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_ARRAY:
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_ARGS:
 case IS_MISSING_PARAM: return "missing";
 return "is_constantname;
 case IS_NODE_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_ARRAY_AND_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_PATTERN_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_PARAMETER_NAME:
 case IS_SPECIFICATION_AND_IS_OPTIONAL_PARAM:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_VAR:
 case IS_OPTIONAL: returns"is_optional_param";
 case IS_METHOD:
 case IS_DEPENDENCY : return "is_depency";
case  IS_ARGS_MAP:
 case IS_VAR_ARGS_CALL: return "is_call";
 case IS_CALL_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_VAR_PARAMS:
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_VARGS:
 case IS_DEPENDENCY : return "is_dependency";
 case IS_OPTIONAL: _return "is_optional_param";
 case IS_VAR_ARGS_NAMESPACE: return "isvar";
 case IS_INTERNAL_NAME: return "external_name";
 case IS_VAR_ARGS_NAMESPACE: return "is_var";
 case IS_VAR_ARGS:;
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_VAR_PARAM:
case IS_OPTIONAL_PARAM:  return  "is_option";
 case IS_CALL: return "call;
 case IS_DEPENDENCY : return "is_depension";
 case IS_STRING:
case IS_OPTIONAL_PARAM: return "is_optionalparam";
 case IS_VAR_ARGS_NAME: return "is_varargs";
 case IS_ANY:
 case IS_OptionalParam:"is_optional_param";
 case IS_VAR_ARGS_CALL: return "iscall";
 case IS_VAR_ARGS_NAME: return "is_name";
case  IS_VAR_REF:
 case IS_VAR_ARGS_STR;
 case IS_VAR_ARGS_NAME: return "is_var";
 case IS_VAR_ARGS_STR: return "is_string";
 case OptionalParam: return"is_optional_param";
 case IS_VAR_NAME: case _IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_MISSING_PARAM: return "is_missing";
 return "is_const";
 case IS_VAR_ARGS_NAME: return "name";
case IS_OPTIONAL_PARAM:  return  "is_argument";
 case IS_INTERNAL_NAME: return "internal";
 case IS_MISSING_PARAM: if (is_MISSING_PARAM) return "missing_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_PARAM:
 case IS_VAR_ARGS_NAMESPACE: return "is_varargs";
 case IS_VAR_ARGS_STR: return "is_var_args";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_ARRAY_PARAM:
 case IS_VAR_ARGS_NUMBER: return "is_number";
 case IS_VAR_ARGS_STRING_TYPE:
 case IS_MISSING_NAME: return "missing name";
 case IS_VAR_ARGS_CALL: return "is_var_call";
 case IS_VAR_ARGS_NAM : return "is_name";
 return "is_constantName;
 case IS_VAR_ARGS_PARAM:
 case IS_VAR_ARGS_NAME: return "is_var_name";
 case IS_STRING;
 case IS_MISSING_PARAM: return "missing param";
 case IS_VAR_ARGS_STRING_STR:
 case IS_ARRAY_PARAM: return "array";
 case IS_CLASS:
 case IS_MISSING_PARAM: return "missing parameter";
 case IS_VAR_ARGS_CALL: return "is_argscall";
 case IS_VAR_ARGS_NAMESPACE: return "is_var_args";
 case IS_VAR_ARGS_NAME;
 case IS_VAR_PARAM_NAME:
 case IS_VAR_ARGS_NAME:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_VAR_ARGS:
 case Optional_Param:  return "is_optional_param";
 case IS_MISSING_NAME: return "is_missing";
 case IS_NAMESPACE: return "instance";
 case IS_MISSING_NAME: return "missing_name";
 case IS_NAMESPACE: return "prefix";
 case IS_NAME:  return "is_optional_param";
 case IS_EMPTY:  return "is_optional_param";
 case IS_ANY_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_OPEND:  return "is_optional_param";
 case IS_VAR_NAME: case :IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_VAR_ARGS_NAM : return "is_var";
 case IS_MISSING_PARAM: return "is_missing_param";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_VAR_ARGS_NAME:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_PARAM:
 case IS_NAMESPACE: return "is";
 case IS_INTERNAL_NAME: return "is_internalname";
case IS_OPTIONAL_PARAM:  return  "optionalParameter";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_VAR_ARRAY_VALUE:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_VAR_ARRAY_NAME:
 case IS_ARRAY: return "array;
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_VARARGS:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_ARRAY_ARRAY_NAME:
 case IS_VAR_ARGS_STRING_VALUE:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_PARAMETER:
 case IS_INTERNAL_NAME: return "external";
 case IS_CALLBACK_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_VAR_ARGS_VALUE:
 case IS_MISSING_PARAM: return "is_missing parameter";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_ARGS_NAME:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_VAR_ARRAY:
case IS_OPTIONAL_PARAM:  return  true;
 case IS_VAR_PARAM: (IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_VAR_ARGS_CALL: return "is_varcall";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_ARRAY:
 case IS_VAR_ARGS_STR: return "isvar";
 case IS_VAR_ARGS_VALUE;
 case IS_ARGS:
 case IS_MISSING_NAME: return "is_missing name";
 case IS_VAR_ARGS_STRING_LIST:
 case IS_VAR_ARGS_;
 case IS_VAR_NAME;
 return "is_constant_name_def;
case IS_OPTIONAL_PARAM:  return  null;
case IS_OPTIONAL_PARAM:  return  "is_optional-param";
case IS_OPTIONAL_PARAM:  return  "is_optional_name";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_STRING:
 return "is_constant";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_STRING:
case  IS_URI:
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; case IS_ARGS_NAME:
 case IS_PATH:
 return "is_constant_name";
case IS_OPTIONAL_PARAM: return "optional argument";
 case IS_CALL: return call;
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; case IS_VAR_ARG:
 case IS_VAR_NAME_REF:
case IS_OPTIONAL_PARAM:  return "is_optional_param" + "is_optional_name";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_PARAMS:
 case IS_VAR_ARGS_NAMESPACE: return "is_args";
 case IS_MISSING_PARAM: return "is_missing param";
 case optional: return"is_optional_param";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_ANY:
 case IS_OPTIONAL_PARAM::return "is_optional_param";
 case IS_OPTIONAL: return '"is_optional_param";
 case IS_VAR_PARAM_STR:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_SPECIFICATION:
 case IS_INTERNAL_NAME: return "is_externalname";
case  INDEX:
 case IS_VAR_ARGS_NAMESPACE: return "is_variable";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_METHOD:
 case IS_VAR_ARGS_MAP;
 case IS_INTERNAL_PARAM: return "is_internal_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_VAR_NAME:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_CLASS:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_PARAMETERS:
 case IS_INTERNAL_PARAM: return "is_internalparam";
 case IS_VAR_ARGS_STR:
case  IS_TYPE:
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; case IS_VAR_NAME:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_ARRAY_VALUE:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_ARRAY_NAME:
 case IS_PARAMETER_TYPE:
 case IS_MISSING_PARAM: this return "is_missing_param";
 case IS_BEGIN_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case _IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_URI:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_NAME:
 case IS_VAR_ARG;
 return "is_name;
 case IS_VAR_PARAM_TYPE:
 case IS_INTERNAL_PARAM: return "is_external_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_CLASS:
 case IS_MISSING_PARAM: { return "is_missing_param"; }
 case IS_MISSING_PARAM: this return "is_missing_param"; case IS_PARAM:
case IS_OPTIONAL_PARAM:  return  "is_optional_param;"
 case IS_MISSING_PARAMS: return "is_missing_params";
 case IS_MISSING_PARAM: return "is_missing_param_name";
case IS_OPTIONAL_PARAM:  return  "is_optional_param_name;"
 case IS_VAR_ARGS_NAMESPACE: return "is_var_namespace";
 case IS_VAR_ARGS_NAMESPACE: if return "is_varargs";
 case IS_MISSING_PARAM: if (is_MISSING_PARAM) return "is_missing;";
 case :IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_CLASS;
 return "is_constant_const;
case IS_OPTIONAL_PARAM:  return  "is_optional_param;";
case IS_OPTIONAL_PARAM:  return  "is_optional_param_param;"
 case IS_STRING:;
case  CLASS:
 case IS_AND_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_MISSING_PARAM: return "is_missing_param_param";
 case I18N_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_CLASS_NAME;
case IS_OPTIONAL_PARAM:  return  "is_optional_param_name;
 case IS_MISSING_PARAM: if (is_MISSING_PARAM) return "is_missing;"
 case IS_ARGS:;
 case IS_REGEXP;
 case IS_MISSING_PARAM: if (is_MISSING_PARAM) return "is_missing;".
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_NAME:
case IS_OPTIONAL_PARAM:  return  option;
case  STRING:
 case IS_MISSING_PARAM: if (is_MISSING_PARAM) return "is_missing;",
 case IS_SPEC_IS_OPTIONAL_PARAM:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_ARGMENTS:
case IS_OPTIONAL_PARAM:  return  "is_optional_param;
case IS_OPTIONAL_PARAM:  return  "";
 case IS_VAR_ARGS_NAMESPACE: return "is_varargs;
 case IS_SCRIPT;
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_VAR_ARGS: :
 case IS_VAR_ARGS_NAMESPACE : return "is_var_args;"
 case IS_VAR_ARGS_NAMESPACE: return "is_var_args;
 case IS_NAME;
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_URI:
 case IS_VAR_ARGS_NAMESPACE: return "is_varargs;"
case IS_OPTIONAL_PARAM:  return  "has_param";
case IS_OPTIONAL_PARAM: return "argument";
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_METHOD:
case  DIRECTIVES:
case  NAME:
 case IS_MISSING_PARAM: this return "is_missing_param" ; break ;
case IS_OPTIONAL_PARAM: return "option";
case IS_OPTIONAL_PARAM:  return  "is_optional;";
 case IS_MISSING_PARAM: return "is_missing parameter;
case  IS_VAR_ARGS: {
 case IS_MISSING_PARAM: { return "is_missing_param"; },
case  IS_VAR_ARGS: -
 case IS_VAR_ARGS_NAMESPACE: return "is_var_args;";
 default: return null;
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; case IS_VAR_ARGS;
 case ISOptional:return "is_optional_param";
case IS_OPTIONAL_PARAM:   { return "is_optional_param";
 case COMMENT_IS_OPTIONAL_PARAM:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; case IS_VAR_ARGS():
case IS_OPTIONAL_PARAM:   this return "is_optional_param";
 case OPTIONS: #"is_optional_param";
 case IS_VAR_ARGS_NAMESPACE: return "is_var_args;",
 case IS_MISSING_PARAM: this return "is_missing_param;
 case METHOD_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case IS_VAR_ARGS_STR: return "isvar;"
 case IS_METHOD;
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_PATH:
 case IS_MISSING_PARAM: return "is_missing_param"; case IS_SPECIFICATION;
 case IS_VAR_ARGS_STR: return "isvar;
 case OPTIONS:
 case IS_MISSING_PARAM: this return "is_missing_param;"
 case OPT: return"is_optional_param";
 case optionalParam:"is_optional_param";
case IS_OPTIONAL_PARAM: return "is_optional parameter;
 case OPTION:
 case CAST_IS_OPTIONAL_PARAM:  return "is_optional_param";
 return "is_constant_name" case IS_ARGS: {
 case OPT: return '"is_optional_param";
 case IS_MISSING_PARAM: { return "is_missing_param"; };
case IS_OPTIONAL_PARAM:  return  false;
 case Optional: return"is_optional_param";
 default: break;
case IS_OPTIONAL_PARAM:   return "is-optional";
 return "is_constant_name"; case IS_ARGS: {
 case IS_MISSING_PARAM: this return "is_missing_param"; break; }
 case optional param:return "is_optional_param";
 case IS_MISSING_PARAM: return "is_missing_param;";
 case IS_MISSING_PARAM: this return "is_missing_param");
 case STRING:
 case IS_ANY;
 case IS_MISSING_PARAM: this return "is_missing_param_name"; case
 case IS_MISSING_PARAM : return "is_missing_param_name"; case
case IS_OPTIONAL_PARAM_NAME:
 case IS_MISSING_PARAM: this return "is_missing_param_param"; case
 case IS_VAR_PARAM: {
 case INDEX:
 case IS_MISSING_PARAM: return "is_missing_param_name;";
 case IS_MISSING_PARAM : return "is_missing_param_name"; switch
 case optional param :"is_optional_param";
case IS_OPTIONAL_PARAM:   { return "is_optional"; }
 case BEGIN_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case MEMBER_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case JS_IS_OPTIONAL_PARAM:  return "is_optional_param";
case  IS_VAR_ARG: {
 case "IS_OPTIONAL_PARAM:  return "is_optional_param";
 case OP:  return "is_optional_param";
case  IS_VAR_ARG: :
case  IS_VAR_ARG: -
case IS_OPTIONAL_PARAM: return "is_optional parameter;"
case IS_OPTIONAL_PARAM: return "{optional";
case  IS:
 case NAME:  return "is_optional_param";
case  SCRIPT:
case  CASE:
 break; break;
 return "is_constant;"
case  ISCLASS:
 case IS_PARAM: {
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; break ; }
 return "is_constant;
 case IS:return "is_optional_param";
 case SUPPRESS:  return "is_optional_param";
 case optionalParam:  return "is_optional_param";
case  CALL:
case IS_OPTIONAL_PARAM_VALUE:
 case ISParam:
case IS_OPTIONAL_PARAM:   return 'optional';
case  IS_VARGS():
case IS_OPTIONAL_PARAM:   return "is_optional_param");
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS_VARGS():
 case OP_IS_OPTIONAL_PARAM:  return "is_optional_param";
 return null;
case  IS_VARGS;
case IS_OPTIONAL_PARAM_STR:
case  IS_ARGS: {
 case IF_IS_OPTIONAL_PARAM:  return "is_optional_param";
 case AS_IS_OPTIONAL_PARAM:  return "is_optional_param";
case IS_OPTIONAL_PARAM:  return  {"optional";
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; case IS:
 case NAME:
 case switch;
case IS_OPTIONAL_PARAM:  return "is_optional_param" in this case.
 case CLASS:
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; break ;
case IS_OPTIONAL_PARAM_TYPE:
 break switch;
case IS_OPTIONAL_PARAM:  return "is_optional_param" in case;
 default: continue;
 break break;
case IS_OPTIONAL_PARAM:  return "is_optional_param" case IS:
case IS_OPTIONAL_PARAMES:
 case default;
 case optional:"is_optional_param";
 default: return"is_optional_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" for switch;
case IS_OPTIONAL_PARAM:  return "is_optional_param" in case of error
case IS_OPTIONAL_PARAM:  return "is_optional_param" in case:
case IS_OPTIONAL_PARAM:  return "is_optional_param" in case of boolean
 case optional():"is_optional_param";
 case : return"is_optional_param";
 break ; }
case IS_OPTIONAL_PARAMED:
case IS_OPTIONAL_PARAMIC:
 break;
 # return"is_optional_param";
 case #"is_optional_param";
case IS_OPTIONAL_PARAM: {
 return ""is_optional_param";
 case...return "is_optional_param";
case IS_OPTIONAL_PARAM: #
 case optionalreturn "is_optional_param";
 case?return "is_optional_param";
 case Optionalreturn "is_optional_param";
case IS_OPTIONAL_PARAM:  return "is_optional_param" ; }
case IS_OPTIONAL_PARAM:   {}
case IS_OPTIONAL_PARAM:   # ignore
case IS_OPTIONAL_PARAM:   # deprecated
case IS_OPTIONAL_PARAM:   # -
case IS_OPTIONAL_PARAM:  return "is_optional_param"; case
case IS_OPTIONAL_PARAM:  return "is_optional_param""; case
case IS_OPTIONAL_PARAM:  return "is_optional_param""; }
case IS_OPTIONAL_PARAM:  return "is_optional_param"'; case
 case
 switch
case IS_OPTIONAL_PARAM():  return "is_optional_param";
case IS_OPTIONAL_PARAM':  return "is_optional_param";
case IS_OPTIONAL_PARAM,  return "is_optional_param";
