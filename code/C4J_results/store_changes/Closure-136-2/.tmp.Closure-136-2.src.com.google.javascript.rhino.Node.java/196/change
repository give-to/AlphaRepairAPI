case SOURCENAME_PROP:    return "sourcename";
 case NAME:    return "sourcename";
 case SCRIPTNAME: return"sourcename";
case SOURCENAME_PROP: return "name";
 case SCNAME:    return "sourcename";
 case SCOURCENAME_PROP:return "sourcename";
 case SOURCENAMEPROP:    return "sourcename";
 case SOURNCENAME_PROP:    return "sourcename";
case SOURCENAME_PROP:    return  "source_name";
 case SOURCEN_PROP:    return "sourcename";
 case SURNCENAME_PROP:return "sourcename";
 case SOURCENAME:return "sourcename";
 case SURNCEN_PROP:return "sourcename";
 case SOURNCEN_PROP:    return "sourcename";
 case SCOURCENAME_PROP::    return "sourcename";
 case SOURCENAME_PROP::    return "sourcename";
 case SCRIPT: return"sourcename";
 case SOURCES_PROP: return"sourcename";
case SOURCENAME_PROP:    return  "sourcedename";
case  CASE_PROP:
case SOURCENAME_PROP: return "source";
 case SOURCES:return "sourcename";
 case SOURCENAME_PROP::"sourcename";
 case SVN_PROP: return"sourcename";
 case SCOURCES:return "sourcename";
 case SCRIPT_NAME: return"sourcename";
 case CASE_SOURCENAME_PROP:    return "sourcename";
 case SOURCENAME_PROP:"sourcename";
 case SURNCENAME:    return "sourcename";
 case SOURCENAME_PROPERTY:    return "sourcename";
 case SCRIPT_PROP: return"sourcename";
 case SURNC_PROP:    return "sourcename";
 case SCOURCENAME_PROPERT:    return "sourcename";
 case "casearray";
 case CASESOURCENAME_PROP:    return "sourcename";
 case SOURCNAME: return"sourcename";
 case SCOURCENAME:return "sourcename";
 case SOURCENAME_PROP|SOURCENAME_PROP:    return "sourcename";
 case SPECIFICATION_PROP:
case  TYPE_PROP:
case SOURCENAME_PROP:    return  "sourcename"; case TYPE_PROP:
case SOURCENAME_PROP:    return  "srcename";
case SOURCENAME_PROP: return "seed";
 case SURNCENAME_PROP::"sourcename";
 case SOURCESPACE:    return "sourcename";
 case SOURCE_PROP:
 case CASE_PROP:
 case SOURCENAME_OR_SOURCENAME_PROP:    return "sourcename";
 case SCURNNAME: return"sourcename";
 case CUSTOM_SOURCENAME_PROP:    return "sourcename";
 case SURNCENAME_PROP:"sourcename";
case SOURCENAME_PROP: return "species";
 case SOURCES_NAME:return "sourcename";
 case SOURCENAME_NAME:return "sourcename";
case  CASE_PROP_PROP:
 case SCRIPT_PROP:
case SOURCENAME_PROP:    return  "sourcename"; case CLASS_PROP:
 case CASE_PROP;
 case SOURCENAME : caseSOURCENAME_PROP:    return "sourcename";
 case SOURCENAME_PROPreturn "sourcename";
 case SURNNAME:return "sourcename";
 case SPEC_PROP:
case  CLASS_PROP:
 case SOURCENAME_TO_SOURCENAME_PROP:    return "sourcename";
case SOURCENAME_PROP:    return  "sourcedefname";
 case SOURCENAME_PROP,SOURCENAME_PROP:    return "sourcename";
case SOURCENAME_PROP: return "slice";
 case SOURCENAME_PROP:SOURCENAME_PROP:    return "sourcename";
 case SOURCENAME_PROP_SOURCENAME_PROP:    return "sourcename";
 case SURLCNAME:    return "sourcename";
 case SUCCESS_PROP : caseSOURCENAME_PROP:    return "sourcename";
 case SPECIFICATION_PROP: return "spec";
case  "casearray";
case SOURCENAME_PROP:    return  "source_namespace";
 case SOURCENAME:
case  CASEPROP_PROP:
 case SPECIFICATION_PROP: case *SOURCENAME_PROP:    return "sourcename";
case  TYPE_PROP: return "type";
case SOURCENAME_PROP:    return  "sourcename_props";
 case SOURCENAME_:    return "sourcename";
 case CASEARRAY_SOURCENAME_PROP:    return "sourcename";
case SOURCENAME_PROP:    return  "scourname";
 case SOURCENAME_SOURCENAME_PROP:    return "sourcename";
 case SOURCE_PROP: caseSOURCENAME_PROP:    return "sourcename";
 case SURNAME:    return "sourcename";
 case TYPE_PROP: return "type;
case SOURCENAME_PROP:    return  "subjectname";
case SOURCENAME_PROP:    return  "sourcename"; case STRINGPROP:
 case TYPE_PROP: case *SOURCENAME_PROP:    return "sourcename";
case SOURCENAME_PROP:    return  "series_name";
case SOURCENAME_PROP:    return  "sourcename"; case SOURCE_TYPE:
case  CASE_PROP: return "case";
 case SURCNAME:return "sourcename";
 case "case";
case SOURCENAME_PROP:    return  "sourcename"; case STRING_TYPE:
case  COMPOSITE_PROP:
 case SOURCENAME: case *SOURCENAME_PROP:    return "sourcename";
 case CASE_PROP_PROP:
case SOURCENAME_PROP:    return  "sourcename_prop";
 case SCOURCEN:return "sourcename";
 case SPECIFICATION_PROP: return "species";
case SOURCENAME_PROP:    return  "sourcename_proto";
 case SOURCENAMEL:    return "sourcename";
case  CASEPROP:
 case CATEGORY_SOURCENAME_PROP:    return "sourcename";
 case CUSTOMSOURCENAME_PROP:    return "sourcename";
 case SOURCENAME : case _SOURCENAME_PROP:    return "sourcename";
 case SOURCENAME: #"sourcename";
 case SCRIPT_PROP: return "script";
 case STRING_PROP;
 case SCRIPT_NAME:
 case SVN_PROP: #"sourcename";
case SOURCENAME_PROP:    return  "sourcename"; case PROP:
case SOURCENAME_PROP:    return  "sourcename"; case TYPE_NAME:
case  CLASS__PROP:
case SOURCENAME_PROP:    return  source;
 case SPECIFICATION_NAME:
case SOURCENAME_PROP:    return "sourcename" or "sourcename";
 case SPECIFICATION_PROP: return "specific";
case SOURCENAME_PROP:    return  "seriesname";
 case SCRIPT_PROP: return "script;
 case "case;
 case CASES_SOURCENAME_PROP:    return "sourcename";
 return "casearray"; case SOURCE_PROP: return "source";
case SOURCENAME_PROP:    return  "sourcedef_name";
 case CASARRAY_SOURCENAME_PROP:    return "sourcename";
 case CASEPROP:
 return "casearray"; case SCRIPT_PROP: return "script";
 case COMPOS_PROP: return "comp;
 case SPECIFICATION_TYPE:
 case SOURCENAME_PROPSreturn "sourcename";
case  case_PROP:
 case EXTENDED_PROP: return "ended;
case SOURCENAME_PROP:    return "sourcename" case CASE_PROP:
 case CASE_PROP: return "case;
 case SCRIPTNAME": return"sourcename";
case  "case";
 case casePROP:
 case SCRIPTNAME: #"sourcename";
case SOURCENAME_PROP:    return  "sourcename"; case PROPS:
 case SPECIFICATION_PROP: return "specified";
 case "casearray;
 case COMPOSITION_PROP: return "position";
 case CASE_PROP: return "case";
 return "casearray"; case SCOPE_PROP: return "scope";
 case SPECIFICATION_PROP: return "specification";
case SOURCENAME_PROP:    return  "southname";
case  EXTENDED_PROP: return "ended";
case  CUSTOM_TYPE:
 case STRING: return "string;
 case TYPE: return "type;
 case STRING_PROP: break;
 case SOURCENAME_PROPS:return "sourcename";
case SOURCENAME_PROP:    return  "sourcename_property";
 case SCRIPT:
 case "case"];
 case CACHE_SOURCENAME_PROP:    return "sourcename";
 case CASEPROP: return "case;
case SOURCENAME_PROP:    return "sourcename" ; default : return "unknown"; }
 case CASEARRAY_TO_SOURCENAME_PROP:    return "sourcename";
 case SCRIPT_PROP: return script;
 case SCREEN:
case SOURCENAME_PROP:    return  "seedname";
 case STRING: return"sourcename";
 case CASEARRAYED_SOURCENAME_PROP:    return "sourcename";
 case COMPOS_PROP: return compose;
case SOURCENAME_PROP:    return  name;
case SOURCENAME_PROP:    return "sourcename" ; default : return "unknown property"; }
case  TYPE_PROP: return "typeof";
 case SOURCES_NAME_return "sourcename";
 case CASSOURCENAME_PROP:    return "sourcename";
 case CASEARRAY_OR_SOURCENAME_PROP:    return "sourcename";
 case TYPE_PROP;
case SOURCENAME_PROP:    return "sourcename" or "sourcetype";
 case CASEARRAY_AND_SOURCENAME_PROP:    return "sourcename";
case  CASE_PROPS:
 case SOURCNAME:
 case PROPS: return "properties;
case SOURCENAME_PROP:    return "sourcename" ; default : return "unknown type" ; }
 case CAS_SOURCENAME_PROP:    return "sourcename";
 case SCNAME: #"sourcename";
 case SOURCE_NAME_TYPE:
 case SOURRCES:
 return "case";
 return "casearray"; case SOURCE_PROP: return "src";
 case SVN:return "sourcename";
case SOURCENAME_PROP:    return "sourcename" case case PROP:
 case CASEDSOURCENAME_PROP:    return "sourcename";
 case STRING_PROP: return;
 default: return "unknown_type";
case SOURCENAME_PROP:    return "sourcename" ; default : return "unknown";
case  EXTENDED_PROP: return "ext";
 return "casearray"; default: return "unknown"; return "unknown";
 case COMPOS_PROP: return "component;
 case EXTENDED_PROP: return "ext;
 return "casearray;
case  TYPE_PROP: return type;
 case PORT_PROP;
 case CASEARRAYOR_SOURCENAME_PROP:    return "sourcename";
case  CASE_TYPE_OP:
 case PROP: return "prop;
 case SOURCENAME|SOURCENAME_PROP:    return "sourcename";
 return "casearray"; case SCREEN_PROP: return "screen";
case SOURCENAME_PROP:    return "sourcename" ; default : return "Unknown property"; }
 case CASED_SOURCENAME_PROP:    return "sourcename";
 case CASESSOURCENAME_PROP:    return "sourcename";
 case SOURCE_SOURCENAME_PROP:    return "sourcename";
 case STRING_PROP: #;
case SOURCENAME_PROP:    return "sourcename" or "sourcename_default";
 case CASEARRAY2_SOURCENAME_PROP:    return "sourcename";
 return "case;
 case SPECIFICATION_PROP_NAME:
 default: return"sourcename";
 case SCNAME::"sourcename";
 case SPECIFICATION_PROP: return specification;
 return "casearray"; case SCRIPT_PROP: return script;
 case SPECIFICATION_PROP: use "specification";
case SOURCENAME_PROP:    return "sourcename" ; default : return "unknown" ; break ;
 case SCRIPT_PROP: break;
case SOURCENAME_PROP:    return "sourcename" ; default : return "" ; }
case  EXTENDED_PROP: return "extra";
 return "array";
 return "casearray"; default : return "unknown" ; break ; }
 case SPECIFICATION_PROP: case "specification";
 case "casearr;
 case CUSTOM_PROP: this is the default case case CUSTOM_PROP: this is the default case "custom";
 case PROP: return "property;
 case SURN:    return "sourcename";
 return "casearray"; case SCRIPT_PROP_NAME:
case SOURCENAME_PROP:    return "sourcename" ; default : return "unknown" ; } }
 case SPECIFICATION_PROP_TYPE:
case  CASE_PROP_TYPE:
 case "caseArray;
case SOURCENAME_PROP:    return "sourcename" case case PROPS:
 case CUSTOMEDSOURCENAME_PROP:    return "sourcename";
case  PROP_PROP: return property;
 case CUSTOM_PROP: this is the default case case CUSTOM_PROP: this is the case of the default case
 return "casearray"; case SCREEN_PROP: return "screener";
 case CUSTOM_PROP: if (CUSTOM_PROP) return "custom_props";
 case CUSTOM_PROP: : return "custom_prop"; case SCRIPT_PROP: return "script";
 return "casearray"; case SCRIPT_PROP: return "scourcename";
 default: return "unknown type;
 case SPECIFICATION_PROP: case specification;
case  PROP_PROP: return prop;
 default: return "defaults;
case SOURCENAME_PROP:    return "sourcename" ; default : return "Unknown"; }
 return "casearray"; case SCOPE_PROP: return "scope"; return "scope";
 case NAME: #"sourcename";
 case COMPOSURE_PROP: return "composedure";
 case CUSTOM_PROP: { return "custom_props"; } else { return "custom_props"; }
 case COMPOSURE_PROP: return "composecase";
 return "casearray"; case SCOPE_PROP: return "scope_props";
 return "casearray"; case SCOPE_PROP: return "scoped_props";
 case CUSTOM_PROP: this is the default case case CUSTOM_PROP: this is the default case case default:
 case PROP: return "properties;
 case CUSTOM_PROP: if (CUSTOM_PROP) then return "custom";
case SOURCENAME_PROP:    return "sourcename" or "casearray";
 case CUSTOM_PROP: { return "custom_props"; } else { return "default_props"; }
 case CUSTOM_PROP: this is the default case case CUSTOM_PROP: this is the default case case default;
 return "casearray"; case SCRIPT_PROP_TYPE:
case SOURCENAME_PROP: return "sciename";
 case CUSTOM_PROP: this is the default case case CUSTOM_PROP: this is the default case of custom properties
 case CUSTOM_PROP: if (CUSTOM_PROP) then return "custom_properties";
 case CUSTOM_PROP: if (CUSTOM_PROP) then return "custom_prop";
 case CUSTOM_PROP: { return "custom_props"; } else { return "unknown_props"; }
 case CUSTOM_PROP: if (CUSTOM_PROP) then return "custype";
case  CASE_PROP_PROPS:
 case SCRIPT_PROP: return "scripts";
case SOURCENAME_PROP:    return "sourcename" ; default : return null ; }
 return "casearray"; default : return "unknown" ; break ;
 case case_props;
case SOURCENAME_PROP:    return "sourcename" case "describe";
 case COMPOSURE_PROP: return "composedure";
 case SPECIFICATION_PROP_MAP:
case  CASE_PROP_NAME:
 return "casearray"; case COMPARISON_PROP: return "compare_to";
 case SCRIPT_PROP: #script;
case SOURCENAME_PROP:    return "sourcename" ; default : break ; } }
 case CASES_PROP_PROP: return "cases_props";
 case COMPOSURE_PROP: return "composecase";
 return "casearray"; case SCOPE_PROP: return "scoped_properties";
case SOURCENAME_PROP:    return "sourcename" ; default : return "unknown property type"; }
 case COMPOSURE_PROP: return "composeure";
case SOURCENAME_PROP:    return "sourcename" case "case";
 case COMPOSURE_PROP: return "composure";
 case CUSTOM_PROP: { return "custom_prop"; } else { return "default_prop"; }
 case SCNAME:
 case *SOURCENAME_PROP:    return "sourcename";
 return "casearray"; default : return "unknown" ; } }
case  CASE_TYPE:
 case CUSTOM_PROP: { return "custom_props"; } else { return "unknown_props"; } }
 case CASEARRAY_UNSOURCENAME_PROP:    return "sourcename";
case SOURCENAME_PROP:    return "sourcename" case CASE_PROPS:
case SOURCENAME_PROP:    return  "";
 case CUSTOM_PROP: { return "custom_prop"; } else { return "unknown_prop"; }
 case CUSTOM_PROP: { return "custom_prop"; } else { return "custom_prop"; }
 return "casearray"; case COMPOSITION_PROP: return "composed_prop";
case SOURCENAME_PROP:    return "sourcename" or "unknown_name";
 case CUSTOM_PROP: { return "custom_props"; } else { return "default_props"; } }
 return "casearray"; case COMPARISON_PROP: return "compare_type";
case SOURCENAME_PROP:    return  suffix;
 case CUSTOM_PROP: { return "custom_property"; } return "custom_property";
 case COMPOSITION_PROP: return "composedef";
 case CUSTOM_PROP: : return "custom"; default : return "unknown" ; break ; }
 case CUSTOM_PROP: { return "custom_prop"; } return "custom_prop";
 return "casearray"; case SCRIPT_PROP_KEY:
 case CUSTOM_PROP: { return "custom_properties"; } return "custom_properties";
 case COMPOSURE_PROP: return "compose_prop";
 case CUSTOM_PROP: { return "custom_props"; } else { return "custom_props"; } }
 case COMPOSURE_PROP: : return "compose_props";
 case CUSTOM_PROP: { return "custom_props"; } else { return "unknown" ; } } } }
case  TYPE_PROP: return "";
case SOURCENAME_PROP:    return "sourcename" case "customname";
 case CUSTOM_PROP: { return "custom_property"; } return "custom_property";
 return "casearray"; case SCRIPT_PROP: return "script;"
case SOURCENAME_PROP:    return "sourcename" or "no-name";
 case CUSTOM_PROP: { return "custom_prop"; } return "custom_props";
 case COMPOSURE_PROP: return "composeure";
case SOURCENAME_PROP:     return "scientificname";
case SOURCENAME_PROP: return "sucename";
case  type:
 case CUSTOM_PROP: this return "custom_property"; case SOURCE_PROP:
case SOURCENAME_PROP:    return "sourcename" ; default : break ; } } }
case SOURCENAME_PROP:    return "sourcename" case "typeof";
 case CUSTOM_PROP: { return "custom_prop"; } return "custom_prop";
 case COMPOSITION_PROP: return "compposition";
 case SPECIFICATION_PROP: case SPEC;
 case CASECASE_PROP: { return "case_case"; case CASE_PROP:
 return "casearray"; case SCREEN_PROP_PROP: return "screenprop";
 case SPECIFICATION_PROP: this return "specification"; case PROP:
case SOURCENAME_PROP: : return "source_name";
 case NAME::"sourcename";
 case CUSTOM_PROP: this return "custom"; case SCRIPT_NAME:
 case CUSTOM_PROP: { return "custom_prop"; } else { return "unknown" ; } } }
 case CUSTOM_PROP: this return "custom"; case SOURCE_NAME:
 case COMPOSURE_PROP: return "compose_type";
 case COMPOSURE_PROP: return "composed_prop";
 case COMPOSURE_PROP: return "compose_properties";
 case CUSTOM_PROP: { return "custom_prop"; } return "custom_properties";
 case COMPOSURE_PROP : return "compose_props";
 case CASECASE_PROP: : return "casecase"; case CASEPROP:
 case CUSTOM_PROP: { return "custom_property"; } return "custom_properties";
 case CUSTOM_PROP: | return "custom"; case SCRIPT_NAME:
 case CASECASE_PROP: { return "casecase"; } return "case_case";
case  CASEPROPS:
 return "casearray"; case SCREEN_PROP_PROP: return "screen_prop";
case SOURCENAME_PROP: : return "sourcedename";
 case CASECASE_PROP: : return "casecase"; case PROP:
 case SPECIFICATION_PROP: this return "specification"; case PROPS:
 case SPECIFICATION_PROP: {
 case CUSTOM_PROP: { return "custom_prop"; } else { return "default_prop"; } }
case  CASE_ANY:
 case CASECASE_PROP: { return "casecase"; case CASEPROP:
 case CUSTOM_PROP: { return "custom_property"; } else { return "custom_property"; } }
 case CUSTOM_PROP: { return "custom_prop"; } else { return "custom_prop"; } }
 case CUSTOM_PROP: : return "custom"; default : return "unknown" ; } } }
 case CASECASE_PROP: : return "casecase"; case PROPS:
 return "casearray"; case SCREEN_PROP_PROP: return "screenp";
 case SPECIFICATION_PROP: | return "specification"; case PROP:
 case CUSTOM_PROP: { return "custom_property"; } return "custom_properties";
 case COMPOSURE_PROP: : return "composed_props";
 case CASECASE_PROP: { return "casecase"; } return "default";
 case CASECASE_PROP: { return "casecase"; } return "case-case";
 case SPECIFICATION_PROP: this return "specification"; case SCRIPT:
 case CASES_PROP_PROP: return "cases_protocol";
 return "casearray"; case SCREEN_PROP_PROP: return "screenprops";
 case COMPOSURE_PROP: this return "compose_props";
 case COMPOSURE_PROP : return "compose"; case PROP:
 case COMPOSURE_PROP: : return "compose_prop";
 case SPECIFICATION_PROP: I return "specification"; case SCRIPT:
 case CASECASE_PROP: : return "casecase"; case CASE_TYPE:
 case CUSTOM_PROP: this return "custom"; default: return "unknown";
 case CASECASE_PROP: { return "casecase"; case CASE_TYPE_OP:
 case CASES_PROP_PROP: return "cases_proto";
 case COMPOSURE_PROP: : return "composed_prop";
 case CASECASE_PROP: { return "casecase"; } return "case";
 case COMPOSURE_PROP : return "compose"; case PROPS:
 case CUSTOM_PROP: { return "custom"; } return "custom";
 case CUSTOM_PROP: this return "custom"; default: return "default";
case SOURCENAME_PROP: : return "sucename";
 case COMPOSURE_PROP: : return "compose_properties";
case  "cases";
case SOURCENAME_PROP:    return  "sourcename;
 case CUSTOM_PROP: this return "custom"; default: return "unknown property";
 case CASECASE_PROP: { return "casecase"; } return "casecase" ; } ;
case SOURCENAME_PROP:    return  undefined;
case SOURCENAME_PROP:    return "sourcename" case "type";
case SOURCENAME_PROP:    return "sourcename" ; break ;
 case COMPOSURE_PROP: : return "compose_type";
 case CASECASE_PROP: { return "casecase"; } return "casecase" ; } }
 case SPECIFICATION_PROPER: {
case SOURCENAME_PROP:    return "sourcename" case "name";
 case string:
 case CUSTOM_PROP: { return "custom_prop"; } return "custom" ; }
case SOURCENAME_PROP:    return  "sourcename"; case PROPS;
 return "casearray"; case SCREEN_PROP: : return "screen" ; }
case SOURCENAME_PROP: : return "sourcedefname";
 case caseXXX;
case SOURCENAME_PROP:     return "sourcename"; case CLASS_NAME:
case SOURCENAME_PROP:     return "sourcename"; case CLASSPROP:
 case CUSTOM_PROP: { return "custom_prop"; } return "custom_props;
case  CASETYPE:
case SOURCENAME_PROP:     return "sourcename"; case CASEPROP:
 case CUSTOM_PROP: { return "custom_property"; } return "custom_property"; }
 case _SOURCENAME_PROP:    return "sourcename";
 case CUSTOM_PROP: this return "custom"; default : return "unknown"; }
 case "cases;
case SOURCENAME_PROP:    return "sourcename" or "sourcetype");
 case Symbol:
 return "array;
case  caseXXX:
case  typeof:
 case "" :"sourcename";
case SOURCENAME_PROP:    return "sourcename" ; break ; }
case SOURCENAME_PROP:     return "sourcename"; case TYPE_OP:
 case CUSTOM_PROP: { return "custom"; } return "custom;
 default: #"sourcename";
 case $SOURCENAME_PROP:    return "sourcename";
case SOURCENAME_PROP:    return  "sourcedename;
case  CUSTOM_TYPE;
 case CUSTOM_PROP: this return "custom"; default : return "unknown"; break
 case COMPOSURE_PROP: return "composecase;"
 case SELECT:return "sourcename";
 case default;
 case SYSTEM:return "sourcename";
 case COMPOSURE_PROP: return "compose_prop",
 case namespace:
 case case;
case SOURCENAME_PROP:    return  "sourcedename;"
case SOURCENAME_PROP:    return "sourcename" in case;
case SOURCENAME_PROP: : return "sourcename;
 case switch;
case SOURCENAME_PROP:    return "sourcename" + prefix;
 break;
 case type;
case  enum:
case SOURCENAME_PROP:    return  "source_name;
case SOURCENAME_PROP: : return "sourcename;"
case SOURCENAME_PROP: : return "sourcename",
 case SERVICE:    return "sourcename";
 case namespace;
 case case;
 case ignore;
case SOURCENAME_PROP:    return "sourcename" case default:
case  string:
case SOURCENAME_PROP: : return "source_name;
case  CASE:
case SOURCENAME_PROP:    return "sourcename" case "case");
 case CASE:    return "sourcename";
 case "return "sourcename";
 case case"sourcename";
 case...return "sourcename";
 case #"sourcename";
 case ""return "sourcename";
 case \"sourcename";
 case :"sourcename";
 case :return "sourcename";
case SOURCENAME_PROP : break ;
 case *return "sourcename";
 # return"sourcename";
case SOURCENAME_PROP : return;
case SOURCENAME_PROP: {}
case SOURCENAME_PROP: {
case SOURCENAME_PROP:    return "sourcename" ; }
case SOURCENAME_PROP: #
 } {
 break:
case SOURCENAME_PROP:     {};
case SOURCENAME_PROP:     {},
case SOURCENAME_PROP:     # ---
case SOURCENAME_PROP:     # ignore
case SOURCENAME_PROP:    return "sourcename"; case
case SOURCENAME_PROP:    return "sourcename"; switch
case SOURCENAME_PROP:    return "sourcename";;,
case SOURCENAME_PROP": {
 case
case SOURCENAME_PROP():    return "sourcename";
case SOURCENAME_PROP':    return "sourcename";
 }
