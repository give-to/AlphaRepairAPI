JSDocInfo jsDoc = n.getJSDocInfo();
 jsDoc= n.getJSDocInfo();
 return n.getJSDocInfo();
 n.getJSDocInfo();
 jsDoc;
 JSDoc jsDoc= n.getJSDocInfo();
JSDocInfo  jsDoc = null ;
JSDocInfo jsDoc = n. getJsDocInfo ( ) ;
JSDocInfo  jsDoc ;
 JSDocInfo jsDoc.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(); if (jsDoc == null)
JSDocInfo jsDoc = n.getJSDocInfo(); if (jsDoc) {
 JSDocInfo jsDoc=getJSDocInfo();
 JSDoc jsDoc;
JSDocInfo jsDoc = n.getJSDocInfo(); if ( jsDoc == null ) {
JSDocInfo  jsDoc = n. getParent ( ) ;
 String jsDoc = n.getJSDocInfo();
 JSDoc jsDoc = n. getJsDocInfo ( ) ;
 Node jsDoc= n.getJSDocInfo();
 Node jsDoc = n.getParent();
 String jsDoc = null();
 String jsDoc = n.getString();
 Node jsDoc = n.getJsDocInfo();
 JSDoc jsDoc = n. getParent ( ) ;
JSDocInfo  jsDoc = n. getInfo ( ) ;
 jsDoc = n. getJsDoc ( );
 Node jsDoc = n.getJsDoc(();
 String jsDoc = n.getJsDoc();
 String jsDoc = n.getJsDocInfo();
 JSDoc jsDoc = null ; jsDoc= n.getJSDocInfo();
 String jsDoc=getJSDocInfo();
 JSDoc jsDoc = n. getJsDocInfo(); if ( jsDoc ) {
 jsDoc = n. getJsDocInfo ( ) ;
 String jsDoc = n.text();
 JSDoc jsDoc = null ; if ( n!= null ) {
 JSDocInfo jsDoc = (Node)n.getJSDocInfo();
 JSDocInfo jsDoc null;
JSDocInfo jsDoc = n.getJSDocInfo() if (jsDoc) {
 JSDoc jsDoc = null ; n = n.getJSDocInfo();
 JSDocInfo jsDoc = *n.getJSDocInfo();
JSDocInfo  jsDoc
JSDocInfo jsDoc = n.getJsDocInfo(); if (debug) {
 String jsDoc = n.getJSDoc();
 JSDoc jsDoc = (JSDoc)n.getJSDocInfo();
 JSDocInfo jsDoc ; jsDoc= n.getJSDocInfo();
 JSDoc jsDoc = n.getParent().getJSDocInfo();
 Node jsDoc = n.getJsDoc();
 String jsDoc = n.getJsDoc(();
 Node jsDoc = n.getParent(();
 JSDoc jsDoc = n. getJsDocInfo(); if ( jsDoc == null )
 String jsDoc;
 JSDoc jsDoc = n. getJsDocInfo(); if (n) {
 JSDocInfo jsDoc = (String)n.getJSDocInfo();
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) {
 Node jsDoc = n.getFirstChild();
 String jsDoc = n.value();
 JSDocInfo jsDoc = n.parent.getJSDocInfo();
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null }
JSDocInfo jsDoc  = n. getJsDoc ( ) ;
JSDocInfo jsDoc = n.getJSDocInfo(); if (n) {
JSDocInfo jsDoc = n.getJSDocInfo() if (jsDoc == null)
 String jsDoc = n.getText();
JSDocInfo jsDoc = n.getJsDocInfo(); if (n) {
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return ; }
 if (n!= null) {
 JSDoc jsDoc = n. getJsDoc ( ) ;
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } else { return null ; }
 jsDoc = n. getJsDocInfo ( ) ; if ( jsDoc ) {
JSDocInfo jsDoc = n.getJSDocInfo(); if (jsDoc == null) { final
 if ( n. isFunction ( ) ) { jsDoc = n. getJsDocInfo(); } else {
 JSDoc jsDoc ; JSDoc jsDoc= n.getJSDocInfo();
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null ;
 if ( n. isFunction ( ) ) { return n. getJsDocInfo(); }
 jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return jsDoc ; }
 JSDocInfo jsdocInfo= n.getJSDocInfo();
 String jsDoc.getJSDocInfo();
 JSDocInfo js = n.getJSDocInfo();
 jsDoc = n. getJsDocInfo ( ) ; } else {
 JSDocInfo=n.getJSDocInfo();
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } if ( n!= null ) {
 jsDoc = n. getJsDocInfo(); if (jsDoc == null)
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } if ( n instanceof Name ) {
 JSDoc jsDoc = null ; if ( n instanceof Name ) {
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) }
 Node jsDoc = getFunction(n);
 JSDoc jsDoc = n. getJsDocInfo(); if (debug) {
 return n. getJSDocInfo(); } private
 JSDocInfo jsDocInfo= n.getJSDocInfo();
JSDocInfo  jsDoc = n. getTree ( ) ;
JSDocInfo jsDoc = n.getJSDocInfo() if (jsDoc == null) {
 if (jsDoc == null) {
 JSDoc jsDoc = n. parent ( );
 JSDocDoc= n.getJSDocInfo();
 String jsDoc = n.getContent();
 Node jsDoc=getJSDocInfo();
JSDocInfo jsDoc = n.getJsDocInfo(); while (true) {
 if ( n. isFunction ( ) ) { jsDoc = n. getJsDocInfo ( ) ;
 if ( n instanceof Function ) { return n. getJsDocInfo(); }
 JSDoc jsDoc = n. getTree ( ) ;
 Node jsDoc;
JSDocInfo jsDoc = n.getJSDocInfo(true); if (jsDoc == null) {
 JSDoc jsDoc = n ; n = n.getJSDocInfo();
 JSDoc jsDoc = null ; Node jsDoc= n.getJSDocInfo();
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null ; } else {
JSDocInfo jsDoc  = null ; if ( n!= null ) {
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } else { return n. parent ; }
 jsDoc = null ; JSDocInfo info= n.getJSDocInfo();
 Node jsDoc = getJsDoc(n);
 JSDoc jsDoc = null ; Node gramps;
JSDocInfo jsDoc =  null ; if ( jsDoc == null ) {
 JSDoc jsDoc = null ; Node parent;
 Node jsDoc = n.getJSDoc);
 if ( n. isFunction ( ) ) { return n. getJsDocInfo(); } else {
JSDocInfo  jsDoc = n. clone ( ) ;
JSDocInfo jsDoc = n.getJsDocInfo(); if (true) {
 JSDoc jsDoc = getFunction(n);
JSDocInfo jsDoc = n.getJSDocInfo(); final
 if ( n. isFunction ( ) ) { jsDoc = n. getJsDocInfo ( ) ; } else { return null ; }
 var jsDoc = n. getJsDocInfo(); if (jsDoc)
 JSDocInfo jsDoc = this.n.getJSDocInfo();
 if ( n. getType ( ) == Token. FUNCTION ) { return n. getJsDocInfo ( ) }
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ;
 jsDoc = n. getText ( ) ;
 JSDoc jsDoc = n.jsDoc;
 JSSDocInfo jsDoc;
 String jsDoc = n.getValue();
 JSDocInfo jsDoc = n.value.getJSDocInfo();
 JSDoc jsDoc = n. getJsDocInfo ( ) ; } else {
 if ( n instanceof Function ) { return n. getJsDocInfo ( ) }
 String jsDoc = n.getTextContent();
 JSDocInfo jsDoc = null ;jsDoc = n.getJSDocInfo();
 JSDoc = n.getJSDocInfo();
 JSDoc jsDoc = n. getJsDocInfo ( ) ; if (n)
JSDocInfo jsDoc = n. getJSDocInfo ( null ) ;
JSDocInfo jsDoc = n.getJSDocInfo(true); if (jsDoc == null)
 jsDoc = n. getString ( );
 String jsDoc = null ; jsDoc = n.getJSDocInfo();
 JSDoc jsDoc = n.getParent.getJSDocInfo();
 String jsDoc = n.getString(();
 return n. getJsDocInfo(); } private
 JSDoc jsDoc = n.getParent(();
 String jsDoc = getDescription();
JSDocInfo  jsDoc = n. info ( ) ;
 var jsDoc = n. getJSDocInfo ( ) ;
JSDocInfo jsDoc = n.getJSDocInfo(false); if (jsDoc == null) {
 JSDocInfo jsDoc = ngetJSDocInfo();
JSDocInfo  jsDoc = n. getNode ( ) ;
 JSDoc jsDoc = null ; while ( ) {
 if ( n. getType ( ) == Token. FUNCTION ) { return n. getJsDocInfo ( ) ;
 JSDoc jsDoc = null ; JSDoc info= n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(); if (jsDoc == null) return ;
JSDocInfo jsDoc = n.getJsDocInfo(); if (null) {
 if ( n. isFunction ( ) ) { jsDoc = n. getJsDocInfo ( ) ; } else { return null ;
 JSDocInfo jsDoc = -n.getJSDocInfo();
 JSDocInfo jsDoc == n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(); if (jsDoc == null) { {
 JSDoc jsDoc = n.doc;
 return n. getJsDocInfo(); }
 if ( n. isFunction ( ) ) { return n. jsDoc ; }
JSDocInfo jsDoc = n.getJSDocInfo(); } else {
 String jsDoc = null ; JSDoc jsDoc= n.getJSDocInfo();
 Node jsDoc = (Node) n);
 JSDoc jsDoc = n.getJsDoc;
 JSDocInfo jsDoc = n*.getJSDocInfo();
 JSDocInfo jsDoc *= n.getJSDocInfo();
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null };
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } else { return null ; } } private
JSDocInfo jsDoc = n.getJSDocInfo(); while ( n!= null ) {
 JSDocInfo doc = n.getJSDocInfo();
 String jsDoc = n.getParent().getJSDocInfo();
 String jsDoc = null);
 if ( n instanceof Function ) { return n. jsDoc ; } else {
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return ;
 JSDocInfo jsDoc = null;n.getJSDocInfo();
JSDocInfo jsDoc = n. getJSDocInfo ( false ) ;
 JSDoc jsDoc = null ; JSDoc doc= n.getJSDocInfo();
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null) { return };
 JSSDocInfo jsDoc = null;
JSDocInfo jsDoc = n.getJSDocInfo(); while ( jsDoc == null ) {
 return n. getJSDocInfo ( ) ;
JSDocInfo  jsDoc = null ; if ( n ) {
 if ( n. isFunction ( ) ) { jsDoc = n. getJsDocInfo ( ) ; } else { return null }
 JSDoc jsDoc = n. getJsDocInfo(); {
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null) { return }
 return n. getJsDocInfo ( ) ;
 JSDoc jsDoc = n. parentJSDoc;
 if ( n instanceof Function ) { return n. getJsDocInfo ( ) ;
 String jsDoc = n.string();
 JSDoc jsDoc = n.parent.getJSDocInfo();
 JSDocInfo jsDoc = n1.getJSDocInfo();
 JSDocInfo jsDoc = n2.getJSDocInfo();
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } return null ; } private static
 jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { final
 JSDoc jsDoc = JSDocInfo_n.getJSDocInfo();
 JSDocInfo jsDoc_= n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(true); if (jsDoc) {
JSDocInfo jsDoc = n.getJSDocInfo(); while (true) {
 JSDocInfo jsDoc = _n.getJSDocInfo();
 Node jsDoc = n.get();
 Node jsDoc.getJSDocInfo();
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } } private
 return getFunction(n);
JSDocInfo  jsDoc = null ; try {
 Node jsDoc = n.next();
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } return null ; } private
 String jsDoc = getString(n);
 JSDoc jsDoc = (JSDoc) *n.getJSDocInfo();
JSDocInfo jsDoc = n.getJsDocInfo(); final
 JSDoc jsDoc = (Node)n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo() ; if ( jsDoc!= null ) {
 JSDoc jsDoc = n.parent().getJSDocInfo();
 if ( n instanceof Func ) { return n. jsDoc ; }
 jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null ; } private
 Node jsDoc = null();
 if ( n instanceof Function ) { return n. jsDoc ; }
JSDocInfo jsDoc = n.getJsDocInfo(); while (true)
 JSSDocInfo jsDoc null;
 JSDoc jsDoc = n. getJsDocInfo(); if (jsDoc == null){
JSDocInfo jsDoc = n.getJSDocInfo(); if (debug) {
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } else { return null ; } } {
 if (n!= null)
 Node jsDoc = n();
 JSDocInfo jsDoc =;
 String jsDoc = "(");
 JSDocInfo n.getJSDocInfo();
 if ( n instanceof Function ) { return n. getJsDocInfo(); } private
JSDocInfo jsDoc = n.getJSDocInfo(); {
 JSDoc jsDoc = null;
JSDocInfo jsDoc = n.getJSDocInfo( if (jsDoc) {
 Node jsDoc = node(n);
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } else { return null ; } }
 return n. getJSDocInfo ( ) ; }
 jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null ; } }
 JSDocInfo jsDoc = functionNode.getJSDocInfo();
 String jsDoc = inspect(n);
 String jsDoc = getComment();
 if ( n. isFunction ( ) ) { return n. getJsDocInfo(); } private
JSDocInfo  jsDoc = n. jsDoc ;
JSDocInfo jsDoc  = this. getJsDocInfo ( ) ;
 if ( n. isFunction ( ) ) { return n. getParent(); } private
 jsDoc(n);
 String jsDoc = getDoc();
 JSDoc jsDoc = (String)n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(); if (jsDoc == null) { }
JSDocInfo jsDoc = n.getJSDocInfo(); if (n!= null) {
 String jsDoc = (String) n);
JSDocInfo jsDoc = n.getJSDocInfo( false); if (jsDoc == null)
 JSDoc jsDoc = get(n);
 if ( n instanceof Function ) { return n ; }
 String jsDoc = getText();
 if (n) {
 JSDocInfo js = null;
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } return null ; } private *
 JSDoc jsDoc = n.value.getJSDocInfo();
 if ( n instanceof Function ) { return n. jsDocInfo ; }
 JSSDocInfo jsDoc = n.getJSDocInfo();
 jsDoc = n. getJsDocInfo(); if (jsDoc == null){
 return n. getJSDocInfo ( ) ; } private static
JSDocInfo jsDoc =  n. getJsDocInfo ( false ) ;
JSDocInfo jsDoc = n.getJSDocInfo(); if (true) {
 if (n instanceof Function) {
JSDocInfo jsDoc = n.getJSDocInfo() ; Node gramps = null ;
JSDocInfo jsDoc = n.getJSDocInfo(); if (jsDoc!= null) { final
 JSDocInfo _jsDoc = n.getJSDocInfo();
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } else { return n ; } }
 JSDoc jsDoc = n.value;
 JSDocInfo jsdocInfo_= n.getJSDocInfo();
 return n. getJSDocInfo(); } { private
JSDocInfo jsDoc  = n. getJsDocInfo(); {
 JSSDocInfo jsDoc = null ;jsDoc = n.getJSDocInfo();
 String jsDoc = null;
 String jsDoc = getString();
 JSDoc jsDoc = n. getJsDocInfo(); final
 Node jsDoc = get(n);
 JSDocInfo &jsDoc = n.getJSDocInfo();
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null ; } else { final
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null ; } final
 return n. getParent(); } private
 JSDoc jsDoc = *n.getJSDocInfo();
 JSDocInfo jsDocjsDoc = n.getJSDocInfo();
 return n. getJsDocInfo(); private
 jsDoc = n. getJsDocInfo(); }
 String jsDoc = ""();
 return n. getJSDocInfo(); } public
 if ( n. isFunction ( ) ) { jsDoc = n. getJsDocInfo ( ) ; } else { final
 JSDoc jsDoc = n. getJsDocInfo(); }
 JSDoc jsDoc = null);
 JSDoc jsDoc = n.obj;
 JSDoc jsDoc = n. getJsDocInfo ( ) ; if (n).
JSDocInfo jsDoc = n.getJSDocInfo() if (jsDoc == null) { final
 if ( n. isFunction ( ) ) { jsDoc = n. getJsDocInfo ( ) ; } else
 if ( n instanceof Function ) { return n. jsDoc ;
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } return null ; }
 String jsDoc = "function(");
 JSDocJsDoc = n.getJSDocInfo();
 if ( n. isFunction ( ) ) { return n. getJsDocInfo(); } final
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } else { final
 jsDoc = n. getJsDocInfo ( ) ; } } {
 JSDocInfo jsdocjsDoc = n.getJSDocInfo();
 jsDoc = null;
JSDocInfo jsDoc = n. parent ;
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null) { final
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } return null ; } } {
 JSDocInfo jSDocInfo= n.getJSDocInfo();
 JSDocInfo jsDoc = n= n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo() if (n) {
 return n. getJsDocInfo ( ) ; } private static
 if ( n instanceof Function ) { return n. jsDoc }
 if ( n instanceof Function ) { return n. getJsDocInfo(); } final
JSDocInfo jsDoc = n.getJSDocInfo(); ;
 JSSDoc jsDoc= n.getJSDocInfo();
 String jsDoc = get(n);
 Node n.getParent();
 Node jsDoc = null);
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null ; } { final
 JSDoc doc= n.getJSDocInfo();
 JSDoc info = n.getJSDocInfo();
 var jsDoc = n. getJsDocInfo(); if ( jsDoc == null ) { return null ; } } else { final
 return n. getParent ( ) ;
 Node parent = n. parent ;
 return n. getJSDocInfo(); private
 return n. getJSDocInfo ( ) ; } private *
 if ( n instanceof Function ) { return n. jsdoc ; }
JSDocInfo jsDoc = n.getJSDocInfo(); if (null) {
JSDocInfo jsDoc = n.getJSDocInfo( ) ; Node gramps = n ;
JSDocInfo jsDoc = n.getJSDocInfo(); } } {
 JSDoc jsDoc = null ; JSDoc _jsDoc = n.getJSDocInfo();
 jsDoc = n. getJsDocInfo ( ) ; } }
 JSDocInfo jsdoc_jsDoc = n.getJSDocInfo();
 if ( n instanceof Function ) { return n. jsDoc ; } private
JSDocInfo jsDoc = n.getJSDocInfo(); while (true)
 JSDocInfo n.jsDoc = n.getJSDocInfo();
 return n. getJSDocInfo ( ) }
 if (jsDoc) {
JSDocInfo jsDoc = n.getJSDocInfo(); } {
JSDocInfo jsDoc = n.getJSDocInfo(); while (jsDoc) {
 return n. getJsDocInfo(); } public
 JSDoc jsDoc = n.node.getJSDocInfo();
JSDocInfo jsDoc = n. getValue ( ) ;
 JSDocInfo jsDoc = null ; final
 JSDoc jsDoc = n. getJsDocInfo ( ) ; } {
 String jsDoc = (null);
 JSDocInfo jsDoc =.getJSDocInfo();
 if ( n instanceof Func ) { return n. jsDoc ; } private
 JSDoc js;
 jsDoc = n. getJsDocInfo ( ) ; } private
 JSDoc jsDoc = n. getJsDocInfo ( ) ; } private
 return n. getJsDocInfo ( ) ; } private JSDocInfo parent ; private
 jsDoc = n. getJsDocInfo(); {
 return n. getJsDocInfo(); };
 JSDocInfo jsDoc = info= n.getJSDocInfo();
 JSDoc jsDoc = this.n.getJSDocInfo();
 return n. getJsDocInfo ( ) ; } private *
 if ( n. isFunction ( ) ) { return n. getJsDocInfo ( ) ; } } { private
JSDocInfo jsDoc = n.getJSDocInfo(); } } ;
 JSDocInfo jsdoc.jsDoc = n.getJSDocInfo();
 if ( n instanceof Function ) { return n. getJsDocInfo(); private
JSDocInfo jsDoc = n. info ;
 JSDoc jsDoc = n. getParent ( ) {
 String jsDoc =();
JSDocInfo jsDoc = n.getJSDocInfo(); } private
 JSDocInfo *jsDoc = n.getJSDocInfo();
 JSDoc jsDoc = n.jsdoc;
 jsDoc = get(n);
 var jsDoc = n. getJsDocInfo(); if (jsDoc);
 return n. getJSDocInfo ( ) ; } *
 JSDocInfo parent.jsDoc = n.getJSDocInfo();
 JSDoc jsDoc = n. jsDoc();
 return n. getJSDocInfo(); } { public
 return n. getJsDocInfo(); public
 StringBuilder jsDoc=n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(); { final
 JS jsDoc = n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(); } } else {
 var jsDoc = null);
 JSDoc jsDoc = null ; try {jsDoc = n.getJSDocInfo();
JSDocInfo jsDoc = n. getJSDocInfo ( ) ; }
 assert(true);
 JSDoc jsDoc = n. getJsDocInfo ( ) ; { final
 return n. getParent(); }
JSDocInfo  jsDoc = n. jsdoc ;
 JSDoc jsDoc = null;n.getJSDocInfo();
 JSDoc js= n.getJSDocInfo();
 JSDocInfo(n.getJSDocInfo();
 jsDoc = null();
JSDocInfo  jsDoc = n. getParent(); {
JSDocInfo jsDoc = n.getJSDocInfo( ). getInfo ( ) ;
 var jsDoc = null ;
JSDocInfo  jsDoc = n. getInfo(); {
 JSDoc jsDoc = n. jsDoc ; final
 JSDoc jsDoc = n2.getJSDocInfo();
 jsDoc = (String)n.getJSDocInfo();
 n.init();
 JSDocInfo null;jsDoc = n.getJSDocInfo();
 JSDoc jsDoc = functionNode.getJSDocInfo();
 JSDoc jsDoc = null ; JSDoc parentjsDoc = n.getJSDocInfo();
 n.check();
JSDocInfo jsDoc = n.getJSDocInfo() if (true) {
 var jsDoc = n. getJSDocInfo(); var
JSDocInfo jsDoc = n.getJSDocInfo(); { private
 JSDocInfo n,jsDoc = n.getJSDocInfo();
 String jsDoc = ngetJSDocInfo();
 Node gramps = null ;
JSDocInfo jsDoc = n.getJSDocInfo(); if (debug)
 JSDocJsDoc;
 var jsDoc;
JSDocInfo jsDoc = n. getJsDocInfo ( ) ; } {
 JSDocInfo jsdoc,jsDoc = n.getJSDocInfo();
 String(jsDoc);
 JSDocInfo jsdoc;jsDoc = n.getJSDocInfo();
 n.next();
 n=n.getJSDocInfo();
JSDocInfo  jsDoc = n. getInfo(); final
 JSDoc doc;
 return n. getParent(); } public
 n.break();
 var jsDoc=getJSDocInfo();
JSDocInfo  jsDoc = n. jsDoc();
 var jsDoc.getJSDocInfo();
 final JSDoc jsDoc= n.getJSDocInfo();
 var jsDoc =();
 return n. getJSDocInfo ( ) ; } else { *
 JSdoc jsDoc;
 JSDocInfo n_jsDoc = n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(); if (parent)
 Object jsDoc = n.getJSDocInfo();
 return n. getJSDocInfo ( ) ; } } ; private
 if ( n instanceof Function ) { return n ; } else { *
JSDocInfo jsDoc = n.getJSDocInfo() ; try {
 Node n = n();
 JSDoc info = null;
 Object jsDoc=getJSDocInfo();
 if (debug) {
JSDocInfo  jsDoc = null ; try { final
 return function(n);
 jsDoc = n.content;
 Node parent = n ;
JSDocInfo jsDoc = n. getJsDocInfo ( ) ; }
 n = n();
 String doc = n.getJSDocInfo();
 var jsDoc = n.getJSDocInfo();
 assertNode(n);
 jsDoc = n.value;
JSDocInfo jsDoc = n.getJSDocInfo() || null ;
JSDocInfo jsDoc = n. value ;
JSDocInfo jsDoc = n.getJSDocInfo() ; if (n)
 check(n);
 jsDoc = n.parent.getJSDocInfo();
JSDocInfo  jsDoc = null ; { final
JSDocInfo  jsDoc = null ; {
 return n. getJsDocInfo ( ).jsDoc = n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo( ) ; while ( ) {
 assertFunction(n);
JSDocInfo jsDoc = n.getJsDoc(); final
JSDocInfo jsDoc = n.getParentInfo(); final
 var jsDoc null();
 assert(n);
JSDocInfo jsDoc = n.getJSDocInfo(...) ;
 JS doc = n.getJSDocInfo();
 if (n)
JSDocInfo jsDoc = n.getJsDoc(); {
JSDocInfo jsDoc = n.getParentInfo(); {
JSDocInfo jsDoc = n. node ;
 JSSTocInfo jsDoc= n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo() ; try { final
 JSdocInfojsDoc = n.getJSDocInfo();
 return null ; } private
JSDocInfo jsDoc = n. doc ;
 final JSDoc js= n.getJSDocInfo();
 JSSDocInfo &jsDoc = n.getJSDocInfo();
JSDocInfo jsDoc = n.getParent(); final
 JSSDocInfo _jsDoc = n.getJSDocInfo();
JSDocInfo jsDoc = n.doc();
JSDocInfo jsDoc = n.getJSDocInfo( ) ; Node gramps ; {
 js=n.getJSDocInfo();
 assert(false);
JSDocInfo jsDoc = n.getJSDocInfo(true); {
JSDocInfo jsDoc = n.getJSDocInfo() || null ; final
 jsDoc n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(true);
JSDocInfo jsDoc = n.obj();
 Object jsDoc;
JSDocInfo  jsDoc ; final
 if (debug);
JSDocInfo jsDoc = n.getJSDocInfo( false, false ); {
 return jsDoc;
JSDocInfo  jsDoc = null
 node=n.getJSDocInfo();
JSDocInfo  jsDoc = n ;
JSDocInfo jsDoc = n.getJSDocInfo(true, false); {
JSDocInfo jsDoc = n.getJSDocInfo(true); final
 jsDoc=jsDoc = n.getJSDocInfo();
JSDocInfo jsDoc = n.comment();
 String js = n.getJSDocInfo();
 if (debug)
JSDocInfo  jsDoc ; {
 JSDoc>jsDoc = n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo(false); {
 doc=n.getJSDocInfo();
 JSDoc;
JSDocInfo jsDoc = n.getJSDocInfo( false, false ); ;
 if (!);
JSDocInfo jsDoc = n.getJSDocInfo(true, false); final
 String js();
JSDocInfo jsDoc = n.getJSDocInfo(false); final
JSDocInfo jsDoc = n.getJSDocInfo(null); {
 Node parent();
 jsDoc := n.getJSDocInfo();
 String>jsDoc = n.getJSDocInfo();
JSDocInfo  parent ;
 assert n);
JSDocInfo  jsDoc();
JSDocInfo jsDoc = n.getJSDocInfo(true); } private
JSDocInfo jsDoc = n.getJSDocInfo(true); } {
 return null; private
 return null; }
 String _jsDoc = n.getJSDocInfo();
 if ();
JSDocInfo jsDoc = n. info ; final
 var js);
JSDocInfo jsDoc = n.getJSDocInfo() || n ;
JSDocInfo  obj ;
JSDocInfo  info ;
 String s();
JSDocInfo  null ;
JSDocInfo jsDoc = n. info ; }
 String name();
 String result();
 Node _jsDoc = n.getJSDocInfo();
 Node njsDoc = n.getJSDocInfo();
 assert n.getJSDocInfo();
 js doc;
 { * private
 String.jsDoc = n.getJSDocInfo();
JSDocInfo  jsDoc =
 JS doc;
 return this.getJSDocInfo();
 var result.getJSDocInfo();
 return fn.getJSDocInfo();
 { private
JSDocInfo jsDoc = n ; final
 try { private
 try { *
 private
 return.getJSDocInfo();
 n=getJSDocInfo();
JSDocInfo jsDoc = n ; }
 }.getJSDocInfo();
 { * public
 { * static
JSDocInfo jsDoc = n ; {
 { final
 var n.getJSDocInfo();
JSDocInfo jsDoc = n.getJSDocInfo() {};
JSDocInfo jsDoc =  undefined ;
JSDocInfo jsDoc =  null();
 final
 sDoc= n.getJSDocInfo();
JSDocInfo jsDoc := n.getJSDocInfo();
JSDocInfo jsDoc; n.getJSDocInfo();
