 break;
 break;
 rule = selectNumberRule(Calendar.DAY_OF_DAY, tokenLen);
 rule = selectNumberRule(Calendar.DAY_OF_WEEK, tokenLen);
 rule = selectNumberRule(Calendar.DAY_OF_DAY, rule);
 rule = selectNumberRule(Calendar.DAY, tokenLen);
 rule = tokenLen ;
 rule = selectNumberRule(Calendar.DAY_OF_WEEK);
 rule = selectNumberRule(Calendar.DAY_OF_DAY);
 rule = selectNumberRule(Calendar.DAY_OF_WEEK, rule);
break; case 'F':
 tokenLen++; break;
 rule = tokenLen ; break;
 rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen);
 rule = new TextField(Calendar.DAY_OF_DAY, tokenLen);
 rule = selectNumberRule(Calendar.DAY_OF_WEEK, 0);
 rule = selectNumberRule(calendar.DAY, tokenLen);
 rule = selectNumberRule(tokenLen); break;
 rule = selectNumberRule(Calendar.DAY_OF_DAY, 0);
 rule = selectNumberRule(Calendar.DAY_OF_WEEK1);
 rule = new TextField(Calendar.DAY_OF_DAY, rule);
 rule = selectNumberRule(Calendar.DAY_OF_WEEK,);
 break; break;
break; case 'dF':
 rule = selectNumberRule(', tokenLen);
 rule = selectNumberRule(, tokenLen);
 rule = selectNumberRule(calendar.DAY_OF_DAY);
 rule = selectNumberRule(Calendar.DAY_OF_MONTH);
 rule = selectNumberRule(tokenLen);
 rule = selectNumberRule(calendar.DAY_OF_WEEK);
 rule = selectNumberRule(Calendar.DAY, rule);
 rule. setText ( tokenLen ) ; break;
 rule = selectNumberRule(calendar.DAY, rule);
 rule = rule. substring ( 0, tokenLen ) ;
 rule = selectNumberRule(Calendar.DAY_OF_WEEK, (tokenLen));
 rule = selectNumberRule(Calendar.DAY_OF_DAY, tokenLen); }
 rule = selectNumberRule(Calendar.DAY_OF_WEEK, tokenLen); }
 break; default:
 rule = selectNumberRule(Rule.DAY, tokenLen);
break; case 'F': break;
 rule = selectNumberRule(rule, tokenLen);
 rule = selectNumberRule(Rule.DAY_OF_DAY);
 rule = new TextField (Calendar.DAY_OF_MONTH, tokenLen); break;
 rule. set ( tokenLen ) ; break;
 rule = rule. trim ( ) ; break;
 rule = rule. trim ( ) ;
 rule = new TextField (Calendar.DAY_OF_MONTH, rule, tokenLen);
 rule = rule. substring ( 0, tokenLen));
 tokenLen++;
 rule = new TextField (Calendar.DAY_OF_MONTH, day, tokenLen);
 rule = selectNumberRule(Calendar.WEEK, tokenLen);
 rule = selectNumberRule(day, tokenLen);
 rule = selectNumberRule(Rule, tokenLen);
 rule = selectNumberRule(Calendar.WEEK);
 rule = new WeekField ( tokenLen ) ;
 rule = new TextField ( 'DAY_OF_WEEK', weekdays, tokenLen);
 rule = selectNumberRule(E, tokenLen);
 rule. setText ( tokenLen ) ;
 rule = new MonthField ( tokenLen); break;
 rule = new Day ( tokenLen);
 rule += tokenLen ; break;
 rule = selectNumberRule(Calendar.DAY_OF_WEEK, tokenLen);;
 rule = selectNumberRule(Calendar.WEEK_OF_DAY);
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.DAY_OF_MONTH);
 rule = selectNumberRule(Calendar.DAY_OF_WEEK, tokenLen));
 rule = selectNumberRule(Calendar.DAY_OF_Week);
 rule = selectNumberRule, tokenLen); break;
 break ; case 'F': new day in month (number) rule = selectNumberRule(Calendar.DAY_OF_MONTH);
break; case 'DF':
break; case 'f':
 rule = selectNumberRule(Calendar.DAYTIME, tokenLen);
 rule = rule. toString ( ) ;
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.DAY, tokenLen);
 rule = new TextField(Calendar.DAY_OF_DAY, tokenLen); }
 rule = new MonthField ( ) ; break;
 break ; case 'D': new day in month (number) rule = selectNumberRule(Calendar.DAY, tokenLen);
 rule = selectNumberRule(Calendar.DAY_OF_MONTH, tokenLen); }
 rule = selectNumberRule(Calendar.DAYS);
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.DAY_OF_DAY);
 rule = tokenLen;
 rule = rule. replace ( ' ', ' ' ) ;
 rule = new Week ( tokenLen);
 rule = selectNumberRule(Calendar.DAY_OF_WEEK');
 rule = new WeekField ( ) ;
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.DAY_OF_MON);
 break ; case 'D': { day of month (number) rule = selectNumberRule(Calendar.DAY, tokenLen);
break; case 'D':
break; case 'D': break;
break; case F':
 tokenLen = 4;
 rule = new TextField ( 'DAY_OF_WEEK', weekdays, tokenLen));
 break ; case 'F': { day of week (number) rule = selectNumberRule(Calendar.DAY_OF_DAY);
 rule. text = tokenLen ; break;
 break ; case 'D': { day of month (number) rule = selectNumberRule(Calendar.DAY_OF_DAY);
 break ; case 'D': { day of week (number) rule = selectNumberRule(Calendar.DAY, tokenLen);
 rule = 'E' ;
 break ; case 'D': { day of month (number) rule = selectNumberRule(Calendar.DAY_OF_MON);
 rule. text ( tokenLen);
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.DAY, 1);
 break ; case 'F': new day in month (number) rule = new TextField(Calendar.DAY_OF_MONTH);
 break ; case 'D': { day in month (number) rule = selectNumberRule(DAY, tokenLen);
 break ; case 'D': { day in month (number) rule = selectNumberRule(Day, tokenLen);
 break ; case 'D': { day in month (number) rule = new TextField(Calendar.DAY_OF_MONTH);
 break ; case 'F': { day in month (number) rule = selectNumberRule(DAY, tokenLen);
break; case 'd':
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.DAY_IN_MONTH);
 break ; case 'F': if day in month (number) rule = selectNumberRule(DAY, tokenLen);
 break ; case 'F': if day in month (number) rule = selectNumberRule(Day, tokenLen);
 rule += tokenLen;
break; case 'W': break;
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.DAY, token);
 rule = rule. substring ( 0, tokenLen - 4);
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.MONTH);
 break ; case 'F': new day in month (number) rule = selectNumberRule(Calendar.DAY, 1);
 case 'F':
 rule = new Day ( ) ;
 break ; case 'F': { day in month (number) rule = selectNumberRule(Calendar.DAY, 1);
 rule. text ( ) ; break;
 rule = new Date ( ) ; break;
 rule = rule. substring ( 0, tokenLen - 4));
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.DAY, 0);
 rule = selectNumberRule(calendar.DAYS);
 break ; case 'F': { day in month (number) rule = selectNumberRule(Calendar.MONTH);
 break ; case 'F': new day in month (number) rule = selectNumberRule(Calendar.MONTH);
 rule. text ( token ) ; break;
 rule = tokenLen break;
 break ; case 'F': { day in month (number) rule = selectNumberRule(tokenLen);
 break ; case 'D': { day in month (number) rule = selectNumberRule(tokenLen);
 rule = new MonthField ( rule); break;
 rule = rule + tokenLen ; break;
 rule = selectNumber ( tokenLen); break;
 break; case 'F': new day in month (number) rule = selectNumberRule(tokenLen);
 break; switch;
 rule = rule + tokenLen ;
 tokenLen += 4;
 rule. text ( tokenLen); break;
 break ; case 'D': { day in month (number) rule = selectNumberRule(CALENDAR, tokenLen);
 break ; case 'F': { day in month (number) rule = selectNumberRule(', tokenLen);
 if (tokenLen)
 break ; case 'F': { day in month (number) rule = selectNumberRule(, tokenLen);
 break ; case 'D': { day in month (number) rule = selectNumberRule(', tokenLen);
 rule = 'D' ;
 rule = 'W' ;
 break ; case 'F': new day in month (number) rule = selectNumberRule(Calendar.DAYS);
 break ; case 'F': { day of week (number) rule = selectNumberRule(tokenLen);
 rule. text = text ; break;
 break ; case 'D': { day in month (number) rule = selectNumberRule(Calendar.DAYS);
 rule. text ( ) ;
 rule += tokenLen break;
break; case f':
 break ; case 'F': { day in month (number) rule = selectNumberRule(day, token);
 break ; case 'D': { day in month (number) rule = selectNumberRule(day, token);
 case 'D':
 tokenLen -- ; break;
 rule = 'T' ; break;
 rule. token = tokenLen;
 rule. text = text ;
 rule. text ( text ) break;
break; } break;
 switch (rule) {
 rule. text ( text); break;
 rule = rule. split ( ' ' ) ; }
break; case 'd' : {
 rule. tokenLen = 4;
 break; default:
break; case '':
 if (short) break;
 tokenLen += 2;
 rule = (text)
 case 'd':
 tokenLen = 0;
break; case 'D': break; break;
break; case 'D': case 'F':
 if (short)
break; case 'F': break; break;
break; case 'D': case F':
break; case 'D': default: break;
 tokenLen++; ; break;
break; case 'F': case 'd':
break; case 'F': {
break; case 'd': break; }
break; case 'D': wild day in month;
break; case 'F': wild day in month;
 tokenLen;
break; case 'D': wild day in month?
break; case 'D': case F:
break; case 'D': wild day in month.
break; case 'D': break; }
 tokenLen++;
break; case 'F': wild day in week;
 rule = 'F':;
 break; }
 break; }
break; case 'W': break; }
 tokenLen;
 rule++; break;
 rule = rule;
 ; break;
 break; else
 tokenLen);
break 2;
 default:
 break();
break here;
 break
 }
 break);
 break,
; switch;
