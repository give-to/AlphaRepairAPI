 DATE_DURATION.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.add(DurationFieldType.weeks());
 DATE_DURATION_types.add(DurationFieldType.weeks());
 DATE_DURATION_PES.add(DurationFieldType.weeks());
 DATE_DURATION_.add(DurationFieldType.weeks());
 DATE_DURATION_TYPE.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeksdays());
DATE_DURATION_TYPES.add(DurationFieldType.weekdays());
 DATE_DURATION.add(weeks());
 DATE.add(DurationFieldType.weeks());
 DATE_DUR.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.months());
 DATE_DURATION_TYPES.weeks());
 add(DurationFieldType.weeks());
.add(DurationFieldType.weeks());
 DATE_DURATION_typesadd(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.hours());
 DATE_DURATION(weeks());
 DATE_DURATION_add(.weeks());
 DATE_DURATION.weeks());
 DATE_DURATION.months());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days());
 DATE_DURATION.add(months());
 DATE_DURATION_TYPES.add(DurationFieldType.weekdays());
DATE_DURATION_TYPES.add(DurationFieldType());
DATE_DURATION_TYPES.add();
DATE_DURATION_TYPES.add(DurationFieldType.years());
 DATE_DURATION_TYPES.add(DurationFieldType.months());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static {
 DATE_DATE.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(weekdays());
DATE_DURATION_TYPES.add(DurationFieldType.days());
 DATE_DURATION_TYPES.add();
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days());
 DATE_DURATION_TYPEES.add(DurationFieldType.weeks());
 DATE_DURATION_TES.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.add(DurationFieldType());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days()); } static {
 DATE_DURATIONS.add(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weekdays());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static
DATE_DURATION_TYPES.add(DurationFieldType.monthdays());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); }
 DATE_DURPES.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static {
 DATE_DURATION_TYPES.add(DurationType.months());
 DATE_DURATION_TYPES.add(months());
 DATE_DURATION_TYPES.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); }
 } static { DATE_DURATION_TYPES.add(DurationFieldType.months());
 DATE_DURATION_TYPES.add(DurationFieldType.weeksdays());
 } static { DATE_DURATION_TYPES.add(DurationFieldType());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days()); }
 DATE_DURATION_TYPES.add(DurationFieldType.monthdays());
 } static { DATE_DURATION_TYPES.add(DurationFieldType); }
 DATE_DURATION_TYPES.add(DurationFieldType weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); }
 DATE_DURATION_TYPES.add(DurationFieldType.dayofweekdays());
 } static { DATE_DURATION_TYPES.add(DurationFieldType); }
 DATE_DURATIONType.weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weekdays());
 DATE_DURATION_TYPES.add(days());
 DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); } static {
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.hours());
 DATE_DURATION_TYPES.add(DurationFieldType months());
 DATE_DATES.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.addDays();
DATE_DURATION_TYPES.add(DurationFieldType.hourdays());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); }
 DATE_DURATION.add(years());
 DATE_DURATION.weekdays());
DATE_DURATION_TYPES.add(DurationFieldType.daymonths());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days()); } static
 DATE_DURATION.weekweeks());
 DATE_DURATION.monthdays());
DATE_DURATION_TYPES.add(DurationFieldType weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days); }
 DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); static {
 } static { DATE_DURATION_TYPES.add(DurationFieldType());
 DATE_DAYTYPES.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.add(DurationFieldType);
 DATE_DURATION_TYPES.add(DurationFieldType.monthdays()); } static {
 DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); static }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static {
 DATE_DURATION.dayweeks());
 DATE_DAYS.add(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType) };
 DATE_DURATION_TYPES.add(DurationFieldType.daymonths());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days(); } static {
 DATE_DURATION_TYPES.add(DurationFieldType.days());
DATE_DURATION_TYPES.add(DurationFieldType years());
 DATE_DURATION_TYPES.add(weekdays());
 DATE_DURATION_TYPES.add(DurationFieldType.hours());
 DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); static {
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); } static
 } static { DATE_DURATION_TYPES.add(DurationFieldType.monthdays()); }
 } static { DATE_DURATION_TYPES };
 DATE_DURATION.add(years));
DATE_DURATION_TYPES.add(DurationType.months());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.daymonths());
 DATE_DURATION_TYPES.add(durationFieldType());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { static {
DATE_DURATION_TYPES.add(years());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.daydays());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static {
 DATE_DURATION_Types.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.add(DurationFieldType.monthdays()); static }
 DATE_DURATION_TYPES.add(DurationFieldType.weekdays); }
 DATE_DURATION.add(years);
 DATE_DURATION.add(months));
 DATE_DURATION_TYPES.add(DurationFieldType.years());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.hours());
 DATE_DURATION_add(weeks());
 }.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.add(DurationFieldType.dayofweek());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { static {
 DATE_DURATION_TYPES.add(weeks());
 DATE_DURATION_SET.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.add(DurationType.hours());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.hourdays()); }
 DATE_TYPE.add(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType); };
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks(); } static {
 DATE_DURATION_TYPES.add(years());
 DATE_DURATION.monthweeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days(); } static
 } static { DATE_DURATION_TYPES }
 DATE_DURATION_addAll(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.months()); } static {
 } static { DATE_DURATION_TYPES.add(DurationFieldType.daydays()); }
 DATE_DURATION_TYPES.add(DurationFieldType years());
 DATE_DURATION_TYPES.add(DurationFieldType);
DATE_DURATION_TYPES.add(DurationFieldType.monthyears());
 DATE_DURATION_TYPES.add(DurationFieldType.());
 DATE_DURATION_TYPES.add(DurationFieldType.hourdays()); }
 DATE_DURATION_TYPES.add(DurationFieldType.monthdays()); }
 DATE_DURATION_type.weekweeks());
 } static { DATE_DURATION_TYPES = new Set();
 DATE_DURARES.add(DurationFieldType.weeks());
 DATE_DURATION_add(dayweeks());
 DATE_DURATE(DurationFieldType.weeks());
 DATE_DURATION_TYPES.add(durationFieldType());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static static {
 DATE_DURATION_types.getweeks());
 DATE_DURATION.minutes());
 DATE_DURATION_add(months());
 DATE_DURATION_STRES.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.addHours();
 } static { DATE_DURATION_TYPES.add(days()); }
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { } static {
 DATE_DURATION_SERES.add(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES.add(durationFieldType());
 DATE_DURATION_MAP.add(DurationFieldType.weeks());
 DATE_DURATION.add(days());
 DATE_DURATION_PHES.add(DurationFieldType.weeks());
 DATE_DURATES.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES.add(Days());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days()); } static
 DATE_DURATION_TYPES.add(dayOfMonth());
 } static { DATE_DURATION_TYPES.add(days()); }
 DATE_DURATION_TYPES.add(days);
 } static { DATE_DURATION_TYPES } static {
 DATE_DURATION_add(weekweeks());
 DATE_DURATION.add(months);
 DATE_DURATION_TYPEPadd(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES = new Set();
 DATE_DURATION_TYPES.addYears();
DATE_DURATION_TYPES.add(days());
 DATE_DURATION_types.add.weeks());
 DATE_DURATION_types.(weeks());
DATE_DURATION_TYPES.add(DurationFieldType.dayofweek());
DATE_DURATION_TYPES.add(DurationFieldType.dayofweekdays());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); };
 } static { DATE_DURATION_TYPES.add(dayOfMonth());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { } static {
 } static { DATE_DURATION_TYPES = new Set(); static {
DATE_DURATION_TYPES.add(DurationFieldType.months);
 DATE_DURATION_type(.weeks());
 DATE_DURATION.microweeks());
 } static {
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days(); } static { static {
 } static { DATE_DURATION_TYPES. clear ( ) ; }
 DATE_DURATION.add(hours());
 DATE_DURATION(.weeks());
 DATE_DURATION(Duration.weeks());
 (DurationFieldType.weeks());
 DATE_DURATION.years());
DATE_DURATION_TYPES.add(months());
 DATE_Durations.add(DurationFieldType.weeks());
 DATE_DURITES.add(DurationFieldType.weeks());
 DATE.addAll(DurationFieldType.weeks());
 DATE_DURATION_types(.weeks());
 } private final int DAY_OF_MONTH;
 DATE_DURATION(new Date());
 DATE_DURATION(".weeks());
 DATE_DURATION_TYPES.add
 DATE_DURATION_TYPE.weeks());
 } static { DATE_DURATION_TYPES = new Set(); static }
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days(); } static { } static {
 DATE_DURATION_TYpES.add(DurationFieldType());
 DATE_DURATION.(weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { static
 DATE_DURATION_TYPES.add(weekdays);
 } DATE.add(DurationFieldType.weeks());
 DATE_DURATION.add(Years);
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { }
 } static { DATE_DURATION_TYPES.add(days()); } static
 DATE_DURATION_*.add(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES
 DATE_DURATION_TYPadd(DurationFieldType.weeks());
 DATE_DURATION.days());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { static
 DATE_DURATION.add(days));
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static final static {
 DATE_DURATION_TYPES.add(daydays());
DATE_DURATION_TYPES.addDays();
DATE_DURATION_TYPES.add(Years());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { static {}
 } static final int DAY_OF_MONTH;
 } static { DATE_DURATION_TYPES.add(days); }
 DATE_DURATION_typES.weeks());
 DATE_DURATION_TYPES.add(weekdays);
 DATE_DURATION.hours());
 DATE_DURATION_TYPES =
 DATE_DURATION_TYPES.add(monthdays());
 DATE_DURATION.addDurationFieldType.weeks());
 DATE_DURATION_typeadd(DurationFieldType.weeks());
 DATE_DURATION.add(Years));
 DATE_DURATION_TYPES.add(weeks);
 DATE_DAY.add(DurationFieldType.weeks());
 DATE_DURFieldType.weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { }
 DATE_DURATION_TYPES;
 DATE_DURATION_TYPES.add());
 DATE_DURATION_TYPES.add(daymonths());
 } static { DATE_DURFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static {
 } static final int DAY_OF_DAY;
 DATE_DURATION.add(days);
 DATE_DURATION(months());
 } private final int DAY_OF_DAY;
 DATE_DURATION(Time.weeks());
 DATE_DURATION(Type.weeks());
 }(DurationFieldType.weeks());
 DATE_DURATION_type (*.weeks());
 DATE_DAYES.add(DurationFieldType.weeks());
 DATE_DUR().add(DurationFieldType.weeks());
 DATE_DURATION.type.weeks());
 DATE_days.add(DurationFieldType.weeks());
DATE_DURATION_TYPES = new Set();
 } private final int DAY_OF_MONTH = 3;
 DATE_DURATION_TYPES.clear();
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { static static {
 DATE_DURATION_set(.weeks());
 DATE_DUR_TYPE.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(durationFieldType);
 DATE_DURATE(weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); }
 DATE_D.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weekdays); } static {
 DATE_DURATION_typ(.weeks());
 DATE_DUR(Duration.weeks());
 } static { DATE.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static }
 } static { DATE_DAYTYPES.add(DurationFieldType.weeks());
 DATE.add(weeks());
 DATE_DURATION_types.add();
 DATE_DURATION_TYPES();
 } static { DATE_DURATION_TYPES; }
 } static { DATE_DURATION}.add(DurationFieldType.weeks());
 DATE_DURATION.add(Days));
 DATE_DURATION_add(years);
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays()); } static {
 } static { DATE_DURATION_TYPE };
 } static { DATE_DURATION_TYPE }
 } private final int DAY_OF_MONTH = 3 ; static {
.add(weeks());
 DATE_fields.add(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { } static {}
 DATE_TES.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DATE_DURATION_TYP));
 DATE_TIMEES.add(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { Weekdays } {
 } static { DATE_DURATION_TYPES } ;
 DATE_DURATION_add(DurationFieldType.weeks());
 DATE_DURATION_types.addAll();
 DATE_DUR add(DurationFieldType.weeks());
 DATE_DURATE.weeks());
 DATE_DURATION_TYPE.weeks();
 DATE_VERSION.add(DurationFieldType.weeks());
 } DATE_DUR.add(DurationFieldType.weeks());
 } static { DATE_DURATION_TYPES; };
 } static { DATE_.add(DurationFieldType.weeks());
 DATE_DURATION_TYPES;
 DATE_TIME.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(Days());
 DATE_DURINGType.weeks());
 } private final int DAY_OF_MONTH;
 } static final int WEEK_OF_DAY;
 } static { DATE_DURPES.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.addHours();
DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); static static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays()); static {
 DateFieldType.weekdays());
 DAYS.add(DurationFieldType.weeks());
 }(DurationFieldType.months());
 DATE_DAYPES.add(DurationFieldType.weeks());
 DATE_DATE(weeks());
 DATE_TPES.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays)); } static {
 DateFieldType.monthdays());
 DATE_DURATION.months();
 DATE(DurationFieldType.weeks());
 DATE_DURATION.months(\));
DATE_DURATION_TYPES.addYears();
 DATE_.add(DurationFieldType.weeks());
 DATE_DURATION.months (*);
 DATE_DURATION.months(());
 DATE.add(DurationFieldType));
 DATE_DURATION_types = null;
 DATE_dateType.weeks());
 DAYPES.add(DurationFieldType.weeks());
 DATE_TIMEPES.add(DurationFieldType.weeks());
 DATE_DURATION.add(-weeks());
 DATE(DurationField.weeks());
 }(DurationFieldType.weekdays);
 DATE_DURATION.months (+);
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.daydays()); } static {
 DATE(DurationFieldType.monthdays));
 } private final int DAY_OF_DAY;
 } static final int WEEKDAY = 3;
DATE_DURATION_TYPES.add(DurationFieldType.weeks()"); } static {
 DATE_DURATION_types ++;
 } DATE_DURATION.(weeks());
 }(DurationFieldType.days()));
 DateFieldType.months());
 WEEKDAYS.add(DurationFieldType.weeks());
 Add(DurationFieldType.weeks());
DATE_DURATION_TYPES.clear();
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays()); static }
 DATE.addDays(DurationFieldType.weeks());
 DAYTES.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) static }
 DATE_TURATIONS.add(DurationFieldType.weeks());
 DATE_DURAdd(DurationFieldType.weeks());
 }(DurationFieldType.days());
 DAYFieldType.weeks());
 DATE_TURATION.add(DurationFieldType.weeks());
 DATE_DURATION_TYPE type;
 }(DurationFieldType.daysdays));
 } DATE_DURATION.getweeks());
 }(DurationFieldType.monthdays);
 DateFieldType.minutes());
DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); } public static {
 (#FieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays)); static {
 DATE_ALL.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DATE_DURATION.days));
 DATE_TYPE.weekweeks());
 DurationFieldType.weeks());
 DATE_DURATION.daysdays);
DATE_DURATION_TYPES.add(DurationFieldType.months()); } static { static {
 } static final int DAY_OF_DAY;
 DATE_DATE.months());
 DATE_DURATION_TYPE = YEAR;
DATE_DURATION_TYPES.addDays());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } public static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) }; static {
DATE_DURATION_TYPES.add(DurationFieldType.monthdays()); } public static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(); } static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.daydays()); static {
 Date(new Date(1970));
 DAY_OF_MONTH());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays()); }
 DATE_DATE.weeks());
 } static { add(DurationFieldType.weeks());
 } static final int DAY = 3;
 DateFieldType.days(1);
 } Date(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays); });
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DATE_DURATION_types); });
DATE_DURATION_TYPES.add(DurationFieldType.weeks); } static {
 DATE(FieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); } static {}
DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); } static { static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()"); static }
 } static final int WEEKDAY = 0;
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays));
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.daycounts));
 DATE_TATE.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } public static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { int DAY_OF_DAY }
 } static final int YEAR = 3;
 DATE.addMonth(DurationFieldType.weeks());
 } private final int WEEKDAY = 3;
 DATE(new Date(1970));
 } static final int DAYS = 3;
 Days.add(DurationFieldType.weeks());
 }(DurationFieldType.daymonths);
 static { DATE_DURATION } };
 }());
 } static { DATE_DURATION }
 } static final int DAY_OF_DAY =
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); };
 } Date(new Date(1970));
 } static final int WEEK = 3;
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays());
 }(DurationFieldType.years());
 DATE.add(months());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { static {
 } static final int iHash;
 } private final int DAYS = 3;
DATE_DURATION_TYPES.add(DurationFieldType.monthdays()); } static { static {
 DAYTHS.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { int DAY_OF_DAY };
 DATE.DATE(1970);
 }(DurationFieldType.hours());
 WeekFieldType.weeks());
DATE_DURATION_TYPES = null;
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { DurationFieldType.monthdays };
 } static final int month = 0;
 DATE_DURATION(days);
 DATE_DURATION(1);
 DATE_SET.add(DurationFieldType.weeks());
 DATEFieldType.weeks());
 DateFieldType.months(1);
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } private static {
 DateFieldType.days(0);
 DAY.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { DateFieldType.monthdays };
 WeekFieldType(weeks());
 } private final int DAY = 3;
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfMonth)); static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.dayweekdays());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(DurationFieldType.weekdays()); });
 } static final long iHash;
 } public static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfWeekdays));
 DATE(new Date());
 }(DurationFieldTypeImpl.weeks());
 DateFieldType.weekdays;
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { DurationFieldType.months() }
 DAY_FIELD.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { DurationFieldType.monthdays }
 } Date.parse(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { int DAY_OF_DAY }
 DATE(Time.weeks());
 } static final int DAY_OF_DAY
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfWeekdays());
 DateTime.microseconds());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { int DAY_OF_DAY };
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { static {
DATE_DURATION_TYPES.addHours());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayofweekdays));
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { DurationFieldType.monthdays };
 DateTime.getTime());
 DateTime(new Date());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(days));
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { WeekdayFieldType }
 DateFieldType.months(12);
 }(new Date(1970));
DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); } static { } static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { DateFieldType.monthdays });
 } private final int DAY_OF_DAY
 } static { static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayofweekdays());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfMonth)); static }
 DateTime.now());
 DateTime.today());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfMonth)"); static {
 static } static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static final int DAY_OF_DAY
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfWeek));
 DateTime.ofEpoch());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfMonth).days());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(day));
 DateTime.of(0));
DATE_DURATION_TYPES.add(DurationFieldType.weeksdays()); }
 DateTime.of(1970));
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfWeekday));
 DateFieldType.days(days());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } private static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { DateFieldType.weekdays };
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { DurationFieldType.monthdays });
 DATE(day.weeks());
 static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()"); static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static static {
 DAYFieldType(weeks());
 } private final int iHash;
DATE_DURATION_TYPES.add(DurationFieldType.months()); } static { Weekdays }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { DurationFieldType.monthdays }
 }(dayOfMonth));
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { DateFieldType.monthdays }
 DURATION.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { Weekdays }
 }(days());
 DateTime.newInstance());
 DATE(new Date(1000));
 DateFieldType.days(day);
 DATE(new Date(1900));
 } private final int WEEKDAY = 0;
 } static class DurationFieldType {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { WeekdayFieldType }
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfMonth));
DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { Weekday fields }
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { WeekdayDurationFieldType }
 DateFieldType.months (*);
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { static {
 Date(new Date());
 DateTime.of(1970);
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { DurationFieldType.DAY };
.add(days));
 DateFieldType.days(day());
 DateFieldType.dayofweek();
 }(new Date());
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { Weekdays }
DATE_DURATION_TYPES; }
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { WeekDayFieldType }
DATE_DURATION_TYPES.add(DurationFieldType.months()); } static { Weekday fields }
 } static final int YEAR;
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { static }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { DateFieldType.DAY };
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { DurationFieldType.DAY }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { } static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfMonth)); }
 } static { } static {
DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { WeekdayFieldType }
 DateFieldType.dayofweek());
DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); } public static final {
 WEEKS.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfMonth=2));
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { WeekdayFieldType };
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayofmonth=2));
 } private final int YEAR;
 DateTime.of(UTC);
DATE_DURATION_TYPES.add(DurationFieldType.months()); } static { WeekdayFieldType }
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { DurationFieldType.months };
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { WeekdayDurationFieldType }
 DATES.add(DurationFieldType.weeks());
 DateTime.now(UTC);
 } static final int month;
 Date(new Date()));
DATE_DURATION_TYPES.add(DurationFieldType.weeks(0, 0));
DATE_DURATION_TYPES.add(DurationFieldType.weekdays()); } static { static
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { Weekdays are supported }
DATE_DURATION_TYPES.add(DurationFieldType.months()); } static { Weekdays } {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { WeekdayFieldType }
DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { Weekdays } {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { DateFieldType.Month };
 } static final int DAY;
DATE_DURATION_TYPES.add(DurationFieldType.weeks(); } static { static {
 DateFieldType.months();
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { DurationFieldType.month };
 } private static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(dayOfMonth=1));
DATE_DURATION_TYPES.add());
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { Weekday fields }
DATE_DURATION_TYPES.add(DurationFieldType.months()); } static { static {}
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { } static { static {
 } static final int iDays;
DATE_DURATION_TYPES.create();
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { Weekdays } static {
 } static
 } static final int months;
DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { Weekdays are supported.
DATE_DURATION_TYPES.add(DurationFieldType.weeks(); static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { DurationFieldType.DAY };
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { WeekDayDurationFieldType }
DATE_DURATION_TYPES; };
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { } static {
 static static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(day of week));
DATE_DURATION_TYPES.add(DurationFieldType.months()); } static { Weekdays are supported.
DATE_DURATION_TYPES.add(DurationFieldType.days()); } static { Weekdays are supported }
 } private final int WEEKDAY;
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { Weekdays are supported. }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { WeekDayFieldType }
 } static final static {
 DATE_add(DurationFieldType.weeks());
 } static class DurationFieldType;
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Weekdays }
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { } static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { DateFieldType.MS };
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { WeekdayFieldType };
 static }
 } static final int WEEKDAY;
 } DATE(GMTDurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { } static {
 DateTime(now());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(day of month));
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Weekday fields }
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { Weekdays } {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(12 weeks));
DATE_DURATION_TYPES.add(DurationFieldType months());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { DurationFieldType.DAY }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()"); }
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { Weekyear fields }
 Date(new Date));
 }();
 }(day());
 DURATIONS.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Weekdays } static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { Week years }
 DateTime(new Date));
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { Weekday fields }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { } static { static }
.add(day));
 }#add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { Weekday } {
.add(DAY));
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } public static final {
 }(1));
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { Weekdays are supported.
 static { static }
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { Weekday }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } } ; static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Weekdays } {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(0); });
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) }; static { static {
 static { } static {
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Weekyear fields }
DATE_DURATION_TYPES.add(DurationFieldType.weeks(6 weeks));
DATE_DURATION_TYPES.};
 } static final int DAY_OF_ERA
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Week years }
DATE_DURATION_TYPES.add(DurationFieldType.weeks() } static { Week Year } {
 DateTime.UTC();
 } static;
 } static { static
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Weekday } {
.add(Days));
 }(1);
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } private static final
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { static
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); } static { Weekdays }
 DateTime(UTC);
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { Weekday fields }
 }(0));
 } public static static {
 }(());
DATE_DURATION_TYPES }();
 } public static final void
DATE_DURATION_TYPES.add(DurationFieldType.weeks(0)); }
 }(0);
 static final int WEEKDAY;
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Weekdays };
DATE_DURATION_TYPES.add(DurationFieldType.weeks(2));
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { Weekdays } };
DATE_DURATION_TYPES.add(DurationFieldType.weeksday());
DATE_DURATION_TYPES.add(DurationFieldTypeHours());
 DateTime.now(););
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { static {}
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Weekday }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { Week Year } {
DATE_DURATION_TYPES.add(DurationFieldType.weeks(6));
 } static final int WEEK;
 DATE.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks(.*));
 DateTime.UTC(););
 DateTime.today();
 }(2);
DATE_DURATION_TYPES.add(DurationFieldType.weeks(day)());
DATE_DURATION_TYPES.add(DurationFieldType.weeks())); }
 }(weeks());
 }(2));
DATE_DURATION_TYPES.add(DurationFieldType.weeksdays);
 DATE(.*DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { static }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static static }
 } static { static { }
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) };
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } static { static {}
DATE_DURATION_TYPES.add(DurationFieldType.weeks()); static { Weekdays } }
DATE_DURATION_TYPES } =
 }(hours());
 }(_);
 Date.today());
 }(3));
 Date.now());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } {
DATE_DURATION_TYPES.sort();
 }(..);
 }(...);
.plus(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeks()) } public {
 }(...));
 } Date(weeks());
 };
 #date(weeks());
(months());
 }(24 hours);
 } private int YEAR;
 # weeks.add(DurationFieldType.weeks());
 #(weeks());
 DateTime(GMT);
 (days());
 } static(..);
 +(DurationFieldType.weeks());
 } static int month;
 +(weeks());
 DAY(Type.weeks());
 } private int DAY;
 (+1));
 } final int months;
 } static int months;
 static {}
 add(weeks());
 } static {}
 static static final
 } static (static);
 static } static
 WMS.add(DurationFieldType.weeks());
 } Date.weeks());
 (optional));
 DAY(.weeks());
 (short));
DATE_DURATION_TYPES.add(DurationFieldType.weeksmonths());
 *.add(DurationFieldType.weeks());
DATE_DURATION_TYPES.add(DurationFieldType.weeksDays());
 })();
 (this.weeks());
 } static 2;
 } static 3;
 } static 7;
 int iHash;
 (optional);
 int monthIndex;
(Duration.weeks());
 #days.add(DurationFieldType.weeks());
 }
 ++ DAY;
 ++ YEAR;
 static
