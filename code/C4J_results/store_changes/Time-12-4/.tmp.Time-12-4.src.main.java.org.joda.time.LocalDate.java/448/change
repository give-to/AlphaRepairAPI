 return instant;
iLocalMillis = instant;
 return instant ; }
iLocalMillis  = instant ; }
iLocalMillis  = instant ; return instant ; }
iLocalMillis  = instant ; return this ;
iLocalMillis  = instant
 if (iLocalMillis == -1) {
iLocalMillis  = instant ; return instant ;
 iLocalMillis |= instant;
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant); }
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant); } else {
iLocalMillis  = instant ; return this ; }
 if (iLocalMillis == 0) {
 if (iChronology == null) { return new LocalDate(iLocalMillis); }
 if (iChronology == null) { return new LocalDate(iLocalMillis);
 if (iLocalMillis == null) {
 if (iChronology == null) { return new LocalDate(iLocalMillis, iChronology.withUTC()); }
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis, instant); }
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant);
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis, instant);
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis); }
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis);
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant); } else
 iLocalMillis [ year ]= instant;
 if (iChronology.getZone() == null) { return new LocalDate(iLocalMillis); }
 if (iLocalMillis == null)
iLocalMillis  = instant ; return iLocalMillis ;
 if (iChronology.getZone() == null) { return new LocalDate(iLocalMillis);
iLocalMillis  = instant ; return ( LocalDate ) this ;
 if (iChronology == null) { return new LocalDate(iLocalMillis, iChronology.withUTC());
 return instant ; } return this;
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant); } if ( instant!= 0 )
 if (iChronology == null) { return new LocalDate(null);
 if (iChronology == null) { return new LocalDate(iLocalMillis, iChronology).withUTC()); }
iLocalMillis  = instant ; return iLocalMillis ; }
 if (iChronology == null) { return null; }
 if (iChronology == null) { return new LocalDate(iLocalMillis, iChronology).withUTC(); }
 iLocalMillis [ year ] |= instant;
 if (iLocalMillis == null) { return this;
 return instant + iLocalMillis ;
 if ( instant!= 0 ) {
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant, 0); }
 if (iLocalMillis == 0) { return this;
 if (iChronology == null) { return new LocalDate(iLocalMillis, ISOChronology.getInstanceUTC());
 iInstant *= instant;
iLocalMillis =  instant ; return new LocalDate ( instant ) ;
 iLocalMillis = (long)instant;
 if (iLocalMillis == null) return this;
 if (iChronology == null) { return new LocalDate(null); }
 if (iLocalMillis == null) { instant = 0 ; }
 if (iLocalMillis == 0) return this;
 if (iLocalMillis == null) return null;
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant); } if ( instant ) {
 if (iLocalMillis == null) { instant = 0 ;
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis, instant); } else
 if (iChronology == null) { return null; } if ( instant!= 0 )
 if (iChronology == null) { return null; } if ( instant!= 0 ) {
iLocalMillis  = instant ; return this ; } }
 if (iChronology == null) { return new LocalDate(iLocalMillis, 0); }
 iLocalMillis *= instant;
 if (iChronology == null) { return this; }
 iLocalMillis = -instant;
 if (iLocalMillis == 0)
 if (iChronology == null) { return new LocalDate(iLocalMillis); } else
 if (iChronology == null) { instant = 0 ; }
 if (iLocalMillis == null) { super();
 if (iLocalMillis == 0) { return this; }
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant); } return
 return instant + iLocalMillis ; }
 if (iLocalMillis == 0) return null;
 iLocalMillis = instant ; iInstant *= instant;
 if (iChronology == null) { return null; } return
 return instant.instant;
 if (iChronology == null) { return new LocalDate(instant);
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis, 0); }
 if (iChronology == null) { return new LocalDate(iLocalMillis, null); }
 iLocalMillis = instant.instant;
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant); } if ( instant )
 this.instant = instant ; return this.instant;
iLocalMillis  = instant ; super();
 if (iLocalMillis == null) { return null;
iLocalMillis  = instant ; return this
 if ( instant!= - 1 ) {
 if (iLocalMillis == null) { return new LocalDate(null);
 if (iChronology == null) { return new LocalDate(iLocalMillis, 0);
 if (iChronology == null) { return new LocalDate(Instant); }
 return (long)instant;
 if (iChronology == null) { if (iLocalMillis == 0) {
 return Instant. ofInstant ( instant ) ; }
iLocalMillis  = instant ; return this ; } } ;
 return instant - iLocalMillis ;
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis); } else
iLocalMillis =  instant ; return ( LocalDate ) chronology ;
 if (iChronology == null) { return new LocalDate(0); }
 iLocalMillis [ year ] *= instant;
 if (iChronology == null) { return this;
 if (iChronology == null) { return new LocalDate(iLocalMillis); } return
iLocalMillis = instant ; return new LocalDate ( iLocal ) ;
 if (iChronology.getZone()) == null) { return null; }
 if (iChronology == null) { return this; } return
 if (iChronology == null) { return new LocalDate(iLocal) }
 return new LocalDate(iLocalMillis, iChronology.withUTC()); } else {
 iLocalMillis [ iIndex ]= instant;
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant) }
 if ( instant!= 0)
 iLocalMillis = instant ; iOffset *= instant;
 iLocalMillis = instant ; iInstant |= instant;
 if (iLocalMillis == 0) { return null;
 if (iChronology == null) { return new LocalDate(iLocalTime);
 if (iChronology == null) { return new LocalDate(iLocalMillis, instant); } else { return
 if (iChronology == null) { return new LocalDate(iLocalMillis));
 if (iChronology == null) { return null; } else {
 } return instant;
 return instant - iLocalMillis ; }
 iLocalMillis = instant ; return - 1;
iLocalMillis =  instant ; return ( LocalDate ) this ; }
 if (iChronology == null) { return this; } else {
 iLocalMillis = instant+instant;
iLocalMillis  = instant ; return this ; } return this ;
iLocalMillis  = instant ; return instant ; } return this ;
 if (iLocalMillis < 0) {
 if (iChronology == null) { return new LocalDate(iLocalMillis());
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis, instant); } return
 return new LocalDate(iLocalMillis, iChronology.withUTC(), instant); } else {
 return Instant. ofEpoch ( instant ) ; }
iLocalMillis  = instant ; super ;
 iLocalMillis = instant ; } return this;
 if (iChronology == null) { return new LocalDate(iLocalMillis) }
 if (iChronology == null) { return null; } this.
 return (LocalDate)instant;
 if (iLocalMillis == null) { return this; } return
 if (iLocalMillis == null) { return this; } else {
iLocalMillis = instant ; return new LocalDate ( instant ) ; }
 return iLocalMillis + -instant;
 iLocalMillis = &instant;
 return iLocalMillis+instant;
 return iChronology.withUTC(instant;
 if (iChronology == null) { return new LocalDate(null); } return
iLocalMillis = instant + iLocalMillis ; return instant ; }
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis, instant); } *
 this. instant = instant ; return this;
 if (iChronology.getZone()) == null) { return null; } return
 if (iChronology.getZone()) == null) { return this; } return
 iLocalMillis = instant ; return this.instant;
 return instant + 1;
 iLocalMillis [ iIndex ] |= instant;
 if (iChronology.getZone()) == null) { return new LocalDate(iLocalMillis, instant); };
iLocalMillis  = instant ; return this ; } ;
 return instant + iChronology. offset ; }
 return - instant;
iLocalMillis = instant ; return iLocalMillis ; } } ;
iLocalMillis  = instant ; return instant ; } } ;
 iLocalMillis = 0 ; iInstant |= instant;
 return instant ; } return null ;
 return iLocalMillis + instant.instant;
iLocalMillis  = instant ; return ;
 return instant + dayOfMonth;
 return instant ; } } ;
 instant ;
iLocalMillis  = instant ; return iLocal ; }
 return instant
iLocalMillis  = instant ; return instant ; } }
 this.instant = instant ; returninstant;
 if (iChronology == null) { return null; } else { return
 if ( instant > 0 ) {
 if ( iLocalMillis ) {
iLocalMillis  = instant + iLocalMillis ;
 iLocalMillis = instant ; iOffset |= instant;
iLocalMillis =  instant ; return iLocalMillis ; } }
 return iChronology.withUTC().instant;
 return Instant. ofInstant ( instant ) ; } }
 if (iChronology == null) { return this; } else { return
 iLocalMillis [ year ] ^= instant;
 if (iChronology == null) { return new LocalDate(); } return
 iLocalTimeMillis |= instant;
 this.instant = instant.instant;
 iLocalTimeMillis *= instant;
 iLocalMillis + instant *= instant;
 return instant ; } }
 return instant + 1900;
 iLocalMillis [ iOffset ] |= instant;
 iLocalMillis = instant ; return chronology;
 return iChronology.withInstant(instant;
 return iLocalMillis + iOffset *= instant;
 return instant - 1;
iLocalMillis  = instant ; } }
 iLocalMillis ^= instant;
iLocalMillis = instant ; return ( LocalDate ) this ; } }
 return instant ; } return LocalDate ;
 iLocalMillis = instant-instant;
 iLocalTime = instant ; return this.instant;
 return instant + iOffset ;
 return instant+instant;
 iLocalMillis[0]= instant;
 iLocalMillis = instant ; iOffset= instant;
 return instant. toInstant ( ) ; }
iLocalMillis  = instant ; return this ; } return null ;
 return Instant. ofInstant ( instant ) ; };
 return instant. toInstant ( ) ;
 iLocalTimeMillis=instant;
 iLocalMillis = instant + offset;
 iInstant= instant;
 return iChronology.withUTC();instant;
 return instant - iLocalMillis + 1;
iLocalMillis =  instant ; return this ; } return LocalDate ;
 return instant - ( int ) iOffset ;
 return instant + - 1;
 return instant + iLocalMillis * 1000;
 return instant + iLocalMillis ; } }
 return instant + offset;
 return instant - iLocalMillis * 1000;
 iLocalMillis = instant + 1900;
 return iChronology.withUTC()+instant;
 return instant ; } } return this;
 iLocalMillis = instant - 1;
 iInstant |= instant;
 return instant + iOffset ; }
 iLocalTime = instant ; return (long)instant;
 iLocalMillis [ iIndex ] *= instant;
 if ( iLocal == null ) {
 return iChronology.withInstant()+instant;
 if ( instant > 0)
 return instant + iChronology. offsetUTC ;
iLocalMillis  = instant ; return instant + iOffset ;
 iLocalMillis []= instant;
 iLocalMillis = instant - 1900;
 super();
 return iLocalMillis + instant-instant;
 return (Long)instant;
 iLocalMillis. instant |= instant;
 instant=instant;
iLocalMillis  = instant ; return instance ; }
 if (!iLocalMillis)
 this.instant = &instant;
 return instant - iLocalMillis ; } }
 return Instant. ofInstant ( instant ) + 1;
 if (iLocalMillis == 0) { return
iLocalMillis  = instant ; return this ; return this ;
 this.instant=instant;
 return instant + 1L ;
 return instant - 1 ; }
 iLocalMillis = + instant;
 return instant + iLocalMillis + offset ;
 return instant - 1L ;
 return instant - 1900;
 iLocalMillis &= instant;
 iLocalMillis.offset= instant;
 if ( instant ) {
iLocalMillis  = instant ; return i ; }
iLocalMillis  = instant + iOffset ;
 iLocalMillis * |= instant;
 return instant ; } ;
 return instant + iLocalOffset ;
 return instant + 1.0;
 iInstant = -1;
 iInstant = -instant;
 iInstant = instant ;
 instant = -1;
 return instant + " ";
iLocalMillis  += instant ; return this ;
 iInstantOffset *= instant;
 return instant; return null;
 iLocalInstant= instant;
 return (int)instant;
 this. iInstant |= instant;
 if (! instant) {
 iLocalInstant |= instant;
 return instant-instant;
 if (! instant)
 iInstant = &instant;
iLocalMillis  ++ ;
 iLocalInstant *= instant;
 return - 1;
 } return this;
 instant = 0;
 return + instant;
 iInstant &= instant;
 iOffset= instant;
 iInstantZone *= instant;
 if ( instant )
 return this(instant;
 this.offset= instant;
iLocalMillis  = instant ; return
 iLocal= instant;
 super();
iLocalMillis  += instant ; }
 return &instant;
 instant = 0 ;
 return ++instant;
iLocalMillis  = instant ; };
 this.
 #-----------------------------------------------------------------------
 } }
 instant *= instant;
 this |= instant;
iLocalMillis  += instant ;
iLocalMillis  += instant
iLocalMillis =  instant; *
 } else {
 super().
iLocalMillis  -- ;
iLocalMillis  = 0 ;
 #------------------------------------------------------------------------
iLocalMillis  = instant.
 return this ;
iLocalMillis  ; }
 return instance ;
 #--------------------------------------------------------------------------
 this._
iLocalMillis =  offset ;
 return
 throw instant;
 long
 *
iLocalMillis -= instant;
iLocalMillis return instant;
