LocalDate other = (LocalDate) partial;
 other = (LocalDate) partial;
LocalDate  other = partial;
LocalDate other = (ReadableLocalDate) partial;
 return (LocalDate) partial;
LocalDate other = (Date) partial;
LocalDate other = (LocalDate);
 other = LocalDate) partial;
LocalDate other = (LocalDate) partial
LocalDate other = (LocalDate) (LocalDate) partial;
 return false; } else
 return false;
 return false; } else {
 LocalDate other = LocalDate) partial;
LocalDate other = (LocalDateImpl) partial;
 return (Date) partial;
LocalDate other = (LocalDate) partial; if (other!= null) {
 other=partial;
 Date other = (LocalDate) partial;
 LocalDate other!= (LocalDate) partial;
 LocalDate other = *partial;
 return true; } LocalDate other = (LocalDate) partial;
LocalDate other = (partial);
 return false; } LocalDate other = (LocalDate) partial;
 LocalDate otherLocalDate=(LocalDate) partial;
LocalDate  other = partial
 return this. equals(partial); } else {
 return true ; } else { other = (Date) partial;
 return false ; } if (partial instanceof LocalDate) {
 return this == partial; } else {
 LocalDate other = *(LocalDate) partial;
 return false; } else { other = (Date) partial;
 LocalDate other = (Date)(LocalDate) partial;
 var other=partial;
 return true; } else {
 return true; } else { Date other = (LocalDate) partial;
 return partial. equals(other); } else
 return false ; } if (partial == null) { return false ; } if (partial instanceof LocalDate) {
 return false; } else { LocalDateother = (LocalDate) partial;
 return this == partial; } else { other=partial;
LocalDate other  = (LocalDate) (LocalDate) partial
 return true; } else { LocalDate other=(LocalDate) partial;
LocalDate other  = (LocalDate)partial; } else {
LocalDate  other = this.localDate;
 return this. equals(partial); } else
 return partial. equals(other); }
 return this == partial; } else { LocalDateother = (LocalDate) partial;
LocalDate other = (LocalDate) partial; if (other instanceof Chronology) {
LocalDate other = (LocalDate) partial; if (other!= null)
 return false ; } if (partial == null) { return false ; } if (partial!= null) {
 return false; } else {
 other = (Date) partial;
 return true; } else { var other=partial;
 return super.equals(partial); } else
 return true; } else
 return LocalDate) partial;
 return false; } else { Date other = (LocalDate) partial;
 return false ; } if (partial instanceof Date) { return false ; } if (partial instanceof LocalDate) {
 return true ; } if (partial == null) { return false ; } if (partial instanceof LocalDate) { final
LocalDate  other = (LocalDate)partial.other;
 return true ; } else { return false ; } if (partial!= null) {
LocalDate other = (LocalDate) partial; if (other instanceof Calendar) {
 return false; } else { LocalDate *other = (LocalDate) partial;
 return false ; } if (partial == null) { return false ; } if (partial instanceof Date) {
 LocalDate other = this.partial;
 return false ; } if (partial == null) { return false ; } if (partial instanceof LocalDate) { final
 return true; } else { var other = (LocalDate) partial;
 LocalDate other LocalDate other= (LocalDate) partial;
 return this. equals(partial); } else { return false ; }
 return false ; } if (partial == null) { return false ; } if (partial instanceof LocalDate)
LocalDate other  = (LocalDate)partial.localDate;
 return partial == this; } else {
 return partial == this; } else
 return false; } else { var other=partial;
 return false ; } if (partial instanceof Date) { return false ; } if (partial!= null) {
 return this. equals(partial); } else { return false ; } } else {
LocalDate  other = (LocalDate) {
 return false ; } if (partial == null) { return false ; } if (partial instanceof Local) {
 return false ; } else { LocalDate other!= (LocalDate) partial;
 return this == partial; } else
 return true; } other = (Date) partial;
LocalDate  other = this.other;
 return this == partial; } else return false;
 return true; } else { return (Date) partial;
 return true ; } else { LocalDate *other = (LocalDate) partial;
 return false ; } if (partial instanceof Date) { return false ; } if (partial instanceof Calendar) {
 return true ; } else { LocalDate other!= (LocalDate) partial;
 return false; } other = (Date) partial;
 return this == partial; } else { return false;
 return this == partial; } else { return false ; }
 return true; } else { Object other = *partial;
LocalDate  other = this.localDate();
LocalDate  other = (LocalDate)
 return true ; } if (partial instanceof Date) { return true ; } if (partial instanceof Calendar) {
 return true; } other = (LocalDate) partial;
 return true ; } else { return false ; } if ( partial instanceof Date ) { return true ; } else { return false ; }
 return partial. equals(this); } else
 return false; } else { Object other = *partial;
 return false ; } else { return false ; } if ( partial instanceof LocalDate ) { return true ; } else { return false ; }
 return true; } else { return (LocalDate) partial;
 return false; }
 return true ; } else { return false ; } if ( partial instanceof LocalDate ) { return true ; } else { return false ; }
 return true ; } if (partial instanceof Instant) { return true ; } else {
LocalDate other = (LocalDate) partial; if (other instanceof LocalTime) {
 return false ; } if (partial instanceof Instant) { return false ; } else {
 return false ; } if (partial instanceof Instant) { return true ; } else {
LocalDate other = (LocalDate) (LocalDate)partial; } else {
 return false ; } if (partial == null) { return false ; } if (partial!= this) {
 return this == partial; } else {
 LocalDate other = (*LocalDate) partial;
 return false ; } if (partial == null) { return false ; } if (partial!= null) { final
 return true; } Date other = (LocalDate) partial;
 return partial. equals(other.iLocalDate); }
 return false; } Date other = (LocalDate) partial;
LocalDate other = (LocalDate) partial; if (other instanceof Chrono) {
 super.equals(partial, (LocalDate) partial;
 return false ; } if (partial instanceof Date) { return false ; } if (partial instanceof Period) {
LocalDate other = (ReadablePartial LocalDate) partial;
 return this. equals(partial).equals(other); } else
 return true ; } if (partial instanceof Instant) { return false ; } else {
 return partial == other; } else
 return true; } else { other=partial;
 return partial. equals(other); } else {
 final LocalDate other = LocalDate) partial;
 this.iLocalDate = (Date) partial;
 return true; } else { return false;
LocalDate other = (LocalDate) partial; if (other instanceof Instant) {
 return this == partial; } else { return false ; } } else
 return true; } else { var other = *partial;
LocalDate  other = (LocalDate) * partial;
 return false; } else { return (Date) partial;
 return false; } other = (LocalDate) partial;
LocalDate other  = (LocalDate)partial.localDate();
 return false ; } else { LocalDate _other = (LocalDate) partial;
LocalDate  other = getLocalDate ( partial ) ;
 return false ; } if (partial instanceof Date) { return false ; } if (partial instanceof LocalDate) { final
 return true ; } else { return false ; } if (partial instanceof LocalDate) { return false ; } else { return false ; }
 return false ; } else { LocalDate other *= (LocalDate) partial;
 return false; } LocalDate *other = (LocalDate) partial;
 return false ; } if (partial instanceof LocalDate) { final
LocalDate other = (LocalDate) (Date) partial;
LocalDate other = (LocalDate) partial; if (other instanceof UTCDate) {
 return partial. equals(); } else
 return partial == other.partial; }
 return false; } else { var other = *partial;
 return false ; } if (partial instanceof Instant) { return false ; }
 return false ; } if (partial == null) { return false ; } if (partial!= partial) {
 return false ; } else { return false ; } if ( partial instanceof LocalDate ) { return true ; } else { return false }
 return true ; } if (partial instanceof Date) { return false ; } if (partial instanceof LocalDate) { final
 LocalDateLocalDate other= (LocalDate) partial;
LocalDate other = (LocalDate)partial; return false; } else
 return partial instanceof LocalTime; }
 return this == partial.getLocalDate(); } else
 (Date) partial;
 return true ; } else { return false ; } if ( partial instanceof LocalDate ) { return true ; } else { return false }
 return false ; } else { return false ; } if ( partial instanceof LocalDate ) { return true ; } else { return false ;
 return this. equals(partial).equals(); } else {
LocalDate other = (LocalDate) partial; if (other!= null) { } else
 var other = (LocalDate) partial;
 LocalDate other LocalDate) partial;
LocalDate other = (LocalDate) LocalDate) partial;
 return false ; } if (partial instanceof Instant) { return true ; }
 return true; } else {
 LocalDate other (Date) partial;
 return false ; } if (partial == null) { return false ; } if (partial instanceof Date)
 return false ; } if (partial instanceof Date) { return false ; } if (partial instanceof LocalTime) { final
 final LocalDate other = (Date) partial;
 return false; } else { final LocalDate *other = (LocalDate) partial;
LocalDate other = (LocalDate) partial; if (other) {
 return true ; } if (partial instanceof Date) { return false ; } if (partial instanceof LocalTime) { final
 super.equals(LocalDate)partial;
 return this == partial.getInstant(); } else
 return false ; } if (partial == null) { return false ; } if (partial == this) {
 Object other = LocalDate) partial;
 return true ; } else { return false ; } if ( partial instanceof LocalDate ) { return false ; } else { return true ; }
 LocalDate other.iDate= (LocalDate) partial;
 LocalDate other = this|(LocalDate) partial;
 return false; } else { other=partial;
 LocalDate *other = (LocalDate) partial;
 return partial == other.iLocalDate;
 localDate other = (Date) partial;
 return true ; } else { return false ; } } else {
 return partial. equals(other.iDate); }
 return false; } else { return (LocalDate) partial;
 return false ; } LocalDate other!= (LocalDate) partial;
 return this == partial; } else { return false; } else
 LocalDate other = this.(LocalDate) partial;
 return -1;
 return true ; } if (partial instanceof Date) { return false ; } if (partial instanceof Time) { return false };
LocalDate other = (ReadableLocalDateImpl) partial;
 return true ; } if (partial == null) { return false ; } if (partial instanceof LocalDate)) { final
LocalDate  other = new LocalDate (partial);
 super.equals(localDate)partial;
 var other = *partial;
 return true; } else { final LocalDate *other = (LocalDate) partial;
 Object other = *partial;
 LocalDate other = (BaseLocalDate) partial;
 return false ; } else { return false ; } if ( partial instanceof Date ) { return true ; } else { return false;
LocalDate other = (ReadablePartialImpl) partial;
 return false ; } LocalDate other *= (LocalDate) partial;
 return true ; } else { return false ; } if (partial) { final
 return true; } else { return false ; } } else
 return false ; } else { return false ; } if ( partial instanceof Date ) { return true ; } else { return false }
 return true ; } else { return false ; } if ( partial instanceof Date ) { return false ; } else { return true ; } final
LocalDate other = (LocalDate) partial; if (other!= this) {
 return false; } else { var other = this;
LocalDate other = (LocalDate)partial; } else
 return partial == other;
 return false ; } if (partial instanceof Date) { return false ; } if (partial instanceof Instant) { return true };
 Object other = (LocalDate) partial;
 return false ; } LocalDate other &= (LocalDate) partial;
 return partial == null; } else return false;
 return true ; } if (partial == null) { return false ; } if (partial instanceof LocalDate) { static
LocalDate other = (LocalDate) (LocalDate)partial; } else
 return this. equals(partial); } else { return false ; } } else { final
LocalDate other = (ReadablePartialDate) partial;
 return false ; } LocalDate other = this|(LocalDate) partial;
 return false; } else { return false;
 var other = LocalDate) partial;
 return this == partial.date;
 return false ; } if (partial instanceof Instant) { return false ; } else { final
 return partial. equals(other.iLocalDate()); }
 return true; } else { var other = this;
 return true ; } LocalDate other!= (LocalDate) partial;
LocalDate other = (Locale) (LocalDate) partial;
 return false ; } if (partial instanceof Instant) { return false ; } final
 return true; } LocalDate *other = (LocalDate) partial;
 return true ; } if (partial instanceof Instant) { return false ; } else { final
 Calendar other = (LocalDate) partial;
 return false; } else { return true;
 localOther = LocalDate) partial;
 return this == partial; } other=partial;
 return false; } LocalDate _other = (LocalDate) partial;
 final LocalDate *other = (LocalDate) partial;
 LocalDate otherLocalDate = *(LocalDate) partial;
 return false ; } if (partial == null) { return false ; } if (partial instanceof LocalDate) { } final
 return false ; } if (partial instanceof LocalTime) { final
 return true; } else return false;
LocalDate  other = (LocalDate)partial.other();
 return partial. equals(other.iLocal); }
 return this. equals(partial); } else { return false ; } else { final
 return true ; } if (partial instanceof Instant) { return true ; } else { final
 Object other = this.partial;
LocalDate other = (LocalDate) (LocalDate) partial; else
 return false; } else { int other = this;
 return this. equals(partial); } else { return partial instanceof LocalDate ; } final
LocalDate  other = (LocalDate) partial; else
LocalDate other = (LocalDate) partial; if (other!= null) { }
LocalDate  other = this; } else
 localDate(LocalDate)partial;
 return this. equals(partial); } else { return true ; }
 LocalDate other = this = (LocalDate) partial;
LocalDate other = (LocalDate) partial.get (other);
LocalDate other = (LocalDate) (LocalDate) partial; }
 return false ; } LocalDate other = (*LocalDate) partial;
 LocalLocalDate other = (LocalDate) partial;
 return partial!= null;
 return this. equals(partial); } else { return partial instanceof LocalDate ; } } {
LocalDate other = (LocalDate) partial.toLocalDate(); } else {
 return this. equals(partial); } else { return false ; } } { final
 LocalDate other = partial = (LocalDate) partial;
 return partial == localDate;
 return true; } else { return (date) partial;
 return false ; } LocalDate other = (BaseLocalDate) partial;
 LocalDate other = ((LocalDate) partial;
LocalDate other = (this);
 return other.isLocalDate;
 return true; } LocalDate other = *(LocalDate) partial;
 LocalDate otherPart = (LocalDate) partial;
 return partial == other.iDate;
 return this. equals(partial); } else { return partial instanceof LocalDate ; } {
 return this. equals(partial); } else { final
 LocalDate other &= (LocalDate) partial;
LocalDate  other = this.other();
 return this. equals(partial); } else { return partial instanceof LocalDate ; } } final
 return false; } LocalDate other = *(LocalDate) partial;
 return this == localDate;
 Object other = (Object)partial;
LocalDate  other = (LocalDate) * partial; else
 return this. equals(partial); } else { return false ; } final
 LocalDate localDate other= (LocalDate) partial;
LocalDate  other = (LocalDate) partial; }
 LocalDate localDate:= (LocalDate) partial;
 return partial == this.date;
 return false ; } if (partial instanceof Instant) { return true };
 return partial == other.iInstant;
LocalDate other = (LocalDate) partial; if (other!= null) { else
LocalDate  other = (LocalDate) (partial); else
LocalDate other = (LocalDate) partial.toLocalDate(); } else
 return true; } else { return -1;
 return this. equals(partial); } else { return false ; } } final
 return this. equals(partial); } else { return false ; } } {
 this.iLocalDate *= (LocalDate) partial;
 return true ; } else { return false ; } } else { final
 LocalDate other:= (LocalDate) partial;
 return this == partial; } else { return false ; } }
 this.iLocalPartial=partial;
 return this. equals(partial); } else { else
 return true; } LocalDate other = ((LocalDate) partial;
 LocalDate other = other.partial;
 return this == partial; } else return true;
 LocalDate other.iOther= (LocalDate) partial;
 return this. equals(partial); } else { return partial instanceof LocalDate ; } { final
 return partial == LocalDate;
 return false ; } if (partial instanceof Instant) { return true;
 return false ; } if (partial instanceof LocalDate) {}
 LocalDate other = (Local) partial;
 return this.isLocalDate;
 return this == partial; } else { } else
LocalDate  other = (LocalDate) * partial; *
 return this == partial; } return false;
 return false ; } else { Date*other = (LocalDate) partial;
 return false ; } if (partial instanceof Date) { return false ; } else { } { final
 return this == partial; } else;
LocalDate other =  (LocalDate) (LocalDate) partial();
 return partial == other.partial;
 return false ; } if (partial instanceof Date) { return true ; } else { } { final
 return other == partial;
 return true ; } if (partial instanceof Instant) { return true ; } else { } { final
 return true ; } if (partial instanceof Instant) { return false ; } else { } { final
 return false ; } if (partial instanceof Instant) { return false ; } else { } { final
 return partial == other; }
 return this == partial; } else { else
 return true; } else { return ((LocalDate) partial;
 localDate = (LocalDate) partial;
 LocalDate other <= (LocalDate) partial;
 iLocalMillis = ((Date)LocalDate) partial;
 final LocalDate _other = (LocalDate) partial;
 return false ; } if (partial instanceof Instant) { return false ; } else { } final
 return this == partial; } else { return false ; } } {
 return false; } else { if (!partial)
 return true ; } if (partial instanceof Instant) { return false ; } else { } final
LocalDate  other = (LocalDate) partial();
 LocalDate|Time other= (LocalDate) partial;
 final ReadablePartialother = (LocalDate) partial;
 return this == (LocalDateImpl) partial;
 this.iChronology *= (LocalDate) partial;
 return other.iHash;
 return true ; } else { return false ; } } { final
LocalDate other =  (LocalDate) (LocalDate) partial);
 return (LocalDate) (Date) partial;
 return true;
 return false ; } if (partial instanceof Instant) { return true }
 return partial == iDate;
 final LocalDate other!= (LocalDate) partial;
 return false ; } else { return false ; } } else { final
 this.iLocalMillis = other!= (LocalDate) partial;
 final ReadablePartial *other = (LocalDate) partial;
 return this == partial;
 return false ; } else { return true ; } } else { final
 return this == partial; } else { final
 LocalDate _other = (LocalDate) partial;
 return true ; } else { return false ; } else { final
 Date other = this.partial;
LocalDate other = (LocalDate) partial.date;
 this.iLocalDateObject=partial;
LocalDate  other = this;
 return true; }
 LocalDate) partial;
 localDate other = (LocalDate) partial;
 LocalDate.other = (LocalDate) partial;
 return this.isLocalDate()partial;
 return partial == null; } else return true;
 LocalDate other := *(LocalDate) partial;
 return this.isLocalDate().partial;
 return this.isLocalDate(partial;
LocalDate other = (LocalDate) partial.getObject (other);
 return true; } else { return false; }
LocalDate other = (LocalDate) (LocalDate) * partial; }
LocalDate other = (LocalDate) partial; if (other) { }
 return false; } else { final
LocalDate other = (LocalDate) (LocalDate) * partial; else
 return partial == this;
 return true ; } else { return false ; } } final
 localDate other=partial;
 LocalDate|Instant|other = (LocalDate) partial;
 final ReadablePartial _other = (LocalDate) partial;
 return true ; } else { return false ; } } {
 LocalDate|other = (LocalDate) partial;
 localDateOther=partial;
 return this == partial; } else { try { final
 return false; } final
LocalDate  other = this; else
 Object other = other.partial;
 return partial == other.iOffset;
LocalDate  other = partial; else
 ReadablePartialother = (LocalDate) partial;
 this.iLocalDateTime *= (LocalDate) partial;
LocalDate other = (LocalDate) partial.toLocalDate(other); }
 return true ; } else { return false ; } final
 return true ; } else { return false ; } { final
 final LocalDateImpl _other = (LocalDate) partial;
 LocalDateOther other =(LocalDate) partial;
LocalDate other = (LocalDateObject) partial;
LocalDate other = (LocalDate) partial; if (other) { else
 LocalDate other = &partial;
 other = (Local) partial;
 return false; } else { else
 return false; } else { return true ; } final
 other := LocalDate) partial;
 return true; } else { final
 return false; } { final
 let other=partial;
LocalDate other = (LocaleDate) partial;
LocalDate other = (LocalDate|Time) partial;
 return false; } else { try { final
 localDate=partial;
LocalDate other = (ReadablePartial) partial;
LocalDate  other = partial; }
LocalDate other = (LocalDate|Instant) partial;
LocalDate  other = this; }
LocalDate  other = this
 return this == partial; } { final
 return this == partial; } else { } final
 LocalDate|Time|other = (LocalDate) partial;
 if (!other) {
LocalDate other = (other);
LocalDate  other;
 return false; } else { } { final
LocalDate  other = partial();
 return!other;
LocalDate other = (ReadableDate) partial;
 boolean other = partial;
 return partial == null; } final
 return true ; } else { } { final
 return true; } final
LocalDate other = (LocalDate|null) partial;
 return (date) partial;
 other := (Date) partial;
 BaseDate other = (LocalDate) partial;
 return false; } {
LocalDate other = (LocalDateBase) partial;
LocalDate other = (LocalDate) partial.getObject (other)
LocalDate other = (LocalDate) partial.date();
LocalDate other = (localDate);
 ((Date) partial;
LocalDate other = (LocalDate) partial.get (other)
 return false ; } else { } final
LocalDate  other } {
 new LocalDate) partial;
 return localDate;
LocalDate other = (LocalDate) partial; } else { else
LocalDate other = (LocalDate) partial.get (other));
 let other= (LocalDate) partial;
 return false; };
LocalDate other = (LocalDate) partial.get (other).
LocalDate other = (LocalDate());
LocalDate  other =
LocalDate  = partial;
LocalDate  other = {
 other!= (LocalDate) partial;
 return!partial;
 try { final
LocalDate other = (LocalDate).
 return ((LocalDate) partial;
LocalDate other = (other)
 return false };
LocalDate other = (LocalDate) partial.other; else
 return false }
LocalDate other = (LocalDate)) {
 this=partial;
LocalDate other = (Other)
 return true };
 other := (LocalDate) partial;
 (date) partial;
 = (LocalDate) partial;
 other ::= (LocalDate) partial;
 other = ((LocalDate) partial;
 Date*other = (LocalDate) partial;
 partial=partial;
 parent=partial;
 final Dateother = (LocalDate) partial;
 final
 localDate *= (LocalDate) partial;
 localDate!= (LocalDate) partial;
 boolean other;
 new (LocalDate) partial;
LocalDate other  } else
LocalDate  date ;
 return 0;
LocalDate Other else
LocalDate other = (LocalDate) partial; *
 assert false;
 } final
LocalDate other = (localDate) partial;
LocalDate other = (LocDate) partial;
LocalDate other = (DD) partial;
LocalDate other = (date) partial;
LocalDate other = (InternalDate) partial;
LocalDate other = (Other) partial;
LocalDate other += (LocalDate) partial;
