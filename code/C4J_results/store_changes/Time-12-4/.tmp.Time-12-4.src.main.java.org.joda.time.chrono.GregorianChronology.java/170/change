 return this;
 return Chronology.INSTANCE_UTC;
 return Calendar.INSTANCE_UTC;
 return this ; }
return INSTANCE_UTC. withUTC ( ) ;
 return getInstance(UTC, minDays);
 return this
return INSTANCE_UTC. withUTC ( this ) ;
 return getInstance(UTC);
return INSTANCE_UTC ; }
 if (!UTC)
return INSTANCE_UTC. withUTC ( this, minDays ) ;
 return DateTimeZone.INSTANCE_UTC;
 if (base == null) {
return INSTANCE_UTC. withUTC ( base, minDays ) ;
 if (base == null) { return this; }
 if (zone == null) { return INSTANCE_UTC; }
 return this. withUTC ( ) ;
return INSTANCE_UTC. withUTC ( this ) ; }
 if (UTC == null) {
 if (zone == null) { return INSTANCE_GMT; }
return INSTANCE_UTC. withUTC ( base, param ) ;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( base == null ) {
 return getInstance ( ) ;
 return getInstance(UTC, minDays); }
 if (base == null) { return INSTANCE_UTC; }
 if ( zone == null ) { return INSTANCE_UTC ; } if ( getZone == null ) {
 if (zone == null) { return this; }
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return INSTANCE_GMT ; }
 return GJChronology.INSTANCE_UTC;
 return this. withUTC ( UTC ) ;
 return Chronology. ZONE_INSTANCE_UTC;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( getZone() == null ) {
 if (base == null) { return INSTANCE_GMT; }
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == getZone ( ) ) {
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return INSTANCE_UTC ; }
 if (zone == null) { return INSTANCE_UTC; } else {
 if ( zone == null ) { return INSTANCE_UTC ; } if ( getZone ( zone ) ) {
 if (zone == null) { return INSTANCE_GMT; } else {
 return getInstance(UTC, 0);
 return getInstance(DateTimeZone.INSTANCE_UTC;
 return getInstance(UTC) ; return this;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( this == zone == null ) {
 if ( zone == null ) { return INSTANCE_UTC ; } if ( timeZone == null ) {
 return Chronology. DATE_INSTANCE_UTC;
 return getInstance(UTCZone);
 return this ; } return chrono ;
 if ( zone == null ) { return INSTANCE_UTC ; } else if ( zone == getZone ( ) ) {
 return Chronology.GMT_INSTANCE_UTC;
return INSTANCE_UTC. withUTC ( this, base ) ;
 return this. withUTC ( ) ; return this;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( localZone == null ) {
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return this ;
 return this. withUTC ( DateTimeZone.INSTANCE_UTC;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == this ) {
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return this ; }
 if (isUTC()) {
 return getInstance(UTC, minDays, );
 if ( zone == null ) { return INSTANCE_UTC ; } if ( isDefault ) {
 return ChronologyFactory.INSTANCE_UTC;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( base == null )
 return this. UTC ;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( this == null ) {
 if ( zone == null ) { return INSTANCE_UTC ; } if ( isUTC ) {
 return Chronology. DATETIME_INSTANCE_UTC;
 if (getInstance() == null)
 if ( zone == null ) { return INSTANCE_GMT ; } if ( UTC ) {
return INSTANCE_UTC. withUTC ( this, zone ) ;
return  withUTC ( base, minDays ) ; }
 return new Chronology(UTC, minDays);
return INSTANCE_UTC. withUTC ( base ) ;
 return ChronologyImpl.INSTANCE_UTC;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( strict ) {
 if (this == null) {
 if ( zone == null ) { return INSTANCE_UTC ; } if ( UTC ) {
 if ( zone == null) { return this; } if ( zone == this ) {
 return getInstance(UTC.UTC);
 if ( zone == null ) { return null ; } if ( getInstance == null ) {
 if ( zone == null ) { return INSTANCE_GMT ; } if ( strict ) {
return INSTANCE_UTC. withUTC ( dateTimeZone ) ;
 if (base == null) { return null; }
 if (UTC) {
return  getInstance(UTC, minDays, zone);
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return this }
 return this. withUTC ( minDays ) ;
 return Chronology. DEFAULT_INSTANCE_UTC;
 if (isDefault()) { return this; }
 if ( zone == null ) { return INSTANCE_UTC ; } if ( localOnly ) {
 if (!isUTC)
return INSTANCE_UTC. get ( ) ;
 return getInstance(UTC) ; }
 if ( zone == null) { return this; } if ( zone == UTC ) {
 if (date == null) { return this; }
 if (base == null) return this;
 super. withUTC ( ) ;
 if ( zone == null) { return this ; } if (zone == getZone()) {
return INSTANCE_UTC. withUTC ( minDays ) ;
 if (base == null) { return this};
 return getInstance(UTC, minDays), this;
 if (UTC == null)
 if (getInstance() == null) {
return INSTANCE_UTC. withUTC ( this. timeZone ) ;
 if ( zone == null) { return INSTANCE_UTC; } if ( zone == null) { return this; } else {
return INSTANCE_UTC. withUTC ( UTC ) ;
 return ChronologyUtils.INSTANCE_UTC;
 if (base == null) { return this;
 if ( zone == null ) { return INSTANCE_UTC ; } else if ( zone == null ) { return this ; }
return INSTANCE_UTC. getInstance ( ) ;
 if (isDefault()) {
 return this. withUTC ( "UTC" )
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone!= null ) { return this ; }
 if (date == null) {
return  getInstance(UTC, minDays, this);
 if (getInstance(UTC)) {
return  getInstance(UTC, minDays, null);
 if (base == null) { return this }
 return getInstance(UTC, minDays) this;
 return Chronology. NO_INSTANCE_UTC;
 if ( zone == null) { return this ; } if (zone == null) { return this;
return INSTANCE_UTC_UTC ;
 if (base == null) { return this; } else {
 if (getInstance == null) {
 return Chronology. getInstance ( Chronology.INSTANCE_UTC;
 if (base == null)
 if (zone == null) { return this; } else {
 if (base == null) return null;
return INSTANCE_UTC. withUTC ( this, this ) ;
 if (isUTC == false) {
 return this.withUTC(...);
 return getINSTANCE_UTC;
 return getInstance(UTC).withUTC();
 if (zone == null) { setZone(zone); }
return INSTANCE_UTC. withUTC ( "UTC" )
 if (isUTC == true) {
 return Chronology. ATOMOS_INSTANCE_UTC;
 if ( base == null ) { return INSTANCE_UTC ; } else {
 if (base == null) { base = this; }
 return getInstance(ZoneTimeZone.GMT).INSTANCE_UTC;
 if ( zone == null ) { return INSTANCE_UTC ; } else if ( zone == null ) { return this ; } else {
 if (UTC)
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return this ; } }
 return getInstance(UTC.getDefault() );
 return getInstance(ZoneTimeZone.GMT_INSTANCE_UTC;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return this ; } return zone ; }
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return this ; } else
return INSTANCE_UTC. withUTC ( this ) ; return this ;
 if (zone == null) { return INSTANCE_UTC; } else
 return getInstance(ZoneTimeZone.UTC).INSTANCE_UTC;
 return PlainChronology.INSTANCE_UTC;
 return this.withZone(TimeZone.INSTANCE_UTC;
 return getInstance(UTC;
 return PlainTimeZone.INSTANCE_UTC;
 return Chronology. LOCAL_INSTANCE_UTC;
 return Chronology. WITH_INSTANCE_UTC;
return INSTANCE_UTC. withUTC ( this, base )
 if (zone == null) { return INSTANCE_GMT; } else
 return GJChronologyImpl.INSTANCE_UTC;
 if (base == null) { return null }
return INSTANCE_UTC. withUTC ( zone ) ;
 if (null) {
 return withUTC ( ) ;
 if (local == null)
return INSTANCE_UTC. withUTC ( dateTime ) ;
 if (isUTC() == false) {
 return Chronology. INSTANCE_FOR_INSTANCE_UTC;
 return new Chronology(UTC, this);
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return this ; } } }
 return getInstance ( UTC )
 return getInstance(UTC, 1);
 return this + UTC ;
 return getInstance(UTC, minDays());
 return _INSTANCE_UTC;
return  new Chronology ( ) ;
 return (Object) this;
 return this. withZone ( ZONE_INSTANCE_UTC;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone == null ) { return this ; } return this ; }
 return Chronology. INSTANCE_OF_INSTANCE_UTC;
 return this ; } return this;
 if ( zone == null ) { return INSTANCE_UTC ; } else if ( zone == null ) { return this ; } else { }
 return this ; } else { return this;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( zone!= null ) { return this ; } } }
 if ( zone == null) { return INSTANCE_UTC; } if ( zone == null) { return this; } else,
 return getInstance(UTC, 0 UTC;
return INSTANCE_UTC. withUTC ( this )
 return getInstance(UTC, minDays);;
 if ( zone == null ) { return INSTANCE_UTC ; } else if ( zone == null ) { return this ; } } } ;
 return this ( ) ;
 return this.withZone(ZONE.INSTANCE_UTC;
 return getInstance(UTC) this;
 return getInstance(UTC, );
 getInstance(UTC) ;
 if (isDefault()) { return this;
 if (isUTC)
 if (zone == null) { return INSTANCE_UTC; } }
 return chrono ;
 if ( zone == null ) { return INSTANCE_UTC ; } if ( base == null ) { }
return INSTANCE_UTC. withUTC ( this ) ; } } ;
return INSTANCE_UTC. withUTC ;
 if (isUTC == false)
 return Chronology. _INSTANCE_UTC;
 return Chronology. INSTANCE_UNINSTANCE_UTC;
 return this ; } }
 return thisUTC;
 if (base == null) { return this; } else
 return this; return this;
 return this - UTC ;
 return getInstance(...);
return INSTANCE_UTC_GMT ;
return INSTANCE_UTC ( ) ;
return INSTANCE_UTC. with ( ) ;
 if (zone == null) { return this; } else
 if (!withUTC)
 if ( zone == null ) { return INSTANCE_UTC ; } else { }
return INSTANCE_UTC_ZONE ;
 return getInstance(UTC), this;
return INSTANCE_UTC_TIMEZone ;
 if ( zone == null ) { return INSTANCE_GMT ; } else { }
 if ( zone == null) { return this; } if ( zone == this) {}
 return withUTC;
 return getInstance;
 if (base == null) { return this; } else,
return INSTANCE_UTC_TIME ;
return INSTANCE_UTC. with ( this);
 return this.INSTANCE_UTC;
return INSTANCE_UTC_LOCAL ;
return INSTANCE_UTC + this ;
 return Chronology#INSTANCE_UTC;
 return this in UTC;
 return Chronology::INSTANCE_UTC;
 return "UTC";
 return UTC
 return { this ;
 return chronology.INSTANCE_UTC;
 return null
 return TimeZone.INSTANCE_UTC;
 return #INSTANCE_UTC;
 return this ;
 return Time.INSTANCE_UTC;
 return ;
 return chronology;
return INSTANCE_UTCUTC ;
 return Clock.INSTANCE_UTC;
 return this; }
 return Calendar#INSTANCE_UTC;
 return UNINSTANCE_UTC;
 return "INSTANCE_UTC;
return INSTANCE_UTC_ ;
 return {
 return null ;
 if (!)
...
 if (!UTC
 return UTC ;
 if (! {
 do nothing
 return base;
 return
 do {
 do not
 return super;
 do this
 *
